<?xml version="1.0" encoding="utf-8"?>
<Ext.Net xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <Classes>
    <Class Name="AbsoluteLayout" Extends="AnchorLayout">
      <Summary><![CDATA[This layout adds the ability for x/y positioning using the standard x and y component config options.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:AbsoluteLayout id=\&quot;AbsoluteLayout1\&quot; runat=\&quot;server\&quot;&gt;&lt;Anchors&gt;&lt;{0}:Anchor&gt;&lt;{0}:Panel runat=\&quot;server\&quot; Title=\&quot;Panel 1\&quot; X=\&quot;50\&quot; Y=\&quot;50\&quot; Width=\&quot;200\&quot; Height=\&quot;100\&quot;Frame=\&quot;true\&quot; BodyStyle=\&quot;padding:15px;\&quot;&gt;&lt;Content&gt;Positioned at x:50, y:50&lt;/Content&gt;&lt;/{0}:Panel&gt;&lt;/{0}:Anchor&gt;&lt;{0}:Anchor&gt;&lt;{0}:Panel runat=\&quot;server\&quot; Title=\&quot;Panel 2\&quot; X=\&quot;125\&quot; Y=\&quot;125\&quot; Width=\&quot;200\&quot;Height=\&quot;100\&quot; Frame=\&quot;true\&quot; BodyStyle=\&quot;padding:15px;\&quot;&gt;&lt;Content&gt;Positioned at x:125, y:125&lt;/Content&gt;&lt;/{0}:Panel&gt;&lt;/{0}:Anchor&gt;&lt;/Anchors&gt;&lt;/{0}:AbsoluteLayout&gt;&quot;" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(AbsoluteLayout), &quot;Build.ToolboxIcons.Layout.bmp&quot;" />
        <Attribute Type="Description" RawValue="This layout adds the ability for x/y positioning using the standard x and y component config options." />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="AbstractSelectionModel" Abstract="true" Extends="LazyObservable">
      <Summary><![CDATA[Abstract base class for grid SelectionModels. It provides the interface that should be implemented by descendant classes. This class should not be directly instantiated.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" RawValue="Abstract base class for grid SelectionModels. It provides the interface that should be implemented by descendant classes. This class should not be directly instantiated." />
      </Attributes>
      <ConfigOptions />
      <Methods>
        <Method Name="Lock">
          <Summary><![CDATA[Locks the selections.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Locks the selections." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Unlock">
          <Summary><![CDATA[Unlocks the selections.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Unlocks the selections." />
          </Attributes>
          <Parameters />
        </Method>
      </Methods>
    </Class>
    <Class Name="AbstractTreeSelectionModel" Abstract="true" Extends="LazyObservable">
      <Attributes />
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="AccordionLayout" Extends="ContainerLayout">
      <Summary><![CDATA[This is a base class for layouts that contain a single items that automatically expands to fill the layout's content Container. This class is intended to be extended or created via the layout:'fit' Ext.Container.layout config, and should generally not need to be created directly via the new keyword. FitLayout does not have any direct config options (other than inherited ones). To fit a panel to a content Container using FitLayout, simply set layout:'fit' on the content Container and add a single panel to it. If the content Container has multiple panels, only the first one will be displayed.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:AccordionLayout runat=\&quot;server\&quot; Animate=\&quot;true\&quot;&gt;&lt;Items&gt;&lt;{0}:Panel runat=\&quot;server\&quot; Border=\&quot;false\&quot; Title=\&quot;Item 1\&quot;&gt;&lt;Items&gt;&lt;/Items&gt;&lt;/{0}:Panel&gt;&lt;{0}:Panel runat=\&quot;server\&quot; Border=\&quot;false\&quot; Title=\&quot;Item 2\&quot; Collapsed=\&quot;true\&quot;&gt;&lt;Items&gt;&lt;/Items&gt;&lt;/{0}:Panel&gt;&lt;/Items&gt;&lt;/{0}:AccordionLayout&gt;&quot;" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(AccordionLayout), &quot;Build.ToolboxIcons.Layout.bmp&quot;" />
        <Attribute Type="Designer" RawValue="typeof(AccordionDesigner)" />
        <Attribute Type="Description" RawValue="This is a base class for layouts that contain a single items that automatically expands to fill the layout's content Container. This class is intended to be extended or created via the layout:'fit' Ext.Container.layout config, and should generally not need to be created directly via the new keyword. FitLayout does not have any direct config options (other than inherited ones). To fit a panel to a content Container using FitLayout, simply set layout:'fit' on the content Container and add a single panel to it. If the content Container has multiple panels, only the first one will be displayed." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="LayoutConfig" Modifier="Override" Access="ProtectedInternal" Type="LayoutConfig">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Object" />
            <Attribute Type="Browsable" RawValue="false" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ActiveOnTop" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to swap the position of each panel as it is expanded so that it becomes the first items in the content Container, false to keep the panels in the rendered order. This is NOT compatible with 'animate:true' (defaults to false).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;6. AccordionLayout&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to swap the position of each panel as it is expanded so that it becomes the first items in the content Container, false to keep the panels in the rendered order. This is NOT compatible with 'animate:true' (defaults to false)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="OriginalHeader" Type="bool" DefaultValue="false">
          <Summary><![CDATA[If true then original header UI is used]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;6. AccordionLayout&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="If true then original header UI is used" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Animate" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to slide the contained panels open and closed during expand/collapse using animation, false to open and close directly with no animation (defaults to false). Note: to defer to the specific config setting of each contained panel for this property, set this to undefined at the layout level.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;6. AccordionLayout&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to slide the contained panels open and closed during expand/collapse using animation, false to open and close directly with no animation (defaults to false). Note: to defer to the specific config setting of each contained panel for this property, set this to undefined at the layout level." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AutoWidth" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to set each contained items's width to 'auto', false to use the items's current width (defaults to true).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;6. AccordionLayout&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="True to set each contained items's width to 'auto', false to use the items's current width (defaults to true)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CollapseFirst" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to make sure the collapse/expand toggle button always renders first (to the left of) any other tools in the contained panels' title bars, false to render it last (defaults to false).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;6. AccordionLayout&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to make sure the collapse/expand toggle button always renders first (to the left of) any other tools in the contained panels' title bars, false to render it last (defaults to false)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Fill" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to adjust the active items's height to fill the available space in the content Container, false to use the items's current height, or auto height if not explicitly set (defaults to true).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;6. AccordionLayout&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="True to adjust the active items's height to fill the available space in the content Container, false to use the items's current height, or auto height if not explicitly set (defaults to true)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HideCollapseTool" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to hide the contained panels' collapse/expand toggle buttons, false to display them (defaults to false). When set to true, titleCollapse should be true also.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;6. AccordionLayout&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to hide the contained panels' collapse/expand toggle buttons, false to display them (defaults to false). When set to true, titleCollapse should be true also." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Sequence" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Experimental. If animate is set to true, this will result in each animation running in sequence.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;6. AccordionLayout&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="Experimental. If animate is set to true, this will result in each animation running in sequence." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TitleCollapse" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to allow expand/collapse of each contained panel by clicking anywhere on the title bar, false to allow expand/collapse only when the toggle tool button is clicked (defaults to true). When set to false, hideCollapseTool should be false also.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;6. AccordionLayout&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="True to allow expand/collapse of each contained panel by clicking anywhere on the title bar, false to allow expand/collapse only when the toggle tool button is clicked (defaults to true). When set to false, hideCollapseTool should be false also." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="AccordionLayoutConfig" Extends="LayoutConfig">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="ActiveOnTop" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to swap the position of each panel as it is expanded so that it becomes the first item in the container, false to keep the panels in the rendered order. This is NOT compatible with Animate=\"true\" (defaults to false).]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to swap the position of each panel as it is expanded so that it becomes the first item in the container, false to keep the panels in the rendered order. This is NOT compatible with Animate=\&quot;true\&quot; (defaults to false)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="OriginalHeader" Type="bool" DefaultValue="false">
          <Summary><![CDATA[If true then original header UI is used]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="If true then original header UI is used" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Animate" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to slide the contained panels open and closed during expand/collapse using animation, false to open and close directly with no animation (defaults to false). Note: to defer to the specific config setting of each contained panel for this property, set this to undefined at the layout level.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to slide the contained panels open and closed during expand/collapse using animation, false to open and close directly with no animation (defaults to false). Note: to defer to the specific config setting of each contained panel for this property, set this to undefined at the layout level." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AutoWidth" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to set each contained item's width to 'auto', false to use the item's current width (defaults to true). Note that some components, in particular the grid, will not function properly within layouts if they have auto width, so in such cases this config should be set to false.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="True to set each contained item's width to 'auto', false to use the item's current width (defaults to true). Note that some components, in particular the grid, will not function properly within layouts if they have auto width, so in such cases this config should be set to false." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CollapseFirst" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to make sure the collapse/expand toggle button always renders first (to the left of) any other tools in the contained panels' title bars, false to render it last (defaults to false).]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to make sure the collapse/expand toggle button always renders first (to the left of) any other tools in the contained panels' title bars, false to render it last (defaults to false)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Fill" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to adjust the active item's height to fill the available space in the container, false to use the item's current height, or auto height if not explicitly set (defaults to true).]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="True to adjust the active item's height to fill the available space in the container, false to use the item's current height, or auto height if not explicitly set (defaults to true)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HideCollapseTool" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to hide the contained panels' collapse/expand toggle buttons, false to display them (defaults to false). When set to true, titleCollapse should be true also.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to hide the contained panels' collapse/expand toggle buttons, false to display them (defaults to false). When set to true, titleCollapse should be true also." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Sequence" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Experimental. If animate is set to true, this will result in each animation running in sequence.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="Experimental. If animate is set to true, this will result in each animation running in sequence." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TitleCollapse" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to allow expand/collapse of each contained panel by clicking anywhere on the title bar, false to allow expand/collapse only when the toggle tool button is clicked (defaults to true). When set to false, hideCollapseTool should be false also.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="True to allow expand/collapse of each contained panel by clicking anywhere on the title bar, false to allow expand/collapse only when the toggle tool button is clicked (defaults to true). When set to false, hideCollapseTool should be false also." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="AfterDirectEventArgs" Extends="EventArgs">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="AfterRecordDeletedEventArgs" Extends="RecordModifiedEventArgs">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="AfterRecordInsertedEventArgs" Extends="RecordModifiedEventArgs">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="AfterRecordUpdatedEventArgs" Extends="RecordModifiedEventArgs">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="AfterStoreChangedEventArgs" Extends="EventArgs">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="Anchor" Extends="LayoutItem">
      <Summary><![CDATA[Tells the layout how an item should be anchored to the container. items added to an AnchorLayout accept an anchoring-specific config property of anchor which is a string containing two values: the horizontal anchor value and the vertical anchor value (for example, '100% 50%').]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" RawValue="Tells the layout how an item should be anchored to the container. items added to an AnchorLayout accept an anchoring-specific config property of anchor which is a string containing two values: the horizontal anchor value and the vertical anchor value (for example, '100% 50%')." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="IsFormField" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True if component should be rendered as a Form Field with a Field Label and Label separator (defaults to false).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. AnchorLayout&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True if component should be rendered as a Form Field with a Field Label and Label separator (defaults to false)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Horizontal" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[Horizontal Anchor value. Can be a Percentage (1-100%), an Offset (Any positive or negative integer value), a Sides value (Valid values are 'right' (or 'r') and 'bottom' (or 'b').).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;6. AnchorLayout&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Horizontal Anchor value. Can be a Percentage (1-100%), an Offset (Any positive or negative integer value), a Sides value (Valid values are 'right' (or 'r') and 'bottom' (or 'b').)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Vertical" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[Vertical Anchor value. Can be a Percentage (1-100%), an Offset (Any positive or negative integer value), a Sides value (Valid values are 'right' (or 'r') and 'bottom' (or 'b').).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;6. AnchorLayout&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Vertical Anchor value. Can be a Percentage (1-100%), an Offset (Any positive or negative integer value), a Sides value (Valid values are 'right' (or 'r') and 'bottom' (or 'b').)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AnchorProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;anchor&quot;, JsonMode.Value" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Browsable" RawValue="false" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="AnchorCollection" Extends="StateManagedCollection&lt;Anchor&gt;">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="AnchorLayout" Extends="ContainerLayout">
      <Summary><![CDATA[This is a layout that enables anchoring of contained elements relative to the container's dimensions. If the container is resized, all anchored items are automatically rerendered according to their anchor rules.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:AnchorLayout runat=\&quot;server\&quot;&gt;&lt;Anchors&gt;&lt;ext:Anchor&gt;&lt;!-- Single Control Here --&gt;&lt;/ext:Anchor&gt;&lt;/Anchors&gt;&lt;/{0}:AnchorLayout&gt;&quot;" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(AnchorLayout), &quot;Build.ToolboxIcons.Layout.bmp&quot;" />
        <Attribute Type="Description" RawValue="This is a layout that enables anchoring of contained elements relative to the container's dimensions. If the container is resized, all anchored items are automatically rerendered according to their anchor rules." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Height" Modifier="Override" Type="Unit" DefaultValue="typeof(Unit), &quot;&quot;">
          <Summary><![CDATA[The height of this Anchor in pixels (defaults to auto).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Ignore" />
            <Attribute Type="Category" RawValue="&quot;6. AnchorLayout&quot;" />
            <Attribute Type="DefaultValue" RawValue="typeof(Unit), &quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Browsable" RawValue="true" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="The height of this Anchor in pixels (defaults to auto)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Width" Modifier="Override" Type="Unit" DefaultValue="typeof(Unit), &quot;&quot;">
          <Summary><![CDATA[The width of this Anchor in pixels (defaults to auto).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Ignore" />
            <Attribute Type="Category" RawValue="&quot;6. AnchorLayout&quot;" />
            <Attribute Type="DefaultValue" RawValue="typeof(Unit), &quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Browsable" RawValue="true" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="The width of this Anchor in pixels (defaults to auto)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AnchorSize" Type="AnchorSize" DefaultValue="null">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;anchorSize&quot;, JsonMode.Object" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Browsable" RawValue="false" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Anchors" Type="AnchorCollection">
          <Summary><![CDATA[Anchors collection]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;6. AnchorLayout&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Anchors collection" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="AnchorSize" Extends="ExtObject">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="IsFormField" Type="bool" DefaultValue="false">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Width" Type="Unit" DefaultValue="typeof(Unit), &quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="typeof(Unit), &quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Height" Type="Unit" DefaultValue="typeof(Unit), &quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="typeof(Unit), &quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ArrayReader" Extends="JsonReader">
      <Summary><![CDATA[Data reader class to create an Array of Ext.data.Record objects from an Array.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" RawValue="Data reader class to create an Array of Ext.data.Record objects from an Array." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="IDProperty" Modifier="Override" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[[id] Name of the property within a row object that contains a record identifier value. Defaults to id]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Ignore" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="[id] Name of the property within a row object that contains a record identifier value. Defaults to id" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IDIndex" Type="int" DefaultValue="-1">
          <Summary><![CDATA[The subscript within row Array that provides an ID for the Record.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="-1" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The subscript within row Array that provides an ID for the Record." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IDIndexProxy" Access="Protected" Type="int" DefaultValue="-1">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;idIndex&quot;" />
            <Attribute Type="DefaultValue" RawValue="-1" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="AsyncTreeNode" Extends="TreeNodeBase">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="NodeType" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Listeners" Type="AsyncTreeNodeListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Loader" Type="TreeLoaderCollection" DefaultValue="null">
          <Summary><![CDATA[The root node for the tree.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;loader&gt;Primary&quot;" />
            <Attribute Type="Category" RawValue="&quot;7. TreePanel&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="The root node for the tree." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="AsyncTreeNodeListeners" Extends="TreeNodeListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="BeforeLoad" Type="ComponentListener">
          <Summary><![CDATA[Fires before this node is loaded, return false to cancel]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;node&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeload&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before this node is loaded, return false to cancel" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Load" Type="ComponentListener">
          <Summary><![CDATA[Fires when this node is loaded]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;node&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;load&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when this node is loaded" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="AutoLoadParamsJsonConverter" Extends="ExtJsonConverter">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="BaseDirectEvent" Extends="BaseListener">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="CleanRequest" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Only extra params will be added to request. Useful if request has web-service Url]]></Summary>
          <Attributes>
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Only extra params will be added to request. Useful if request has web-service Url" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DisableCaching" Type="bool?" DefaultValue="null">
          <Summary><![CDATA[True to add a unique cache-buster param to GET requests.]]></Summary>
          <Attributes>
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to add a unique cache-buster param to GET requests." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DisableCachingParam" Type="string" DefaultValue="&quot;_dc&quot;">
          <Summary><![CDATA[Change the parameter which is sent went disabling caching through a cache buster. Defaults to '_dc']]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;_dc&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Change the parameter which is sent went disabling caching through a cache buster. Defaults to '_dc'" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IsUpload" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True if the form object is a file upload]]></Summary>
          <Attributes>
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True if the form object is a file upload" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Json" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True if the form object is a file upload]]></Summary>
          <Attributes>
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True if the form object is a file upload" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ViewStateMode" Type="ViewStateMode" DefaultValue="ViewStateMode.Inherit">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="DefaultValue" RawValue="ViewStateMode.Inherit" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Type" Type="DirectEventType" DefaultValue="DirectEventType.Submit">
          <Summary><![CDATA[The type of DirectEvent to perform. The 'Submit' type will submit the &lt;form> and 'Load' will make a POST request to url set in the .Url property, or the current url if the .Url property has not been set.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="DefaultValue" RawValue="DirectEventType.Submit" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The type of DirectEvent to perform. The 'Submit' type will submit the &amp;lt;form&gt; and 'Load' will make a POST request to url set in the .Url property, or the current url if the .Url property has not been set." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="UrlProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The default URL to be used for requests to the server if DirectEventType.Request. (defaults to '')]]></Summary>
          <Attributes>
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="ConfigOption" RawValue="&quot;url&quot;" />
            <Attribute Type="Description" RawValue="The default URL to be used for requests to the server if DirectEventType.Request. (defaults to '')" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Method" Type="HttpMethod" DefaultValue="HttpMethod.Default">
          <Summary><![CDATA[The HTTP method to use. Defaults to POST if params are present, or GET if not.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;method&quot;" />
            <Attribute Type="DefaultValue" RawValue="HttpMethod.Default" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The HTTP method to use. Defaults to POST if params are present, or GET if not." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Timeout" Type="int" DefaultValue="30000">
          <Summary><![CDATA[The timeout in milliseconds to be used for requests. (defaults to 30000)]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="DefaultValue" RawValue="30000" />
            <Attribute Type="Description" RawValue="The timeout in milliseconds to be used for requests. (defaults to 30000)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="FormProxyArg" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Hidden" />
            <Attribute Type="Browsable" RawValue="false" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ExtraParams" Type="ParameterCollection">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.ArrayToObject" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EventMask" Type="EventMask">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Object" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ShowWarningOnFailure" Type="bool" DefaultValue="true">
          <Summary><![CDATA[Show a Window with error message is DirectEvent request fails. This message Window will only show if a Failure Handler does not exist.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Show a Window with error message is DirectEvent request fails. This message Window will only show if a Failure Handler does not exist." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="BaseListener" Extends="StateManagedItem">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Scope" Type="string" DefaultValue="&quot;this&quot;">
          <Summary><![CDATA[The scope in which to execute the handler function. The handler function's 'this' context.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;this&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The scope in which to execute the handler function. The handler function's 'this' context." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Delegate" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A simple selector to filter the target or look for a descendant of the target]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="A simple selector to filter the target or look for a descendant of the target" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="StopEvent" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to stop the event. That is stop propagation, and prevent the default action.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to stop the event. That is stop propagation, and prevent the default action." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="PreventDefault" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to prevent the default action.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to prevent the default action." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="StopPropagation" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to prevent event propagation.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to prevent event propagation." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Normalized" Type="bool" DefaultValue="false">
          <Summary><![CDATA[False to pass a browser event to the handler function instead of an Ext.EventObject.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="False to pass a browser event to the handler function instead of an Ext.EventObject." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Delay" Type="int" DefaultValue="20">
          <Summary><![CDATA[The number of milliseconds to delay the invocation of the handler after the event fires.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="20" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The number of milliseconds to delay the invocation of the handler after the event fires." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Single" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to add a handler to handle just the next firing of the event, and then remove itself.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to add a handler to handle just the next firing of the event, and then remove itself." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Buffer" Type="int" DefaultValue="0">
          <Summary><![CDATA[Causes the handler to be scheduled to run in an Ext.util.DelayedTask delayed by the specified number of milliseconds. If the event fires again within that time, the original handler is not invoked, but the new handler is scheduled in its place.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="0" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Causes the handler to be scheduled to run in an Ext.util.DelayedTask delayed by the specified number of milliseconds. If the event fires again within that time, the original handler is not invoked, but the new handler is scheduled in its place." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="BaseLoadConfig" Extends="StateManagedItem">
      <Attributes>
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="UrlProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;url&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CallbackProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;callback&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Scope" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DiscardUrl" Type="bool" DefaultValue="false">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="NoCache" Type="bool" DefaultValue="false">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;nocache&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Text" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ScriptsProxy" Access="Protected" Type="bool" DefaultValue="false">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;scripts&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Timeout" Type="int" DefaultValue="0">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="0" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Params" Type="ParameterCollection">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.ArrayToObject" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Method" Type="HttpMethod" DefaultValue="HttpMethod.Default">
          <Summary><![CDATA[The HTTP method to use. Defaults to POST if params are present, or GET if not.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;method&quot;" />
            <Attribute Type="DefaultValue" RawValue="HttpMethod.Default" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The HTTP method to use. Defaults to POST if params are present, or GET if not." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="BaseMenuItem" Abstract="true" Extends="Component">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="ActiveClass" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The CSS class to use when the item becomes activated (defaults to \"x-menu-item-active\").]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. BaseItem&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The CSS class to use when the item becomes activated (defaults to \&quot;x-menu-item-active\&quot;)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CanActivate" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True if this item can be visually activated (defaults to false).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. BaseItem&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True if this item can be visually activated (defaults to false)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Handler" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A function that will handle the click event of this menu item (defaults to undefined).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;4. BaseItem&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="A function that will handle the click event of this menu item (defaults to undefined)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Scope" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The scope (this reference) in which the handler function will be called.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;4. BaseItem&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The scope (this reference) in which the handler function will be called." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HideDelay" Type="int" DefaultValue="100">
          <Summary><![CDATA[Length of time in milliseconds to wait before hiding after a click (defaults to 100).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;4. BaseItem&quot;" />
            <Attribute Type="DefaultValue" RawValue="100" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Length of time in milliseconds to wait before hiding after a click (defaults to 100)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HideOnClick" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to hide the containing menu after this item is clicked (defaults to true).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. BaseItem&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to hide the containing menu after this item is clicked (defaults to true)." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="BaseMenuItemDirectEvents" Extends="ComponentDirectEvents">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Activate" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when this item is activated]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Component), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;activate&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when this item is activated" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Click" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when this item is clicked]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Component), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object), &quot;Ext.EventObject&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;click&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when this item is clicked" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Deactivate" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when this item is deactivated]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Component), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;activate&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when this item is deactivated" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="BaseMenuItemListeners" Extends="ComponentBaseListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Activate" Type="ComponentListener">
          <Summary><![CDATA[Fires when this item is activated]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Component), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;activate&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when this item is activated" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Click" Type="ComponentListener">
          <Summary><![CDATA[Fires when this item is clicked]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Component), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(Component), &quot;Ext.EventObject&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;click&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when this item is clicked" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Deactivate" Type="ComponentListener">
          <Summary><![CDATA[Fires when this item is deactivated]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Component), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;activate&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when this item is deactivated" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="BaseParameter" Abstract="true" Extends="StateManagedItem">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="DefaultProperty" RawValue="&quot;Params&quot;" />
        <Attribute Type="ParseChildren" RawValue="true, &quot;Params&quot;" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Name" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Value" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Mode" Type="ParameterMode" DefaultValue="ParameterMode.Value">
          <Summary><![CDATA[Wrap in quotes or not]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="ParameterMode.Value" />
            <Attribute Type="Description" RawValue="Wrap in quotes or not" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Encode" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Encode value, it might be useful when value is js object]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="Encode value, it might be useful when value is js object" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Params" Type="ParameterCollection">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerDefaultProperty" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="BaseScriptBuilder" Abstract="true">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="BaseTriggerField" Abstract="true" Extends="TriggerFieldBase" Inherits="IPostBackEventHandler">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="TriggerClass" Modifier="Override" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Browsable" RawValue="false" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="EditorBrowsable" RawValue="EditorBrowsableState.Never" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Hidden" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="BeforeDirectEventArgs" Extends="EventArgs">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="BeforeRecordDeletedEventArgs" Extends="RecordModifiedEventArgs">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="BeforeRecordInsertedEventArgs" Extends="RecordModifiedEventArgs">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="BeforeRecordUpdatedEventArgs" Extends="RecordModifiedEventArgs">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="BeforeStoreChangedEventArgs" Extends="EventArgs">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="BooleanColumn" Extends="Column">
      <Attributes>
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="XType" Modifier="Override" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;xtype&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="FalseText" Type="string" DefaultValue="&quot;false&quot;">
          <Summary><![CDATA[The string returned by the renderer when the column value is falsey (but not undefined) (defaults to 'false').]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. BooleanColumn&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;false&quot;" />
            <Attribute Type="Description" RawValue="The string returned by the renderer when the column value is falsey (but not undefined) (defaults to 'false')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TrueText" Type="string" DefaultValue="&quot;true&quot;">
          <Summary><![CDATA[The string returned by the renderer when the column value is not falsey (defaults to 'true').]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. BooleanColumn&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;true&quot;" />
            <Attribute Type="Description" RawValue="The string returned by the renderer when the column value is not falsey (defaults to 'true')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="UndefinedText" Type="string" DefaultValue="&quot;&amp;#160;&quot;">
          <Summary><![CDATA[The string returned by the renderer when the column value is undefined (defaults to ' ').]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. BooleanColumn&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&amp;#160;&quot;" />
            <Attribute Type="Description" RawValue="The string returned by the renderer when the column value is undefined (defaults to ' ')." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="BooleanFilter" Extends="GridFilter">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Type" Modifier="Override" Type="FilterType">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="Category" RawValue="&quot;3. BooleanFilter&quot;" />
            <Attribute Type="Browsable" RawValue="false" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Hidden" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="YesText" Type="string" DefaultValue="&quot;Yes&quot;">
          <Summary><![CDATA[The text displayed for the 'Yes' checkbox]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. BooleanFilter&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;Yes&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The text displayed for the 'Yes' checkbox" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="NoText" Type="string" DefaultValue="&quot;No&quot;">
          <Summary><![CDATA[The text displayed for the 'No' checkbox]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. BooleanFilter&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;No&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The text displayed for the 'No' checkbox" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DefaultValue" Type="bool" DefaultValue="false">
          <Summary><![CDATA[The default value of this filter (defaults to false)]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. BooleanFilter&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The default value of this filter (defaults to false)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Value" Type="bool?" DefaultValue="null">
          <Summary><![CDATA[Predefined filter value]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. BooleanFilter&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="Predefined filter value" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="BorderLayout" Extends="ContainerLayout">
      <Summary><![CDATA[This is a multi-pane, application-oriented UI layout style that supports multiple nested panels, automatic split bars between regions and built-in expanding and collapsing of regions.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ParseChildren" RawValue="true" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:BorderLayout runat=\&quot;server\&quot;&gt;&lt;West Split=\&quot;true\&quot; Collapsible=\&quot;true\&quot;&gt;&lt;{0}:Panel runat=\&quot;server\&quot; Title=\&quot;West\&quot; Width=\&quot;175\&quot; /&gt;&lt;/West&gt;&lt;Center&gt;&lt;{0}:Panel runat=\&quot;server\&quot; Title=\&quot;Center\&quot; /&gt;&lt;/Center&gt;&lt;East Split=\&quot;true\&quot; Collapsible=\&quot;true\&quot;&gt;&lt;{0}:Panel runat=\&quot;server\&quot; Title=\&quot;East\&quot; Width=\&quot;175\&quot; /&gt;&lt;/East&gt;&lt;South Split=\&quot;true\&quot; Collapsible=\&quot;true\&quot;&gt;&lt;{0}:Panel runat=\&quot;server\&quot; Title=\&quot;South\&quot; Height=\&quot;150\&quot; /&gt;&lt;/South&gt;&lt;/{0}:BorderLayout&gt;&quot;" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(BorderLayout), &quot;Build.ToolboxIcons.Layout.bmp&quot;" />
        <Attribute Type="Designer" RawValue="typeof(BorderLayoutDesigner)" />
        <Attribute Type="Description" RawValue="This is a multi-pane, application-oriented UI layout style that supports multiple nested panels, automatic split bars between regions and built-in expanding and collapsing of regions." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="North" Type="BorderLayoutRegion">
          <Summary><![CDATA[Represent options of north region]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Represent options of north region" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="South" Type="BorderLayoutRegion">
          <Summary><![CDATA[Represent options of south region]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Represent options of south region" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="West" Type="BorderLayoutRegion">
          <Summary><![CDATA[Represent options of west region]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Represent options of west region" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="East" Type="BorderLayoutRegion">
          <Summary><![CDATA[Represent options of east region]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Represent options of east region" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Center" Type="BorderLayoutRegion">
          <Summary><![CDATA[Represent options of center region]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Represent options of center region" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="BorderLayoutRegion" Extends="StateManagedItem">
      <Summary><![CDATA[This is a region of a BorderLayout that acts as a subcontainer within the layout. Each region has its own layout that is independent of other regions and the containing BorderLayout, and can be any of the valid Ext layout types.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="DefaultProperty" RawValue="&quot;Items&quot;" />
        <Attribute Type="ParseChildren" RawValue="true, &quot;Items&quot;" />
        <Attribute Type="Description" RawValue="This is a region of a BorderLayout that acts as a subcontainer within the layout. Each region has its own layout that is independent of other regions and the containing BorderLayout, and can be any of the valid Ext layout types." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Items" Type="ItemsCollection&lt;Component&gt;">
          <Summary><![CDATA[Region items]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. BorderLayoutRegion&quot;" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerDefaultProperty" />
            <Attribute Type="Editor" RawValue="typeof(ItemCollectionEditor), typeof(UITypeEditor)" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Region items" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Region" Type="RegionPosition">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="Category" RawValue="&quot;2. BorderLayoutRegion&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AnimFloat" Type="bool" DefaultValue="true">
          <Summary><![CDATA[When a collapsed region's bar is clicked, the region's panel will be displayed as a floated panel that will close again once the user mouses out of that panel (or clicks out if AutoHide = false). Setting animFloat to false will prevent the open and close of these floated panels from being animated (defaults to true).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;2. BorderLayoutRegion&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="When a collapsed region's bar is clicked, the region's panel will be displayed as a floated panel that will close again once the user mouses out of that panel (or clicks out if AutoHide = false). Setting animFloat to false will prevent the open and close of these floated panels from being animated (defaults to true)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AutoHide" Type="bool" DefaultValue="true">
          <Summary><![CDATA[When a collapsed region's bar is clicked, the region's panel will be displayed as a floated panel. If autoHide is true, the panel will automatically hide after the user mouses out of the panel. If autoHide is false, the panel will continue to display until the user clicks outside of the panel (defaults to true).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;2. BorderLayoutRegion&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="When a collapsed region's bar is clicked, the region's panel will be displayed as a floated panel. If autoHide is true, the panel will automatically hide after the user mouses out of the panel. If autoHide is false, the panel will continue to display until the user clicks outside of the panel (defaults to true)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CMarginsSummary" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A string containing margins to apply to the region's collapsed element. Example '5 0 5 0' (addToStart, Right, Bottom, Left)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;cmargins&quot;" />
            <Attribute Type="Category" RawValue="&quot;2. BorderLayoutRegion&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="A string containing margins to apply to the region's collapsed element. Example '5 0 5 0' (addToStart, Right, Bottom, Left)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CMargins" Type="Margins" DefaultValue="&quot;-1 -1 -1 -1&quot;">
          <Summary><![CDATA[An object containing margins to apply to the region's collapsed element.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;cmargins&quot;, typeof(MarginsJsonConverter)" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.Attribute" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Content" />
            <Attribute Type="DefaultValue" RawValue="&quot;-1 -1 -1 -1&quot;" />
            <Attribute Type="Description" RawValue="An object containing margins to apply to the region's collapsed element." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CollapseMode" Type="CollapseMode" DefaultValue="CollapseMode.Default">
          <Summary><![CDATA[By default, collapsible regions are collapsed by clicking the expand/collapse tool button that renders into the region's title bar. Optionally, when collapseMode is set to 'mini' the region's split bar will also display a small collapse button in the center of the bar. In 'mini' mode the region will collapse to a thinner bar than in normal mode. By default collapseMode is undefined, and the only two supported values are undefined and 'mini'. Note that if a collapsible region does not have a title bar, then collapseMode must be set to 'mini' in order for the region to be collapsible by the user as the tool button will not be rendered.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="DefaultValue" RawValue="CollapseMode.Default" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="By default, collapsible regions are collapsed by clicking the expand/collapse tool button that renders into the region's title bar. Optionally, when collapseMode is set to 'mini' the region's split bar will also display a small collapse button in the center of the bar. In 'mini' mode the region will collapse to a thinner bar than in normal mode. By default collapseMode is undefined, and the only two supported values are undefined and 'mini'. Note that if a collapsible region does not have a title bar, then collapseMode must be set to 'mini' in order for the region to be collapsible by the user as the tool button will not be rendered." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Collapsible" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to allow the user to collapse this region (defaults to false). If true, an expand/collapse tool button will automatically be rendered into the title bar of the region, otherwise the button will not be shown. Note that a title bar is required to display the toggle button -- if no region title is specified, the region will only be collapsible if CollapseMode is set to 'Mini'.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;2. BorderLayoutRegion&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to allow the user to collapse this region (defaults to false). If true, an expand/collapse tool button will automatically be rendered into the title bar of the region, otherwise the button will not be shown. Note that a title bar is required to display the toggle button -- if no region title is specified, the region will only be collapsible if CollapseMode is set to 'Mini'." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Floatable" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to allow clicking a collapsed region's bar to display the region's panel floated above the layout, false to force the user to fully expand a collapsed region by clicking the expand button to see it again (defaults to true).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;2. BorderLayoutRegion&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to allow clicking a collapsed region's bar to display the region's panel floated above the layout, false to force the user to fully expand a collapsed region by clicking the expand button to see it again (defaults to true)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MarginsSummary" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[An string containing margins to apply to the region. Example '5 0 5 0' (addToStart, Right, Bottom, Left)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;margins&quot;" />
            <Attribute Type="Category" RawValue="&quot;2. BorderLayoutRegion&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="An string containing margins to apply to the region. Example '5 0 5 0' (addToStart, Right, Bottom, Left)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Margins" Type="Margins" DefaultValue="&quot;-1 -1 -1 -1&quot;">
          <Summary><![CDATA[An object containing margins to apply to the region.]]></Summary>
          <Attributes>
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="ConfigOption" RawValue="&quot;margins&quot;, typeof(MarginsJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.Attribute" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Content" />
            <Attribute Type="DefaultValue" RawValue="&quot;-1 -1 -1 -1&quot;" />
            <Attribute Type="Description" RawValue="An object containing margins to apply to the region." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MinHeight" Type="Unit" DefaultValue="typeof(Unit), &quot;50&quot;">
          <Summary><![CDATA[The minimum allowable height in pixels for this region (defaults to 50)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;2. BorderLayoutRegion&quot;" />
            <Attribute Type="DefaultValue" RawValue="typeof(Unit), &quot;50&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The minimum allowable height in pixels for this region (defaults to 50)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MaxHeight" Type="Unit" DefaultValue="typeof(Unit), &quot;&quot;">
          <Summary><![CDATA[The maximum allowable height in pixels for this region]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;2. BorderLayoutRegion&quot;" />
            <Attribute Type="DefaultValue" RawValue="typeof(Unit), &quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The maximum allowable height in pixels for this region" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MaxWidth" Type="Unit" DefaultValue="typeof(Unit), &quot;&quot;">
          <Summary><![CDATA[The maximum allowable width in pixels for this region.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;2. BorderLayoutRegion&quot;" />
            <Attribute Type="DefaultValue" RawValue="typeof(Unit), &quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The maximum allowable width in pixels for this region." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MinWidth" Type="Unit" DefaultValue="typeof(Unit), &quot;50&quot;">
          <Summary><![CDATA[The minimum allowable width in pixels for this region (defaults to 50)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;2. BorderLayoutRegion&quot;" />
            <Attribute Type="DefaultValue" RawValue="typeof(Unit), &quot;50&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The minimum allowable width in pixels for this region (defaults to 50)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="UseSplitTips" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to display a tooltip when the user hovers over a region's split bar (defaults to false). The tooltip text will be the value of either SplitTip or CollapsibleSplitTip as appropriate.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;2. BorderLayoutRegion&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to display a tooltip when the user hovers over a region's split bar (defaults to false). The tooltip text will be the value of either SplitTip or CollapsibleSplitTip as appropriate." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CollapsibleSplitTip" Type="string" DefaultValue="&quot;Drag to resize. Double click to hide.&quot;">
          <Summary><![CDATA[The tooltip to display when the user hovers over a collapsible region's split bar. Only applies if UseSplitTips = true.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;2. BorderLayoutRegion&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;Drag to resize. Double click to hide.&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The tooltip to display when the user hovers over a collapsible region's split bar. Only applies if UseSplitTips = true." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ExpandableSplitTip" Type="string" DefaultValue="&quot;Double click to show.&quot;">
          <Summary><![CDATA[The tooltip to display when the user hovers over a collapsible region's split bar. Only applies if UseSplitTips = true.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;2. BorderLayoutRegion&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;Double click to show.&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The tooltip to display when the user hovers over a collapsible region's split bar. Only applies if UseSplitTips = true." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Split" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to display a SplitBar between this region and its neighbor, allowing the user to resize the regions dynamically (defaults to false). When split = true, it is common to specify a minSize and maxSize for the region.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;2. BorderLayoutRegion&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to display a SplitBar between this region and its neighbor, allowing the user to resize the regions dynamically (defaults to false). When split = true, it is common to specify a minSize and maxSize for the region." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SplitTip" Type="string" DefaultValue="&quot;Drag to resize.&quot;">
          <Summary><![CDATA[The tooltip to display when the user hovers over a non-collapsible region's split bar. Only applies if UseSplitTips = true.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;2. BorderLayoutRegion&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;Drag to resize.&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The tooltip to display when the user hovers over a non-collapsible region's split bar. Only applies if UseSplitTips = true." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="BottomTitle" Extends="Plugin">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(BottomTitle), &quot;Build.ToolboxIcons.Plugin.bmp&quot;" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:BottomTitle runat=\&quot;server\&quot; /&gt;&quot;" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="Box" Extends="StateManagedItem">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="X" Type="int" DefaultValue="int.MinValue">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="int.MinValue" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Y" Type="int" DefaultValue="int.MinValue">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="int.MinValue" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Width" Type="int" DefaultValue="int.MinValue">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="int.MinValue" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Height" Type="int" DefaultValue="int.MinValue">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="int.MinValue" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="StrWidth" Type="string" DefaultValue="int.MinValue">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;width&quot;" />
            <Attribute Type="DefaultValue" RawValue="int.MinValue" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="StrHeight" Type="string" DefaultValue="null">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;height&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="BoxComponent" Extends="BoxComponentBase">
      <Summary><![CDATA[Base Class for any visual Component that uses a box content Container.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:BoxComponent runat=\&quot;server\&quot; /&gt;&quot;" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(BoxComponent), &quot;Build.ToolboxIcons.BoxComponent.bmp&quot;" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="Description" RawValue="Base Class for any visual Component that uses a box content Container." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Listeners" Type="BoxComponentListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="BoxComponentDirectEvents">
          <Summary><![CDATA[Server-side DirectEventHandlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Server-side DirectEventHandlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="BoxComponentBase" Abstract="true" Extends="Component">
      <Summary><![CDATA[Base Class for any visual Component that uses a box content Container.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" RawValue="Base Class for any visual Component that uses a box content Container." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="AutoScroll" Type="bool" DefaultValue="false">
          <Summary><![CDATA[true to use overflow:'auto' on the components layout element and show scroll bars automatically when necessary, false to clip any overflowing content (defaults to false).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetAutoScroll&quot;" />
            <Attribute Type="Category" RawValue="&quot;4. BoxComponent&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="true to use overflow:'auto' on the components layout element and show scroll bars automatically when necessary, false to clip any overflowing content (defaults to false)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AutoHeight" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to use height:'auto', false to use fixed height (defaults to false).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. BoxComponent&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to use height:'auto', false to use fixed height (defaults to false)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AutoWidth" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to use width:'auto', false to use fixed width (defaults to false).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. BoxComponent&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to use width:'auto', false to use fixed width (defaults to false)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CollapseMode" Type="CollapseMode" DefaultValue="CollapseMode.Default">
          <Summary><![CDATA[By default, collapsible regions are collapsed by clicking the expand/collapse tool button that renders into the region's title bar. Optionally, when collapseMode is set to 'mini' the region's split bar will also display a small collapse button in the center of the bar. In 'mini' mode the region will collapse to a thinner bar than in normal mode. By default collapseMode is undefined, and the only two supported values are undefined and 'mini'. Note that if a collapsible region does not have a title bar, then collapseMode must be set to 'mini' in order for the region to be collapsible by the user as the tool button will not be rendered.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="Category" RawValue="&quot;4. BoxComponent&quot;" />
            <Attribute Type="DefaultValue" RawValue="CollapseMode.Default" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="By default, collapsible regions are collapsed by clicking the expand/collapse tool button that renders into the region's title bar. Optionally, when collapseMode is set to 'mini' the region's split bar will also display a small collapse button in the center of the bar. In 'mini' mode the region will collapse to a thinner bar than in normal mode. By default collapseMode is undefined, and the only two supported values are undefined and 'mini'. Note that if a collapsible region does not have a title bar, then collapseMode must be set to 'mini' in order for the region to be collapsible by the user as the tool button will not be rendered." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BoxMaxHeight" Type="Unit" DefaultValue="typeof(Unit), &quot;&quot;">
          <Summary><![CDATA[The maximum value in pixels which this BoxComponent will set its height to. Warning: This will override any size management applied by layout managers.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. BoxComponent&quot;" />
            <Attribute Type="DefaultValue" RawValue="typeof(Unit), &quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The maximum value in pixels which this BoxComponent will set its height to. Warning: This will override any size management applied by layout managers." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BoxMaxWidth" Type="Unit" DefaultValue="typeof(Unit), &quot;&quot;">
          <Summary><![CDATA[The maximum value in pixels which this BoxComponent will set its width to. Warning: This will override any size management applied by layout managers.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. BoxComponent&quot;" />
            <Attribute Type="DefaultValue" RawValue="typeof(Unit), &quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The maximum value in pixels which this BoxComponent will set its width to. Warning: This will override any size management applied by layout managers." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BoxMinHeight" Type="Unit" DefaultValue="typeof(Unit), &quot;&quot;">
          <Summary><![CDATA[The minimum value in pixels which this BoxComponent will set its height to. Warning: This will override any size management applied by layout managers.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. BoxComponent&quot;" />
            <Attribute Type="DefaultValue" RawValue="typeof(Unit), &quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The minimum value in pixels which this BoxComponent will set its height to. Warning: This will override any size management applied by layout managers." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BoxMinWidth" Type="Unit" DefaultValue="typeof(Unit), &quot;&quot;">
          <Summary><![CDATA[The minimum value in pixels which this BoxComponent will set its width to. Warning: This will override any size management applied by layout managers.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. BoxComponent&quot;" />
            <Attribute Type="DefaultValue" RawValue="typeof(Unit), &quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The minimum value in pixels which this BoxComponent will set its width to. Warning: This will override any size management applied by layout managers." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MaxHeight" Type="Unit" DefaultValue="typeof(Unit), &quot;&quot;">
          <Summary><![CDATA[The maximum value in pixels which this BoxComponent will set its height to. Warning: This will override any size management applied by layout managers.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;4. BoxComponent&quot;" />
            <Attribute Type="DefaultValue" RawValue="typeof(Unit), &quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The maximum value in pixels which this BoxComponent will set its height to. Warning: This will override any size management applied by layout managers." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MaxWidth" Type="Unit" DefaultValue="typeof(Unit), &quot;&quot;">
          <Summary><![CDATA[The maximum value in pixels which this BoxComponent will set its width to. Warning: This will override any size management applied by layout managers.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;4. BoxComponent&quot;" />
            <Attribute Type="DefaultValue" RawValue="typeof(Unit), &quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The maximum value in pixels which this BoxComponent will set its width to. Warning: This will override any size management applied by layout managers." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MinHeight" Type="Unit" DefaultValue="typeof(Unit), &quot;&quot;">
          <Summary><![CDATA[The minimum value in pixels which this BoxComponent will set its height to. Warning: This will override any size management applied by layout managers.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;4. BoxComponent&quot;" />
            <Attribute Type="DefaultValue" RawValue="typeof(Unit), &quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The minimum value in pixels which this BoxComponent will set its height to. Warning: This will override any size management applied by layout managers." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MinWidth" Type="Unit" DefaultValue="typeof(Unit), &quot;&quot;">
          <Summary><![CDATA[The minimum value in pixels which this BoxComponent will set its width to. Warning: This will override any size management applied by layout managers.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;4. BoxComponent&quot;" />
            <Attribute Type="DefaultValue" RawValue="typeof(Unit), &quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The minimum value in pixels which this BoxComponent will set its width to. Warning: This will override any size management applied by layout managers." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RegionMaxHeight" Type="Unit" DefaultValue="typeof(Unit), &quot;&quot;">
          <Summary><![CDATA[The maximum value in pixels which this BoxComponent will set its height to in a BorderLayout Region. Warning: This will property will only be applied when this BoxComponent is rendered within a BorderLayout Region. ]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;maxHeight&quot;" />
            <Attribute Type="Category" RawValue="&quot;4. BoxComponent&quot;" />
            <Attribute Type="DefaultValue" RawValue="typeof(Unit), &quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The maximum value in pixels which this BoxComponent will set its height to in a BorderLayout Region. Warning: This will property will only be applied when this BoxComponent is rendered within a BorderLayout Region. " />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RegionMaxWidth" Type="Unit" DefaultValue="typeof(Unit), &quot;&quot;">
          <Summary><![CDATA[The maximum value in pixels which this BoxComponent will set its width to in a BorderLayout Region. Warning: This will property will only be applied when this BoxComponent is rendered within a BorderLayout Region.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;maxWidth&quot;" />
            <Attribute Type="Category" RawValue="&quot;4. BoxComponent&quot;" />
            <Attribute Type="DefaultValue" RawValue="typeof(Unit), &quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The maximum value in pixels which this BoxComponent will set its width to in a BorderLayout Region. Warning: This will property will only be applied when this BoxComponent is rendered within a BorderLayout Region." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RegionMinHeight" Type="Unit" DefaultValue="typeof(Unit), &quot;&quot;">
          <Summary><![CDATA[The minimum value in pixels which this BoxComponent will set its height to in a BorderLayout Region. Warning: This will property will only be applied when this BoxComponent is rendered within a BorderLayout Region.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;minHeight&quot;" />
            <Attribute Type="Category" RawValue="&quot;4. BoxComponent&quot;" />
            <Attribute Type="DefaultValue" RawValue="typeof(Unit), &quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The minimum value in pixels which this BoxComponent will set its height to in a BorderLayout Region. Warning: This will property will only be applied when this BoxComponent is rendered within a BorderLayout Region." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RegionMinWidth" Type="Unit" DefaultValue="typeof(Unit), &quot;&quot;">
          <Summary><![CDATA[The minimum value in pixels which this BoxComponent will set its width to in a BorderLayout Region. Warning: This will property will only be applied when this BoxComponent is rendered within a BorderLayout Region.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;minWidth&quot;" />
            <Attribute Type="Category" RawValue="&quot;4. BoxComponent&quot;" />
            <Attribute Type="DefaultValue" RawValue="typeof(Unit), &quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The minimum value in pixels which this BoxComponent will set its width to in a BorderLayout Region. Warning: This will property will only be applied when this BoxComponent is rendered within a BorderLayout Region." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Height" Modifier="Override" Type="Unit" DefaultValue="typeof(Unit), &quot;&quot;">
          <Summary><![CDATA[The height of this component in pixels (defaults to auto).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetHeight&quot;" />
            <Attribute Type="Category" RawValue="&quot;4. BoxComponent&quot;" />
            <Attribute Type="DefaultValue" RawValue="typeof(Unit), &quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The height of this component in pixels (defaults to auto)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Margins" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[Note: this config is only used when this BoxComponent is rendered by a Container which has been configured to use the BorderLayout or one of the two BoxLayout subclasses.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. BoxComponent&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Note: this config is only used when this BoxComponent is rendered by a Container which has been configured to use the BorderLayout or one of the two BoxLayout subclasses." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CMargins" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[Note: this config is only used when this BoxComponent is rendered by a Container which has been configured to use the BorderLayout or one of the two BoxLayout subclasses.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;cmargins&quot;" />
            <Attribute Type="Category" RawValue="&quot;4. BoxComponent&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Note: this config is only used when this BoxComponent is rendered by a Container which has been configured to use the BorderLayout or one of the two BoxLayout subclasses." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="PageX" Type="Unit" DefaultValue="typeof(Unit), &quot;&quot;">
          <Summary><![CDATA[The page level x coordinate for this component if contained within a positioning container.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. BoxComponent&quot;" />
            <Attribute Type="DefaultValue" RawValue="typeof(Unit), &quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The page level x coordinate for this component if contained within a positioning container." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="PageY" Type="Unit" DefaultValue="typeof(Unit), &quot;&quot;">
          <Summary><![CDATA[The page level y coordinate for this component if contained within a positioning container.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. BoxComponent&quot;" />
            <Attribute Type="DefaultValue" RawValue="typeof(Unit), &quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The page level y coordinate for this component if contained within a positioning container." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Region" Type="Region" DefaultValue="Region.None">
          <Summary><![CDATA[Note: this config is only used when this BoxComponent is rendered by a Container which has been configured to use the BorderLayout layout manager (e.g. specifying layout:'border').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="Category" RawValue="&quot;4. BoxComponent&quot;" />
            <Attribute Type="DefaultValue" RawValue="Region.None" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Note: this config is only used when this BoxComponent is rendered by a Container which has been configured to use the BorderLayout layout manager (e.g. specifying layout:'border')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Split" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to create a SplitRegion and display a 5px wide Ext.SplitBar between this region and its neighbor, allowing the user to resize the regions dynamically. Defaults to false creating a Region. Note: this config is only used when this BoxComponent is rendered by a Container which has been configured to use the BorderLayout layout manager (e.g. specifying layout:'border').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. BoxComponent&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to create a SplitRegion and display a 5px wide Ext.SplitBar between this region and its neighbor, allowing the user to resize the regions dynamically. Defaults to false creating a Region. Note: this config is only used when this BoxComponent is rendered by a Container which has been configured to use the BorderLayout layout manager (e.g. specifying layout:'border')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TabTip" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A string to be used as innerHTML (html tags are accepted) to show in a tooltip when mousing over the associated tab selector element. NOTE: TabTip config is used when a BoxComponent is a child of a TabPanel.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. Panel&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="A string to be used as innerHTML (html tags are accepted) to show in a tooltip when mousing over the associated tab selector element. NOTE: TabTip config is used when a BoxComponent is a child of a TabPanel." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Width" Modifier="Override" Type="Unit" DefaultValue="typeof(Unit), &quot;&quot;">
          <Summary><![CDATA[The width of this component in pixels (defaults to auto).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetWidth&quot;" />
            <Attribute Type="Category" RawValue="&quot;4. BoxComponent&quot;" />
            <Attribute Type="DefaultValue" RawValue="typeof(Unit), &quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The width of this component in pixels (defaults to auto)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="X" Type="int" DefaultValue="0">
          <Summary><![CDATA[The local x (left) coordinate for this component if contained within a positioning container.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;4. BoxComponent&quot;" />
            <Attribute Type="DefaultValue" RawValue="0" />
            <Attribute Type="Description" RawValue="The local x (left) coordinate for this component if contained within a positioning container." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Y" Type="int" DefaultValue="0">
          <Summary><![CDATA[The local y (addToStart) coordinate for this component if contained within a positioning container.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;4. BoxComponent&quot;" />
            <Attribute Type="DefaultValue" RawValue="0" />
            <Attribute Type="Description" RawValue="The local y (addToStart) coordinate for this component if contained within a positioning container." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TabMenu" Type="MenuCollection">
          <Summary><![CDATA[Tab's menu]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;tabMenu&quot;, typeof(ItemCollectionJsonConverter)" />
            <Attribute Type="Category" RawValue="&quot;4. BoxComponent&quot;" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Tab's menu" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TabMenuHidden" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Defaults to false. True to hide tab's menu.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. BoxComponent&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetTabMenuVisible&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Defaults to false. True to hide tab's menu." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods>
        <Method Name="SetAutoScroll" ParamsRaw="bool scroll">
          <Summary><![CDATA[Sets the overflow on the content element of the component.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Sets the overflow on the content element of the component." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SetPagePosition" ParamsRaw="Unit x, Unit y">
          <Summary><![CDATA[Sets the page XY position of the component. To set the left and addToStart instead, use setPosition. This method fires the move event.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Sets the page XY position of the component. To set the left and addToStart instead, use setPosition. This method fires the move event." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SetPagePosition" ParamsRaw="int x, int y">
          <Summary><![CDATA[Sets the page XY position of the component. To set the left and addToStart instead, use setPosition. This method fires the move event.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Sets the page XY position of the component. To set the left and addToStart instead, use setPosition. This method fires the move event." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SetPosition" ParamsRaw="Unit left, Unit top">
          <Summary><![CDATA[Sets the left and addToStart of the component. To set the page XY position instead, use setPagePosition. This method fires the move event.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Sets the left and addToStart of the component. To set the page XY position instead, use setPagePosition. This method fires the move event." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SetPosition" ParamsRaw="int left, int top">
          <Summary><![CDATA[Sets the left and addToStart of the component. To set the page XY position instead, use setPagePosition. This method fires the move event.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Sets the left and addToStart of the component. To set the page XY position instead, use setPagePosition. This method fires the move event." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SetSize" ParamsRaw="Unit width, Unit height">
          <Summary><![CDATA[Sets the width and height of the component. This method fires the resize event.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Sets the width and height of the component. This method fires the resize event." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SetSize" ParamsRaw="int width, int height">
          <Summary><![CDATA[Sets the width and height of the component. This method fires the resize event.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Sets the width and height of the component. This method fires the resize event." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SyncSize">
          <Summary><![CDATA[Force the component's size to recalculate based on the underlying element's current height and width.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Force the component's size to recalculate based on the underlying element's current height and width." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="UpdateBox" ParamsRaw="Unit x, Unit y, Unit width, Unit height">
          <Summary><![CDATA[Sets the current box measurements of the component's underlying element.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Sets the current box measurements of the component's underlying element." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="UpdateBox" ParamsRaw="int x, int y, int width, int height">
          <Summary><![CDATA[Sets the current box measurements of the component's underlying element.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Sets the current box measurements of the component's underlying element." />
          </Attributes>
          <Parameters />
        </Method>
      </Methods>
    </Class>
    <Class Name="BoxComponentDirectEvents" Extends="ComponentBaseDirectEvents">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Move" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after the component is resized.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Component), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;x&quot;, typeof(int), &quot;The new x position&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;y&quot;, typeof(int), &quot;The new y position&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;move&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the component is resized." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Resize" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after the component is resized.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Component), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;adjWidth&quot;, typeof(int), &quot;The box-adjusted width that was set&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;adjHeight&quot;, typeof(Component), &quot;The box-adjusted height that was set&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;rawWidth&quot;, typeof(Component), &quot;The width that was originally specified&quot;" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;rawHeight&quot;, typeof(Component), &quot;The height that was originally specified&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;resize&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the component is resized." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="BoxComponentListeners" Extends="ComponentBaseListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Move" Type="ComponentListener">
          <Summary><![CDATA[Fires after the component is resized.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Component), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;x&quot;, typeof(int), &quot;The new x position&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;y&quot;, typeof(int), &quot;The new y position&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;move&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the component is resized." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Resize" Type="ComponentListener">
          <Summary><![CDATA[Fires after the component is resized.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Component), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;adjWidth&quot;, typeof(int), &quot;The box-adjusted width that was set&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;adjHeight&quot;, typeof(Component), &quot;The box-adjusted height that was set&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;rawWidth&quot;, typeof(Component), &quot;The width that was originally specified&quot;" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;rawHeight&quot;, typeof(Component), &quot;The height that was originally specified&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;resize&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the component is resized." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="BoxItem" Extends="LayoutItem">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Flex" Type="int" DefaultValue="0">
          <Summary><![CDATA[This configuation option is to be applied to child items of the container managed by this layout. Each child item with a flex property will be flexed horizontally according to each item's relative flex value compared to the sum of all items with a flex value specified. Any child items that have either a flex = 0 or flex = undefined will not be 'flexed' (the initial size will not be changed).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. BoxItem&quot;" />
            <Attribute Type="DefaultValue" RawValue="0" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="This configuation option is to be applied to child items of the container managed by this layout. Each child item with a flex property will be flexed horizontally according to each item's relative flex value compared to the sum of all items with a flex value specified. Any child items that have either a flex = 0 or flex = undefined will not be 'flexed' (the initial size will not be changed)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Margins" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The margins from this property will be applied to the item.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. BoxItem&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The margins from this property will be applied to the item." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="BoxItemCollection" Extends="StateManagedCollection&lt;BoxItem&gt;">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="BoxLayout" Abstract="true" Extends="ContainerLayout">
      <Summary><![CDATA[Base Class for HBoxLayout and VBoxLayout Classes. Generally it should not need to be used directly.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" RawValue="Base Class for HBoxLayout and VBoxLayout Classes. Generally it should not need to be used directly." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="DefaultMargins" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The default margins from this property will be applied to each item.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The default margins from this property will be applied to each item." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Padding" Type="string" DefaultValue="&quot;0&quot;">
          <Summary><![CDATA[Defaults to '0'. Sets the padding to be applied to all child items managed by this container's layout.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="&quot;0&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Defaults to '0'. Sets the padding to be applied to all child items managed by this container's layout." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Pack" Type="BoxPack" DefaultValue="BoxPack.Start">
          <Summary><![CDATA[Controls how the child items of the container are packed together.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;6. BoxLayout&quot;" />
            <Attribute Type="DefaultValue" RawValue="BoxPack.Start" />
            <Attribute Type="Description" RawValue="Controls how the child items of the container are packed together." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ScrollOffset" Type="int" DefaultValue="0">
          <Summary><![CDATA[The amount of space to reserve for the scrollbar]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;6. ColumnLayout&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="DefaultValue" RawValue="0" />
            <Attribute Type="Description" RawValue="The amount of space to reserve for the scrollbar" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BoxItems" Type="BoxItemCollection">
          <Summary><![CDATA[Box items collection]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;6. BoxLayout&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Box items collection" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="BoxLayoutConfig" Abstract="true" Extends="LayoutConfig">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="DefaultMargins" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Padding" Type="string" DefaultValue="&quot;0&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;0&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Pack" Type="BoxPack" DefaultValue="BoxPack.Start">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="DefaultValue" RawValue="BoxPack.Start" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ScrollOffset" Type="int" DefaultValue="0">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="0" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="BufferView" Extends="GridView">
      <Summary><![CDATA[A custom GridView which renders rows on an as-needed basis.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="Description" RawValue="A custom GridView which renders rows on an as-needed basis." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="RowHeight" Type="int" DefaultValue="19">
          <Summary><![CDATA[The height of a row in the grid.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Category" RawValue="&quot;4. BufferView&quot;" />
            <Attribute Type="DefaultValue" RawValue="19" />
            <Attribute Type="Description" RawValue="The height of a row in the grid." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BorderHeight" Type="int" DefaultValue="2">
          <Summary><![CDATA[The combined height of border-top and border-bottom of a row.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Category" RawValue="&quot;4. BufferView&quot;" />
            <Attribute Type="DefaultValue" RawValue="2" />
            <Attribute Type="Description" RawValue="The combined height of border-top and border-bottom of a row." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ScrollDelay" Type="int" DefaultValue="100">
          <Summary><![CDATA[The number of milliseconds before rendering rows out of the visible viewing area. Defaults to 100. Rows will render immediately with a config of false.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Category" RawValue="&quot;4. BufferView&quot;" />
            <Attribute Type="DefaultValue" RawValue="100" />
            <Attribute Type="Description" RawValue="The number of milliseconds before rendering rows out of the visible viewing area. Defaults to 100. Rows will render immediately with a config of false." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CacheSize" Type="int" DefaultValue="20">
          <Summary><![CDATA[The number of rows to look forward and backwards from the currently viewable area.  The cache applies only to rows that have been rendered already.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Category" RawValue="&quot;4. BufferView&quot;" />
            <Attribute Type="DefaultValue" RawValue="20" />
            <Attribute Type="Description" RawValue="The number of rows to look forward and backwards from the currently viewable area.  The cache applies only to rows that have been rendered already." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CleanDelay" Type="int" DefaultValue="500">
          <Summary><![CDATA[The number of milliseconds to buffer cleaning of extra rows not in the cache.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Category" RawValue="&quot;4. BufferView&quot;" />
            <Attribute Type="DefaultValue" RawValue="500" />
            <Attribute Type="Description" RawValue="The number of milliseconds to buffer cleaning of extra rows not in the cache." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="Button" Extends="ButtonBase">
      <Summary><![CDATA[Simple Button class]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:Button runat=\&quot;server\&quot; Text=\&quot;Submit\&quot; /&gt;&quot;" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(Button), &quot;Build.ToolboxIcons.Button.bmp&quot;" />
        <Attribute Type="DefaultEvent" RawValue="&quot;DirectClick&quot;" />
        <Attribute Type="DefaultProperty" RawValue="&quot;Text&quot;" />
        <Attribute Type="Designer" RawValue="typeof(ButtonDesigner)" />
        <Attribute Type="Description" RawValue="Simple Button class" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Listeners" Type="ButtonListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="ButtonDirectEvents">
          <Summary><![CDATA[Server-side DirectEventHandlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Server-side DirectEventHandlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ButtonBase" Abstract="true" Extends="BoxComponentBase" Inherits="IIcon,IAutoPostBack,IPostBackEventHandler,IXPostBackDataHandler,IButtonControl,INoneContentable">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="AutoWidth" Modifier="Override" Type="bool" DefaultValue="true">
          <Summary><![CDATA[By default, if a width is not specified the button will attempt to stretch horizontally to fit its content. If the button is being managed by a width sizing layout (hbox, fit, anchor), set this to false to prevent the button from doing this automatic sizing. Defaults to <tt>undefined</tt>.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. BoxComponent&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="By default, if a width is not specified the button will attempt to stretch horizontally to fit its content. If the button is being managed by a width sizing layout (hbox, fit, anchor), set this to false to prevent the button from doing this automatic sizing. Defaults to &lt;tt&gt;undefined&lt;/tt&gt;." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="StandOut" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to enable stand out by default (defaults to false).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;5. Button&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to enable stand out by default (defaults to false)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="PostBackUrl" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="UrlProperty" RawValue="&quot;*.aspx&quot;" />
            <Attribute Type="Editor" RawValue="&quot;System.Web.UI.Design.UrlEditor&quot;, typeof(UITypeEditor)" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="OnClientClick" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The JavaScript to execute when the Button is clicked. Or, please use the &lt;Listeners> for more flexibility.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;5. Button&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The JavaScript to execute when the Button is clicked. Or, please use the &amp;lt;Listeners&gt; for more flexibility." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AllowDepress" Type="bool" DefaultValue="true">
          <Summary><![CDATA[False to not allow a pressed Button to be depressed (defaults to true). Only valid when enableToggle is true.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Button&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="False to not allow a pressed Button to be depressed (defaults to true). Only valid when enableToggle is true." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ArrowAlign" Type="ArrowAlign" DefaultValue="ArrowAlign.Right">
          <Summary><![CDATA[The side of the Button box to render the arrow if the button has an associated menu. Defaults to 'Right'.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="Category" RawValue="&quot;5. Button&quot;" />
            <Attribute Type="DefaultValue" RawValue="ArrowAlign.Right" />
            <Attribute Type="Description" RawValue="The side of the Button box to render the arrow if the button has an associated menu. Defaults to 'Right'." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ClickEvent" Type="string" DefaultValue="&quot;click&quot;">
          <Summary><![CDATA[The type of event to map to the button's event handler (defaults to 'click').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Button&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;click&quot;" />
            <Attribute Type="Description" RawValue="The type of event to map to the button's event handler (defaults to 'click')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EnableToggle" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to enable pressed/not pressed toggling (defaults to false).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Button&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to enable pressed/not pressed toggling (defaults to false)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Flat" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to apply a flat style.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Button&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to apply a flat style." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="FormBind" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Buttons in the footer of a FormPanel may be configured with the option formBind: true. This causes the form's valid state monitor task to enable/disable those Buttons depending on the form's valid/invalid state.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Button&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="Buttons in the footer of a FormPanel may be configured with the option formBind: true. This causes the form's valid state monitor task to enable/disable those Buttons depending on the form's valid/invalid state." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HandleMouseEvents" Type="bool" DefaultValue="true">
          <Summary><![CDATA[False to disable visual cues on mouseover, mouseout and mousedown (defaults to true).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Button&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="False to disable visual cues on mouseover, mouseout and mousedown (defaults to true)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Handler" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A function called when the button is clicked (can be used instead of click event).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetHandler&quot;" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;5. Button&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="A function called when the button is clicked (can be used instead of click event)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Icon" Type="Icon" DefaultValue="Icon.None">
          <Summary><![CDATA[The icon to use in the Button. See also, IconCls to set an icon with a custom Css class.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;5. Button&quot;" />
            <Attribute Type="DefaultValue" RawValue="Icon.None" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetIconClass&quot;" />
            <Attribute Type="Description" RawValue="The icon to use in the Button. See also, IconCls to set an icon with a custom Css class." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IconAlign" Type="IconAlign" DefaultValue="IconAlign.Left">
          <Summary><![CDATA[The side of the Button box to render the icon. Defaults to 'Left'.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="Category" RawValue="&quot;5. Button&quot;" />
            <Attribute Type="DefaultValue" RawValue="IconAlign.Left" />
            <Attribute Type="Description" RawValue="The side of the Button box to render the icon. Defaults to 'Left'." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IconClsProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;iconCls&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IconCls" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A css class which sets a background image to be used as the icon for this button.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetIconClass&quot;" />
            <Attribute Type="Category" RawValue="&quot;5. Button&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="A css class which sets a background image to be used as the icon for this button." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MenuArrow" Type="bool" DefaultValue="true">
          <Summary><![CDATA[False to hide the Menu arrow drop down arrow (defaults to true).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;ToggleMenuArrow&quot;" />
            <Attribute Type="Category" RawValue="&quot;5. Button&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="False to hide the Menu arrow drop down arrow (defaults to true)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Menu" Type="MenuCollection">
          <Summary><![CDATA[Standard menu attribute consisting of a reference to a menu object, a menu id or a menu config blob.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;menu&quot;, typeof(ItemCollectionJsonConverter)" />
            <Attribute Type="Category" RawValue="&quot;5. Button&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="Standard menu attribute consisting of a reference to a menu object, a menu id or a menu config blob." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MenuAlign" Type="string" DefaultValue="&quot;tl-bl?&quot;">
          <Summary><![CDATA[The position to align the menu to (see Ext.Element.alignTo for more details, defaults to 'tl-bl?').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Button&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;tl-bl?&quot;" />
            <Attribute Type="Description" RawValue="The position to align the menu to (see Ext.Element.alignTo for more details, defaults to 'tl-bl?')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MinWidth" Modifier="Override" Type="Unit" DefaultValue="typeof(Unit), &quot;16&quot;">
          <Summary><![CDATA[The minimum width for this button (used to give a set of buttons a common width).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Button&quot;" />
            <Attribute Type="DefaultValue" RawValue="typeof(Unit), &quot;16&quot;" />
            <Attribute Type="Description" RawValue="The minimum width for this button (used to give a set of buttons a common width)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="OverflowText" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[If used in a Toolbar, the text to be used if this item is shown in the overflow menu.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Category" RawValue="&quot;5. Button&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="If used in a Toolbar, the text to be used if this item is shown in the overflow menu." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Pressed" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to addToStart pressed (only if enableToggle = true).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Button&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to addToStart pressed (only if enableToggle = true)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Repeat" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to repeat fire the click event while the mouse is down. (defaults to false).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Button&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to repeat fire the click event while the mouse is down. (defaults to false)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Scope" Type="object" DefaultValue="null">
          <Summary><![CDATA[The scope of the handler.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;5. Button&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="The scope of the handler." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Scale" Type="ButtonScale" DefaultValue="ButtonScale.Small">
          <Summary><![CDATA[The size of the Button. Defaults to 'Small'.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="Category" RawValue="&quot;5. Button&quot;" />
            <Attribute Type="DefaultValue" RawValue="ButtonScale.Small" />
            <Attribute Type="Description" RawValue="The size of the Button. Defaults to 'Small'." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TabIndex" Modifier="Override" Type="short" DefaultValue="(short)0">
          <Summary><![CDATA[Set a DOM tabIndex for this button (defaults to undefined).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Button&quot;" />
            <Attribute Type="DefaultValue" RawValue="(short)0" />
            <Attribute Type="Description" RawValue="Set a DOM tabIndex for this button (defaults to undefined)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Text" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The position to align the menu to (see Ext.Element.alignTo for more details, defaults to 'tl-bl?').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Category" RawValue="&quot;5. Button&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="DirectEventUpdate" RawValue="GenerateMode = AutoGeneratingScript.WithSet" />
            <Attribute Type="Description" RawValue="The position to align the menu to (see Ext.Element.alignTo for more details, defaults to 'tl-bl?')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ToggleHandler" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[Function called when a Button with enableToggle set to true is clicked.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;5. Button&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="Function called when a Button with enableToggle set to true is clicked." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ToggleGroup" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The group this toggle button is a member of (only 1 per group can be pressed, only applies if enableToggle = true).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Category" RawValue="&quot;5. Button&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The group this toggle button is a member of (only 1 per group can be pressed, only applies if enableToggle = true)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ToolTip" Modifier="Override" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The tooltip for the button - can be a string to be used as innerHTML (html tags are accepted). Or, see ToolTip config.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;tooltip&quot;" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetTooltip&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Category" RawValue="&quot;5. Button&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="ReadOnly" RawValue="false" />
            <Attribute Type="Browsable" RawValue="true" />
            <Attribute Type="EditorBrowsable" RawValue="EditorBrowsableState.Always" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="The tooltip for the button - can be a string to be used as innerHTML (html tags are accepted). Or, see ToolTip config." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="QTipCfg" Type="QTipCfg" DefaultValue="null">
          <Summary><![CDATA[A tip string.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;tooltip&quot;, JsonMode.Object" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="A tip string." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ToolTipType" Type="ToolTipType" DefaultValue="ToolTipType.Qtip">
          <Summary><![CDATA[The type of tooltip to use. Either 'qtip' (default) for QuickTips or 'title' for title attribute.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;tooltipType&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Category" RawValue="&quot;5. Button&quot;" />
            <Attribute Type="DefaultValue" RawValue="ToolTipType.Qtip" />
            <Attribute Type="Description" RawValue="The type of tooltip to use. Either 'qtip' (default) for QuickTips or 'title' for title attribute." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Type" Type="ButtonType" DefaultValue="ButtonType.Button">
          <Summary><![CDATA[submit, reset or button - defaults to 'button'.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Category" RawValue="&quot;5. Button&quot;" />
            <Attribute Type="DefaultValue" RawValue="ButtonType.Button" />
            <Attribute Type="Description" RawValue="submit, reset or button - defaults to 'button'." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AutoPostBack" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Gets or sets a value indicating whether the control state automatically posts back to the server when button clicked.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;Behavior&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="Gets or sets a value indicating whether the control state automatically posts back to the server when button clicked." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CausesValidation" Type="bool" DefaultValue="true">
          <Summary><![CDATA[Gets or sets a value indicating whether validation is performed when the control is set to validate when a postback occurs.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;Behavior&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="Gets or sets a value indicating whether validation is performed when the control is set to validate when a postback occurs." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ValidationGroup" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[Gets or Sets the Controls ValidationGroup]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;Behavior&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="Gets or Sets the Controls ValidationGroup" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="NavigateUrl" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Ignore" />
            <Attribute Type="Category" RawValue="&quot;5. Button&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="DirectEventUpdate" RawValue="GenerateMode = AutoGeneratingScript.Simple" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="NavigateUrlProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;navigateUrl&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Target" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="TypeConverter" RawValue="typeof(TargetConverter)" />
            <Attribute Type="Category" RawValue="&quot;5. Hyperlink&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetTarget&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods>
        <Method Name="Focus" Modifier="Override">
          <Summary><![CDATA[Focus the button]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Focus the button" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="HideMenu">
          <Summary><![CDATA[Hide this button's menu (if it has one)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Hide this button's menu (if it has one)" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="InitComponent">
          <Summary><![CDATA[initComponent]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="initComponent" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="ShowMenu">
          <Summary><![CDATA[Show this button's menu (if it has one)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Show this button's menu (if it has one)" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Toggle">
          <Summary><![CDATA[If a state it passed, it becomes the pressed state otherwise the current state is toggled.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="If a state it passed, it becomes the pressed state otherwise the current state is toggled." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Toggle" ParamsRaw="bool state">
          <Summary><![CDATA[If a state it passed, it becomes the pressed state otherwise the current state is toggled.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="If a state it passed, it becomes the pressed state otherwise the current state is toggled." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="ToggleMenuArrow">
          <Summary><![CDATA[If a state it passed, it becomes the pressed state otherwise the current state is toggled.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="If a state it passed, it becomes the pressed state otherwise the current state is toggled." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="ToggleMenuArrow" ParamsRaw="bool state">
          <Summary><![CDATA[If a state it passed, it becomes the pressed state otherwise the current state is toggled.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="If a state it passed, it becomes the pressed state otherwise the current state is toggled." />
          </Attributes>
          <Parameters />
        </Method>
      </Methods>
    </Class>
    <Class Name="ButtonCollection" Extends="Collection&lt;Button&gt;">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="ButtonCollectionEditor" Extends="CollectionEditor">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="ButtonDirectEvents" Extends="BoxComponentDirectEvents">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Click" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when this button is clicked.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Button), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object), &quot;The click event&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;click&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when this button is clicked." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MenuHide" Type="ComponentDirectEvent">
          <Summary><![CDATA[If this button has a menu, this event fires when it is hidden.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Button), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;menu&quot;, typeof(object), &quot;Menu&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;menuhide&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="If this button has a menu, this event fires when it is hidden." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MenuShow" Type="ComponentDirectEvent">
          <Summary><![CDATA[If this button has a menu, this event fires when it is shown.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Button), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;menu&quot;, typeof(object), &quot;Menu&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;menushow&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="If this button has a menu, this event fires when it is shown." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MenuTriggerOut" Type="ComponentDirectEvent">
          <Summary><![CDATA[If this button has a menu, this event fires when the mouse leaves the menu triggering element.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Button), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;menu&quot;, typeof(object), &quot;Menu&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object), &quot;EventObject&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;menutriggerout&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="If this button has a menu, this event fires when the mouse leaves the menu triggering element." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MenuTriggerOver" Type="ComponentDirectEvent">
          <Summary><![CDATA[If this button has a menu, this event fires when the mouse enters the menu triggering element.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Button), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;menu&quot;, typeof(object), &quot;Menu&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object), &quot;EventObject&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;menutriggerover&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="If this button has a menu, this event fires when the mouse enters the menu triggering element." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MouseOut" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when the mouse exits the button.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Button), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object), &quot;The event object&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;mouseout&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the mouse exits the button." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MouseOver" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when the mouse hovers over the button.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Button), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object), &quot;The event object&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;mouseover&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the mouse hovers over the button." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Toggle" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when the 'pressed' state of this button changes (only if enableToggle = true).]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Button), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;pressed&quot;, typeof(bool), &quot;Pressed&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;toggle&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the 'pressed' state of this button changes (only if enableToggle = true)." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ButtonGroup" Extends="Panel">
      <Summary><![CDATA[Container for a group of buttons.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:ButtonGroup runat=\&quot;server\&quot; Title=\&quot;Title\&quot; Height=\&quot;300\&quot;&gt;&lt;Items&gt;&lt;/Items&gt;&lt;/{0}:ButtonGroup&gt;&quot;" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(Panel), &quot;Build.ToolboxIcons.ButtonGroup.bmp&quot;" />
        <Attribute Type="Designer" RawValue="typeof(PanelDesigner)" />
        <Attribute Type="Description" RawValue="Container for a group of buttons." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="DefaultType" Modifier="Override" Type="string" DefaultValue="&quot;Button&quot;">
          <Summary><![CDATA[The default type of content Container represented by this object as registered in Ext.ComponentMgr. Defaults to 'button' in ButtonGroup]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;5. Container&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;Button&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The default type of content Container represented by this object as registered in Ext.ComponentMgr. Defaults to 'button' in ButtonGroup" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DefaultTypeProxy" Modifier="Override" Access="Protected" Type="string" DefaultValue="&quot;button&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;defaultType&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;button&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Frame" Modifier="Override" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to render the panel with custom rounded borders, false to render with plain 1px square borders (defaults to true).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. ButtonGroup&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to render the panel with custom rounded borders, false to render with plain 1px square borders (defaults to true)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Columns" Type="int" DefaultValue="-1">
          <Summary><![CDATA[The columns configuration property passed to the configured layout manager. See Ext.layout.TableLayout.columns.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. ButtonGroup&quot;" />
            <Attribute Type="DefaultValue" RawValue="-1" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The columns configuration property passed to the configured layout manager. See Ext.layout.TableLayout.columns." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Layout" Modifier="Override" Type="string" DefaultValue="&quot;table&quot;">
          <Summary><![CDATA[The layout type to be used in this container.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;5. Container&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;table&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(LayoutConverter)" />
            <Attribute Type="Description" RawValue="The layout type to be used in this container." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ButtonListeners" Extends="BoxComponentListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Click" Type="ComponentListener">
          <Summary><![CDATA[Fires when this button is clicked.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Button), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object), &quot;The click event&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;click&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when this button is clicked." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MenuHide" Type="ComponentListener">
          <Summary><![CDATA[If this button has a menu, this event fires when it is hidden.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Button), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;menu&quot;, typeof(object), &quot;Menu&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;menuhide&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="If this button has a menu, this event fires when it is hidden." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MenuShow" Type="ComponentListener">
          <Summary><![CDATA[If this button has a menu, this event fires when it is shown.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Button), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;menu&quot;, typeof(object), &quot;Menu&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;menushow&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="If this button has a menu, this event fires when it is shown." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MenuTriggerOut" Type="ComponentListener">
          <Summary><![CDATA[If this button has a menu, this event fires when the mouse leaves the menu triggering element.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Button), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;menu&quot;, typeof(object), &quot;Menu&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object), &quot;EventObject&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;menutriggerout&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="If this button has a menu, this event fires when the mouse leaves the menu triggering element." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MenuTriggerOver" Type="ComponentListener">
          <Summary><![CDATA[If this button has a menu, this event fires when the mouse enters the menu triggering element.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Button), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;menu&quot;, typeof(object), &quot;Menu&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object), &quot;EventObject&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;menutriggerover&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="If this button has a menu, this event fires when the mouse enters the menu triggering element." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MouseOut" Type="ComponentListener">
          <Summary><![CDATA[Fires when the mouse exits the button.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Button), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object), &quot;The event object&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;mouseout&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the mouse exits the button." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MouseOver" Type="ComponentListener">
          <Summary><![CDATA[Fires when the mouse hovers over the button.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Button), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object), &quot;The event object&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;mouseover&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the mouse hovers over the button." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Toggle" Type="ComponentListener">
          <Summary><![CDATA[Fires when the 'pressed' state of this button changes (only if enableToggle = true).]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Button), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;pressed&quot;, typeof(bool), &quot;Pressed&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;toggle&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the 'pressed' state of this button changes (only if enableToggle = true)." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="CalendarPanel" Extends="CalendarPanelBase">
      <Summary><![CDATA[This is the default container for Ext calendar views. It supports day, week and month views as well as a built-in event edit form. The only requirement for displaying a calendar is passing in a valid calendarStore config containing records of type EventRecord. In order to make the calendar interactive (enable editing, drag/drop, etc.) you can handle any of the various events fired by the underlying views and exposed through the CalendarPanel.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:CalendarPanel runat=\&quot;server\&quot;&gt;&lt;/{0}:CalendarPanel&gt;&quot;" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(CalendarPanel), &quot;Build.ToolboxIcons.CalendarPanel.bmp&quot;" />
        <Attribute Type="Description" RawValue="This is the default container for Ext calendar views. It supports day, week and month views as well as a built-in event edit form. The only requirement for displaying a calendar is passing in a valid calendarStore config containing records of type EventRecord. In order to make the calendar interactive (enable editing, drag/drop, etc.) you can handle any of the various events fired by the underlying views and exposed through the CalendarPanel." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Listeners" Type="CalendarPanelListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="CalendarPanelDirectEvents">
          <Summary><![CDATA[Server-side Ajax Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Server-side Ajax Event Handlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="CalendarPanelBase" Abstract="true" Extends="PanelBase">
      <Attributes />
      <ConfigOptions>
        <ConfigOption Name="DayText" Type="string" DefaultValue="&quot;Day&quot;">
          <Summary><![CDATA[Alternate text to use for the 'Day' nav bar button.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. CalendarPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;Day&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Alternate text to use for the 'Day' nav bar button." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MonthText" Type="string" DefaultValue="&quot;Month&quot;">
          <Summary><![CDATA[Alternate text to use for the 'Month' nav bar button.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. CalendarPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;Month&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Alternate text to use for the 'Month' nav bar button." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ShowDayView" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to include the day view (and toolbar button), false to hide them (defaults to true).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. CalendarPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to include the day view (and toolbar button), false to hide them (defaults to true)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ShowMonthView" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to include the month view (and toolbar button), false to hide them (defaults to true). If the day and week views are both hidden, the month view will show by default even if this config is false.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. CalendarPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to include the month view (and toolbar button), false to hide them (defaults to true). If the day and week views are both hidden, the month view will show by default even if this config is false." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ShowNavBar" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to display the calendar navigation toolbar, false to hide it (defaults to true). Note that if you hide the default navigation toolbar you'll have to provide an alternate means of navigating the calendar.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. CalendarPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to display the calendar navigation toolbar, false to hide it (defaults to true). Note that if you hide the default navigation toolbar you'll have to provide an alternate means of navigating the calendar." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ShowTime" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to display the current time next to the date in the calendar's current day box, false to not show it (defaults to true).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. CalendarPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to display the current time next to the date in the calendar's current day box, false to not show it (defaults to true)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ShowTodayText" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to show the value of todayText instead of today's date in the calendar's current day box, false to display the day number(defaults to true).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. CalendarPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to show the value of todayText instead of today's date in the calendar's current day box, false to display the day number(defaults to true)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ShowWeekView" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to include the week view (and toolbar button), false to hide them (defaults to true).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. CalendarPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to include the week view (and toolbar button), false to hide them (defaults to true)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TodayText" Type="string" DefaultValue="&quot;Today&quot;">
          <Summary><![CDATA[Alternate text to use for the 'Today' nav bar button.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. CalendarPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;Today&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Alternate text to use for the 'Today' nav bar button." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="WeekText" Type="string" DefaultValue="&quot;Week&quot;">
          <Summary><![CDATA[Alternate text to use for the 'Week' nav bar button.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. CalendarPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;Week&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Alternate text to use for the 'Week' nav bar button." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="GroupStoreID" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The group store ID to use.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;calendarStore&quot;, JsonMode.ToClientID" />
            <Attribute Type="Category" RawValue="&quot;7. CalendarPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="IDReferenceProperty" RawValue="typeof(Store)" />
            <Attribute Type="Description" RawValue="The group store ID to use." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="GroupStore" Type="GroupStore" DefaultValue="null">
          <Attributes>
            <Attribute Type="Category" RawValue="&quot;7. CalendarPanel&quot;" />
            <Attribute Type="ConfigOption" RawValue="&quot;calendarStore&quot;, typeof(LazyControlJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" />
            <Attribute Type="DefaultValue" RawValue="null" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EventStoreID" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The event store ID to use.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;eventStore&quot;, JsonMode.ToClientID" />
            <Attribute Type="Category" RawValue="&quot;7. CalendarPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="IDReferenceProperty" RawValue="typeof(Store)" />
            <Attribute Type="Description" RawValue="The event store ID to use." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EventStore" Type="EventStore" DefaultValue="null">
          <Attributes>
            <Attribute Type="Category" RawValue="&quot;7. CalendarPanel&quot;" />
            <Attribute Type="ConfigOption" RawValue="&quot;eventStore&quot;, typeof(LazyControlJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" />
            <Attribute Type="DefaultValue" RawValue="null" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DayView" Type="DayView" DefaultValue="null">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;dayViewCfg&quot;, typeof(LazyControlJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="WeekView" Type="WeekView" DefaultValue="null">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;weekViewCfg&quot;, typeof(LazyControlJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MonthView" Type="MonthView" DefaultValue="null">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;monthViewCfg&quot;, typeof(LazyControlJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EventEditForm" Type="EventEditForm" DefaultValue="null">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;editViewCfg&quot;, typeof(LazyControlJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EventEditFormProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;editViewCfg&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="CalendarPanelDirectEvents" Extends="PanelDirectEvents">
      <Attributes />
      <ConfigOptions>
        <ConfigOption Name="DateChange" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after the start date of the view changes]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CalendarPanel), &quot;Ext.calendar.CalendarPanel&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;startDate&quot;, typeof(DateTime), &quot;The start date of the view&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;viewStart&quot;, typeof(DateTime), &quot;The first displayed date in the view&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;viewEnd&quot;, typeof(DateTime), &quot;The last displayed date in the view&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;datechange&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the start date of the view changes" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DayClick" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after the user clicks within a day/week view container and not on an event element]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CalendarPanel), &quot;Ext.calendar.CalendarPanel&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;dt&quot;, typeof(DateTime), &quot;The date/time that was clicked on&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;allDay&quot;, typeof(Boolean), &quot;True if the day clicked on represents an all-day box, else false.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;el&quot;, typeof(Element), &quot;The Element that was clicked on&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;dayclick&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the user clicks within a day/week view container and not on an event element" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EventAdd" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after a new event is added to the underlying store]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CalendarPanel), &quot;Ext.calendar.CalendarPanel&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object), &quot;The new record that was added&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;eventadd&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after a new event is added to the underlying store" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EventCancel" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after an event add/edit operation is canceled by the user and no store update took place]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CalendarPanel), &quot;Ext.calendar.CalendarPanel&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object), &quot;The new record that was canceled&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;eventcancel&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after an event add/edit operation is canceled by the user and no store update took place" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EventClick" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after the user clicks on an event element]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CalendarPanel), &quot;Ext.calendar.CalendarPanel&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object), &quot;The record for the event that was clicked on&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;el&quot;, typeof(object), &quot;The DOM node that was clicked on&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;eventclick&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the user clicks on an event element" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EventDelete" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after an event is removed from the underlying store]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CalendarPanel), &quot;Ext.calendar.CalendarPanel&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object), &quot;The new record that was removed&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;eventdelete&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after an event is removed from the underlying store" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EventMove" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after an event element is dragged by the user and dropped in a new position]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CalendarPanel), &quot;Ext.calendar.CalendarPanel&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object), &quot;The record for the event that was moved with updated start and end dates&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;eventmove&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after an event element is dragged by the user and dropped in a new position" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EventOut" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires anytime the mouse exits an event element]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CalendarPanel), &quot;Ext.calendar.CalendarPanel&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object), &quot;The record for the event that the cursor exited&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;el&quot;, typeof(object), &quot;The DOM node that was exited&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;eventout&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires anytime the mouse exits an event element" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EventOver" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires anytime the mouse is over an event element]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CalendarPanel), &quot;Ext.calendar.CalendarPanel&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object), &quot;The record for the event that the cursor is over&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;el&quot;, typeof(object), &quot;The DOM node that is being moused over&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;eventover&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires anytime the mouse is over an event element" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EventResize" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after the user drags the resize handle of an event to resize it]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CalendarPanel), &quot;Ext.calendar.CalendarPanel&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object), &quot;The record for the event that was resized containing the updated start and end dates&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;eventresize&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the user drags the resize handle of an event to resize it" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EventsRendered" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after events are finished rendering in the view]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CalendarPanel), &quot;Ext.calendar.CalendarPanel&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;eventsrendered&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after events are finished rendering in the view" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EventUpdate" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after an existing event is updated]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CalendarPanel), &quot;Ext.calendar.CalendarPanel&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object), &quot;The new record that was updated&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;eventupdate&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after an existing event is updated" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="InitDrag" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when a drag operation is initiated in the view]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CalendarPanel), &quot;Ext.calendar.CalendarPanel&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;initdrag&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a drag operation is initiated in the view" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RangeSelect" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after the user drags on the calendar to select a range of dates/times in which to create an event]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CalendarPanel), &quot;Ext.calendar.CalendarPanel&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;dates&quot;, typeof(object), &quot;An object containing the start (StartDate property) and end (EndDate property) dates selected&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;callback&quot;, typeof(JFunction), &quot;A callback function that MUST be called after the event handling is complete so that the view is properly cleaned up (shim elements are persisted in the view while the user is prompted to handle the range selection). The callback is already created in the proper scope, so it simply needs to be executed as a standard function call (e.g., callback()).&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;rangeselect&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the user drags on the calendar to select a range of dates/times in which to create an event" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ViewChange" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after a different calendar view is activated (but not when the event edit form is activated)]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CalendarPanel), &quot;Ext.calendar.CalendarPanel&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;view&quot;, typeof(object), &quot;The view being activated (any valid CalendarView subclass)&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;info&quot;, typeof(Object), &quot;Extra information about the newly activated view (activeDate, viewStart, viewEnd).&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;viewchange&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after a different calendar view is activated (but not when the event edit form is activated)" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="CalendarPanelListeners" Extends="PanelListeners">
      <Attributes />
      <ConfigOptions>
        <ConfigOption Name="DateChange" Type="ComponentListener">
          <Summary><![CDATA[Fires after the start date of the view changes]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CalendarPanel), &quot;Ext.calendar.CalendarPanel&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;startDate&quot;, typeof(DateTime), &quot;The start date of the view&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;viewStart&quot;, typeof(DateTime), &quot;The first displayed date in the view&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;viewEnd&quot;, typeof(DateTime), &quot;The last displayed date in the view&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;datechange&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the start date of the view changes" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DayClick" Type="ComponentListener">
          <Summary><![CDATA[Fires after the user clicks within a day/week view container and not on an event element]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CalendarPanel), &quot;Ext.calendar.CalendarPanel&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;dt&quot;, typeof(DateTime), &quot;The date/time that was clicked on&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;allDay&quot;, typeof(Boolean), &quot;True if the day clicked on represents an all-day box, else false.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;el&quot;, typeof(Element), &quot;The Element that was clicked on&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;dayclick&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the user clicks within a day/week view container and not on an event element" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EventAdd" Type="ComponentListener">
          <Summary><![CDATA[Fires after a new event is added to the underlying store]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CalendarPanel), &quot;Ext.calendar.CalendarPanel&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object), &quot;The new record that was added&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;eventadd&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after a new event is added to the underlying store" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EventCancel" Type="ComponentListener">
          <Summary><![CDATA[Fires after an event add/edit operation is canceled by the user and no store update took place]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CalendarPanel), &quot;Ext.calendar.CalendarPanel&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object), &quot;The new record that was canceled&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;eventcancel&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after an event add/edit operation is canceled by the user and no store update took place" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EventClick" Type="ComponentListener">
          <Summary><![CDATA[Fires after the user clicks on an event element]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CalendarPanel), &quot;Ext.calendar.CalendarPanel&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object), &quot;The record for the event that was clicked on&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;el&quot;, typeof(object), &quot;The DOM node that was clicked on&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;eventclick&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the user clicks on an event element" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EventDelete" Type="ComponentListener">
          <Summary><![CDATA[Fires after an event is removed from the underlying store]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CalendarPanel), &quot;Ext.calendar.CalendarPanel&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object), &quot;The new record that was removed&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;eventdelete&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after an event is removed from the underlying store" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EventMove" Type="ComponentListener">
          <Summary><![CDATA[Fires after an event element is dragged by the user and dropped in a new position]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CalendarPanel), &quot;Ext.calendar.CalendarPanel&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object), &quot;The record for the event that was moved with updated start and end dates&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;eventmove&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after an event element is dragged by the user and dropped in a new position" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EventOut" Type="ComponentListener">
          <Summary><![CDATA[Fires anytime the mouse exits an event element]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CalendarPanel), &quot;Ext.calendar.CalendarPanel&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object), &quot;The record for the event that the cursor exited&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;el&quot;, typeof(object), &quot;The DOM node that was exited&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;eventout&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires anytime the mouse exits an event element" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EventOver" Type="ComponentListener">
          <Summary><![CDATA[Fires anytime the mouse is over an event element]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CalendarPanel), &quot;Ext.calendar.CalendarPanel&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object), &quot;The record for the event that the cursor is over&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;el&quot;, typeof(object), &quot;The DOM node that is being moused over&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;eventover&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires anytime the mouse is over an event element" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EventResize" Type="ComponentListener">
          <Summary><![CDATA[Fires after the user drags the resize handle of an event to resize it]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CalendarPanel), &quot;Ext.calendar.CalendarPanel&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object), &quot;The record for the event that was resized containing the updated start and end dates&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;eventresize&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the user drags the resize handle of an event to resize it" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EventsRendered" Type="ComponentListener">
          <Summary><![CDATA[Fires after events are finished rendering in the view]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CalendarPanel), &quot;Ext.calendar.CalendarPanel&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;eventsrendered&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after events are finished rendering in the view" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EventUpdate" Type="ComponentListener">
          <Summary><![CDATA[Fires after an existing event is updated]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CalendarPanel), &quot;Ext.calendar.CalendarPanel&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object), &quot;The new record that was updated&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;eventupdate&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after an existing event is updated" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="InitDrag" Type="ComponentListener">
          <Summary><![CDATA[Fires when a drag operation is initiated in the view]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CalendarPanel), &quot;Ext.calendar.CalendarPanel&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;initdrag&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a drag operation is initiated in the view" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RangeSelect" Type="ComponentListener">
          <Summary><![CDATA[Fires after the user drags on the calendar to select a range of dates/times in which to create an event]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CalendarPanel), &quot;Ext.calendar.CalendarPanel&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;dates&quot;, typeof(object), &quot;An object containing the start (StartDate property) and end (EndDate property) dates selected&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;callback&quot;, typeof(JFunction), &quot;A callback function that MUST be called after the event handling is complete so that the view is properly cleaned up (shim elements are persisted in the view while the user is prompted to handle the range selection). The callback is already created in the proper scope, so it simply needs to be executed as a standard function call (e.g., callback()).&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;rangeselect&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the user drags on the calendar to select a range of dates/times in which to create an event" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ViewChange" Type="ComponentListener">
          <Summary><![CDATA[Fires after a different calendar view is activated (but not when the event edit form is activated)]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CalendarPanel), &quot;Ext.calendar.CalendarPanel&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;view&quot;, typeof(object), &quot;The view being activated (any valid CalendarView subclass)&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;info&quot;, typeof(Object), &quot;Extra information about the newly activated view (activeDate, viewStart, viewEnd).&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;viewchange&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after a different calendar view is activated (but not when the event edit form is activated)" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="CalendarView" Abstract="true" Extends="BoxComponentBase">
      <Attributes />
      <ConfigOptions>
        <ConfigOption Name="StartDay" Type="int" DefaultValue="0">
          <Summary><![CDATA[The 0-based index for the day on which the calendar week begins (0=Sunday, which is the default)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. CalendarView&quot;" />
            <Attribute Type="DefaultValue" RawValue="0" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The 0-based index for the day on which the calendar week begins (0=Sunday, which is the default)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DDCreateEventText" Type="string" DefaultValue="&quot;Create event for {0}&quot;">
          <Summary><![CDATA[The text to display inside the drag proxy while dragging over the calendar to create a new event (defaults to 'Create event for {0}' where {0} is a date range supplied by the view)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;ddCreateEventText&quot;" />
            <Attribute Type="Category" RawValue="&quot;5. CalendarView&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;Create event for {0}&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The text to display inside the drag proxy while dragging over the calendar to create a new event (defaults to 'Create event for {0}' where {0} is a date range supplied by the view)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DDMoveEventText" Type="string" DefaultValue="&quot;Move event to {0}&quot;">
          <Summary><![CDATA[The text to display inside the drag proxy while dragging an event to reposition it (defaults to 'Move event to {0}' where {0} is the updated event start date/time supplied by the view)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;ddMoveEventText&quot;" />
            <Attribute Type="Category" RawValue="&quot;5. CalendarView&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;Move event to {0}&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The text to display inside the drag proxy while dragging an event to reposition it (defaults to 'Move event to {0}' where {0} is the updated event start date/time supplied by the view)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DDResizeEventText" Type="string" DefaultValue="&quot;Update event to {0}&quot;">
          <Summary><![CDATA[The string displayed to the user in the drag proxy while dragging the resize handle of an event (defaults to 'Update event to {0}' where {0} is the updated event start-end range supplied by the view). Note that this text is only used in views that allow resizing of events.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;ddResizeEventText&quot;" />
            <Attribute Type="Category" RawValue="&quot;5. CalendarView&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;Update event to {0}&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The string displayed to the user in the drag proxy while dragging the resize handle of an event (defaults to 'Update event to {0}' where {0} is the updated event start-end range supplied by the view). Note that this text is only used in views that allow resizing of events." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EnableAddFx" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to enable a visual effect on adding a new event (the default), false to disable it. Note that if enableFx is false it will override this value. The specific effect that runs is defined in the doAddFx method.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. CalendarView&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to enable a visual effect on adding a new event (the default), false to disable it. Note that if enableFx is false it will override this value. The specific effect that runs is defined in the doAddFx method." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EnableDD" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to enable drag and drop in the calendar view (the default), false to disable it]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. CalendarView&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to enable drag and drop in the calendar view (the default), false to disable it" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EnableFx" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to enable a visual effect on adding a new event (the default), false to disable it. Note that if enableFx is false it will override this value. The specific effect that runs is defined in the doAddFx method.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. CalendarView&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to enable a visual effect on adding a new event (the default), false to disable it. Note that if enableFx is false it will override this value. The specific effect that runs is defined in the doAddFx method." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EnableRemoveFx" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to enable a visual effect on removing an event (the default), false to disable it. Note that if enableFx is false it will override this value. The specific effect that runs is defined in the doRemoveFx method.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. CalendarView&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to enable a visual effect on removing an event (the default), false to disable it. Note that if enableFx is false it will override this value. The specific effect that runs is defined in the doRemoveFx method." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EnableUpdateFx" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to enable a visual effect on updating an event, false to disable it (the default). Note that if enableFx is false it will override this value. The specific effect that runs is defined in the doUpdateFx method.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. CalendarView&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to enable a visual effect on updating an event, false to disable it (the default). Note that if enableFx is false it will override this value. The specific effect that runs is defined in the doUpdateFx method." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MonitorResize" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to monitor the browser's resize event (the default), false to ignore it. If the calendar view is rendered into a fixed-size container this can be set to false. However, if the view can change dimensions (e.g., it's in fit layout in a viewport or some other resizable container) it is very important that this config is true so that any resize event propagates properly to all subcomponents and layouts get recalculated properly.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. CalendarView&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to monitor the browser's resize event (the default), false to ignore it. If the calendar view is rendered into a fixed-size container this can be set to false. However, if the view can change dimensions (e.g., it's in fit layout in a viewport or some other resizable container) it is very important that this config is true so that any resize event propagates properly to all subcomponents and layouts get recalculated properly." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SpansHavePriority" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Allows switching between two different modes of rendering events that span multiple days. When true, span events are always sorted first, possibly at the expense of start dates being out of order (e.g., a span event that starts at 11am one day and spans into the next day would display before a non-spanning event that starts at 10am, even though they would not be in date order). This can lead to more compact layouts when there are many overlapping events. If false (the default), events will always sort by start date first which can result in a less compact, but chronologically consistent layout.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. CalendarView&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Allows switching between two different modes of rendering events that span multiple days. When true, span events are always sorted first, possibly at the expense of start dates being out of order (e.g., a span event that starts at 11am one day and spans into the next day would display before a non-spanning event that starts at 10am, even though they would not be in date order). This can lead to more compact layouts when there are many overlapping events. If false (the default), events will always sort by start date first which can result in a less compact, but chronologically consistent layout." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TrackMouseOver" Type="bool" DefaultValue="true">
          <Summary><![CDATA[Whether or not the view tracks and responds to the browser mouseover event on contained elements (defaults to true). If you don't need mouseover event highlighting you can disable this.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. CalendarView&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Whether or not the view tracks and responds to the browser mouseover event on contained elements (defaults to true). If you don't need mouseover event highlighting you can disable this." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="GetEventBodyMarkup" Type="JFunction" DefaultValue="null">
          <Summary><![CDATA[Returns a string of HTML template markup to be used as the body portion of the event template created by getEventTemplate. This provdes the flexibility to customize what's in the body without having to override the entire XTemplate. This string can include any valid Ext.Template code, and any data tokens accessible to the containing event template can be referenced in this string.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;5. CalendarView&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="Returns a string of HTML template markup to be used as the body portion of the event template created by getEventTemplate. This provdes the flexibility to customize what's in the body without having to override the entire XTemplate. This string can include any valid Ext.Template code, and any data tokens accessible to the containing event template can be referenced in this string." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="GetEventTemplate" Type="JFunction" DefaultValue="null">
          <Summary><![CDATA[Returns the XTemplate that is bound to the calendar's event store to populate the calendar views with events.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;5. CalendarView&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="Returns the XTemplate that is bound to the calendar's event store to populate the calendar views with events." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="CalendarViewDirectEvents" Extends="BoxComponentDirectEvents">
      <Attributes />
      <ConfigOptions>
        <ConfigOption Name="DateChange" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after the start date of the view changes]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CalendarView), &quot;Ext.calendar.CalendarView&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;startDate&quot;, typeof(DateTime), &quot;The start date of the view&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;viewStart&quot;, typeof(DateTime), &quot;The first displayed date in the view&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;viewEnd&quot;, typeof(DateTime), &quot;The last displayed date in the view&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;datechange&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the start date of the view changes" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DayOut" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when the mouse exits a day element]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CalendarView), &quot;Ext.calendar.CalendarView&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;date&quot;, typeof(DateTime), &quot;The date that is exited&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;el&quot;, typeof(Element), &quot;The day Element that is exited&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;dayout&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the mouse exits a day element" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DayOver" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires while the mouse is over a day element]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CalendarView), &quot;Ext.calendar.CalendarView&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;date&quot;, typeof(DateTime), &quot;The date that is being moused over&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;el&quot;, typeof(Element), &quot;The day Element that is being moused over&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;dayover&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires while the mouse is over a day element" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EventClick" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after the user clicks on an event element]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CalendarView), &quot;Ext.calendar.CalendarView&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object), &quot;The record for the event that was clicked on&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;el&quot;, typeof(object), &quot;The DOM node that was clicked on&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;eventclick&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the user clicks on an event element" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EventMove" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after an event element is dragged by the user and dropped in a new position]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CalendarView), &quot;Ext.calendar.CalendarView&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object), &quot;The record for the event that was moved with updated start and end dates&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;eventmove&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after an event element is dragged by the user and dropped in a new position" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EventOut" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires anytime the mouse exits an event element]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CalendarView), &quot;Ext.calendar.CalendarView&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object), &quot;The record for the event that the cursor exited&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;el&quot;, typeof(object), &quot;The DOM node that was exited&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;eventout&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires anytime the mouse exits an event element" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EventOver" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires anytime the mouse is over an event element]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CalendarView), &quot;Ext.calendar.CalendarView&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object), &quot;The record for the event that the cursor is over&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;el&quot;, typeof(object), &quot;The DOM node that is being moused over&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;eventover&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires anytime the mouse is over an event element" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EventsRendered" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after events are finished rendering in the view]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CalendarView), &quot;Ext.calendar.CalendarView&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;eventsrendered&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after events are finished rendering in the view" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="InitDrag" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when a drag operation is initiated in the view]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CalendarView), &quot;Ext.calendar.CalendarView&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;initdrag&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a drag operation is initiated in the view" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RangeSelect" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after the user drags on the calendar to select a range of dates/times in which to create an event]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CalendarView), &quot;Ext.calendar.CalendarView&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;dates&quot;, typeof(object), &quot;An object containing the start (StartDate property) and end (EndDate property) dates selected&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;callback&quot;, typeof(JFunction), &quot;A callback function that MUST be called after the event handling is complete so that the view is properly cleaned up (shim elements are persisted in the view while the user is prompted to handle the range selection). The callback is already created in the proper scope, so it simply needs to be executed as a standard function call (e.g., callback()).&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;rangeselect&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the user drags on the calendar to select a range of dates/times in which to create an event" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="CalendarViewListeners" Extends="BoxComponentListeners">
      <Attributes />
      <ConfigOptions>
        <ConfigOption Name="DateChange" Type="ComponentListener">
          <Summary><![CDATA[Fires after the start date of the view changes]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CalendarView), &quot;Ext.calendar.CalendarView&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;startDate&quot;, typeof(DateTime), &quot;The start date of the view&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;viewStart&quot;, typeof(DateTime), &quot;The first displayed date in the view&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;viewEnd&quot;, typeof(DateTime), &quot;The last displayed date in the view&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;datechange&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the start date of the view changes" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DayOut" Type="ComponentListener">
          <Summary><![CDATA[Fires when the mouse exits a day element]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CalendarView), &quot;Ext.calendar.CalendarView&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;date&quot;, typeof(DateTime), &quot;The date that is exited&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;el&quot;, typeof(Element), &quot;The day Element that is exited&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;dayout&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the mouse exits a day element" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DayOver" Type="ComponentListener">
          <Summary><![CDATA[Fires while the mouse is over a day element]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CalendarView), &quot;Ext.calendar.CalendarView&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;date&quot;, typeof(DateTime), &quot;The date that is being moused over&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;el&quot;, typeof(Element), &quot;The day Element that is being moused over&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;dayover&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires while the mouse is over a day element" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EventClick" Type="ComponentListener">
          <Summary><![CDATA[Fires after the user clicks on an event element]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CalendarView), &quot;Ext.calendar.CalendarView&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object), &quot;The record for the event that was clicked on&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;el&quot;, typeof(object), &quot;The DOM node that was clicked on&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;eventclick&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the user clicks on an event element" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EventMove" Type="ComponentListener">
          <Summary><![CDATA[Fires after an event element is dragged by the user and dropped in a new position]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CalendarView), &quot;Ext.calendar.CalendarView&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object), &quot;The record for the event that was moved with updated start and end dates&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;eventmove&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after an event element is dragged by the user and dropped in a new position" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EventOut" Type="ComponentListener">
          <Summary><![CDATA[Fires anytime the mouse exits an event element]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CalendarView), &quot;Ext.calendar.CalendarView&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object), &quot;The record for the event that the cursor exited&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;el&quot;, typeof(object), &quot;The DOM node that was exited&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;eventout&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires anytime the mouse exits an event element" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EventOver" Type="ComponentListener">
          <Summary><![CDATA[Fires anytime the mouse is over an event element]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CalendarView), &quot;Ext.calendar.CalendarView&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object), &quot;The record for the event that the cursor is over&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;el&quot;, typeof(object), &quot;The DOM node that is being moused over&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;eventover&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires anytime the mouse is over an event element" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EventsRendered" Type="ComponentListener">
          <Summary><![CDATA[Fires after events are finished rendering in the view]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CalendarView), &quot;Ext.calendar.CalendarView&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;eventsrendered&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after events are finished rendering in the view" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="InitDrag" Type="ComponentListener">
          <Summary><![CDATA[Fires when a drag operation is initiated in the view]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CalendarView), &quot;Ext.calendar.CalendarView&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;initdrag&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a drag operation is initiated in the view" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RangeSelect" Type="ComponentListener">
          <Summary><![CDATA[Fires after the user drags on the calendar to select a range of dates/times in which to create an event]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CalendarView), &quot;Ext.calendar.CalendarView&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;dates&quot;, typeof(object), &quot;An object containing the start (StartDate property) and end (EndDate property) dates selected&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;callback&quot;, typeof(JFunction), &quot;A callback function that MUST be called after the event handling is complete so that the view is properly cleaned up (shim elements are persisted in the view while the user is prompted to handle the range selection). The callback is already created in the proper scope, so it simply needs to be executed as a standard function call (e.g., callback()).&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;rangeselect&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the user drags on the calendar to select a range of dates/times in which to create an event" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="CardLayout" Extends="ContainerLayout">
      <Summary><![CDATA[This layout contains multiple panels, each fit to the content Container, where only a single panel can be visible at any given time. This layout style is most commonly used for wizards, tab implementations, etc. This class is intended to be extended or created via the layout:'card' Ext.Container.layout config, and should generally not need to be created directly via the new keyword.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:CardLayout runat=\&quot;server\&quot;&gt;&lt;/{0}:CardLayout&gt;&quot;" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(CardLayout), &quot;Build.ToolboxIcons.Layout.bmp&quot;" />
        <Attribute Type="Description" RawValue="This layout contains multiple panels, each fit to the content Container, where only a single panel can be visible at any given time. This layout style is most commonly used for wizards, tab implementations, etc. This class is intended to be extended or created via the layout:'card' Ext.Container.layout config, and should generally not need to be created directly via the new keyword." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="DeferredRender" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to render each contained items at the time it becomes active, false to render all contained items as soon as the layout is rendered (defaults to false). If there is a significant amount of content or a lot of heavy controls being rendered into panels that are not displayed by default, setting this to true might improve performance.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;6. CardLayout&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to render each contained items at the time it becomes active, false to render all contained items as soon as the layout is rendered (defaults to false). If there is a significant amount of content or a lot of heavy controls being rendered into panels that are not displayed by default, setting this to true might improve performance." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="LayoutOnCardChange" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to force a layout of the active item when the active card is changed. Defaults to false.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;6. CardLayout&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to force a layout of the active item when the active card is changed. Defaults to false." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="LayoutConfig" Modifier="Override" Access="ProtectedInternal" Type="LayoutConfig">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Object" />
            <Attribute Type="Browsable" RawValue="false" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="CardLayoutConfig" Extends="LayoutConfig">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="DeferredRender" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to render each contained item at the time it becomes active, false to render all contained items as soon as the layout is rendered (defaults to false). If there is a significant amount of content or a lot of heavy controls being rendered into panels that are not displayed by default, setting this to true might improve performance.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. CardLayout&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to render each contained item at the time it becomes active, false to render all contained items as soon as the layout is rendered (defaults to false). If there is a significant amount of content or a lot of heavy controls being rendered into panels that are not displayed by default, setting this to true might improve performance." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="LayoutOnCardChange" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to force a layout of the active item when the active card is changed. Defaults to false.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. CardLayout&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to force a layout of the active item when the active card is changed. Defaults to false." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="Cell" Extends="LayoutItem">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="RowSpan" Type="int" DefaultValue="0">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;rowspan&quot;, JsonMode.Raw" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Category" RawValue="&quot;6. TableLayout&quot;" />
            <Attribute Type="DefaultValue" RawValue="0" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ColSpan" Type="int" DefaultValue="0">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;colspan&quot;, JsonMode.Raw" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Category" RawValue="&quot;6. TableLayout&quot;" />
            <Attribute Type="DefaultValue" RawValue="0" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CellCls" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. TableLayout&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CellId" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. TableLayout&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="CellCollection" Extends="StateManagedCollection&lt;Cell&gt;">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="CellSelectionModel" Extends="AbstractSelectionModel">
      <Summary><![CDATA[This class provides the basic implementation for single cell selection in a grid. The object stored as the selection and returned by getSelectedCell contains the following properties:]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="Description" RawValue="This class provides the basic implementation for single cell selection in a grid. The object stored as the selection and returned by getSelectedCell contains the following properties:" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="IgnoreTargets" Type="string[]" DefaultValue="null">
          <Summary><![CDATA[The list of selectors of the ignore targets]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="typeof(StringArrayJsonConverter)" />
            <Attribute Type="TypeConverter" RawValue="typeof(StringArrayConverter)" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="The list of selectors of the ignore targets" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Listeners" Type="CellSelectionModelListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="CellSelectionModelDirectEvents">
          <Summary><![CDATA[Server-side Ajax Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="Description" RawValue="Server-side Ajax Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SelectedCell" Type="SelectedCell">
          <Summary><![CDATA[Selected cell]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;selectedData&quot;, JsonMode.Object" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Selected cell" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods>
        <Method Name="Clear">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="ClearSelections">
          <Summary><![CDATA[Clears all selections.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Clears all selections." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="ClearSelections" ParamsRaw="bool notify">
          <Summary><![CDATA[Clears all selections.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Clears all selections." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Select" ParamsRaw="int rowIndex, int collIndex">
          <Summary><![CDATA[Selects a range of rows. All rows in between startRow and endRow are also selected.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Selects a range of rows. All rows in between startRow and endRow are also selected." />
          </Attributes>
          <Parameters />
        </Method>
      </Methods>
    </Class>
    <Class Name="CellSelectionModelDirectEvents" Extends="ComponentBaseDirectEvents">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="BeforeCellSelect" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before a cell is selected.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CellSelectionModel), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;rowIndex&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;colIndex&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforecellselect&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before a cell is selected." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CellSelect" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when a cell is selected.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CellSelectionModel), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;rowIndex&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;colIndex&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;cellselect&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a cell is selected." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SelectionChange" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when the active selection changes.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CellSelectionModel), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;selection&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;selectionchange&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the active selection changes." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="CellSelectionModelListeners" Extends="ComponentBaseListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="BeforeCellSelect" Type="ComponentListener">
          <Summary><![CDATA[Fires before a cell is selected.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CellSelectionModel),&quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;rowIndex&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;colIndex&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforecellselect&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before a cell is selected." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CellSelect" Type="ComponentListener">
          <Summary><![CDATA[Fires when a cell is selected.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CellSelectionModel), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;rowIndex&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;colIndex&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;cellselect&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a cell is selected." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SelectionChange" Type="ComponentListener">
          <Summary><![CDATA[Fires when the active selection changes.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CellSelectionModel), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;selection&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;selectionchange&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the active selection changes." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="CenterLayout" Extends="ContainerLayout">
      <Summary><![CDATA[This is a very simple layout style used to center contents within a container.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:CenterLayout runat=\&quot;server\&quot;&gt;&lt;{0}:Panel runat=\&quot;server\&quot; Title=\&quot;Title\&quot;&gt;&lt;Items&gt;&lt;/Items&gt;&lt;/{0}:Panel&gt;&lt;/{0}:CenterLayout&gt;&quot;" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(CenterLayout), &quot;Build.ToolboxIcons.Layout.bmp&quot;" />
        <Attribute Type="Description" RawValue="This is a very simple layout style used to center contents within a container." />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="ChangeRecords&lt;T&gt;">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="Checkbox" Extends="CheckboxBase" Inherits="IPostBackEventHandler,ICheckBoxControl">
      <Summary><![CDATA[Single checkbox field. Can be used as a direct replacement for traditional Checkbox controls.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:Checkbox runat=\&quot;server\&quot; /&gt;&quot;" />
        <Attribute Type="DefaultProperty" RawValue="&quot;Text&quot;" />
        <Attribute Type="DefaultEvent" RawValue="&quot;CheckedChanged&quot;" />
        <Attribute Type="ValidationProperty" RawValue="&quot;Text&quot;" />
        <Attribute Type="ControlValueProperty" RawValue="&quot;Checked&quot;" />
        <Attribute Type="ParseChildren" RawValue="true" />
        <Attribute Type="PersistChildren" RawValue="false" />
        <Attribute Type="SupportsEventValidation" />
        <Attribute Type="Designer" RawValue="typeof(CheckboxDesigner)" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(Checkbox), &quot;Build.ToolboxIcons.Checkbox.bmp&quot;" />
        <Attribute Type="Description" RawValue="Single checkbox field. Can be used as a direct replacement for traditional Checkbox controls." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Listeners" Type="CheckboxListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="CheckboxDirectEvents">
          <Summary><![CDATA[Server-side Ajax Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Server-side Ajax Event Handlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="CheckboxBase" Abstract="true" Extends="Field">
      <Attributes>
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="BoxLabel" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The text that appears beside the checkbox (defaults to '').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetBoxLabel&quot;" />
            <Attribute Type="Category" RawValue="&quot;6. Checkbox&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The text that appears beside the checkbox (defaults to '')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BoxLabelStyle" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetBoxLabelStyle&quot;" />
            <Attribute Type="Category" RawValue="&quot;6. Checkbox&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BoxLabelCls" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetBoxLabelCls&quot;" />
            <Attribute Type="Category" RawValue="&quot;6. Checkbox&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Checked" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True if the checkbox should render already checked (defaults to false).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetValue&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Category" RawValue="&quot;6. Checkbox&quot;" />
            <Attribute Type="Bindable" RawValue="true, BindingDirection.TwoWay" />
            <Attribute Type="Description" RawValue="True if the checkbox should render already checked (defaults to false)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CheckedCls" Type="string" DefaultValue="&quot;x-form-check-checked&quot;">
          <Summary><![CDATA[The CSS class to use when the control is checked (defaults to 'x-form-check-checked'). Note that this class applies to both checkboxes and radio buttons and is added to the control's wrapper element.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. Checkbox&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;x-form-check-checked&quot;" />
            <Attribute Type="Description" RawValue="The CSS class to use when the control is checked (defaults to 'x-form-check-checked'). Note that this class applies to both checkboxes and radio buttons and is added to the control's wrapper element." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="FocusCls" Type="string" DefaultValue="&quot;x-form-check-focus&quot;">
          <Summary><![CDATA[The CSS class to use when the control receives input focus (defaults to 'x-form-check-focus'). Note that this class applies to both checkboxes and radio buttons and is added to the control's wrapper element.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. Checkbox&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;x-form-check-focus&quot;" />
            <Attribute Type="Description" RawValue="The CSS class to use when the control receives input focus (defaults to 'x-form-check-focus'). Note that this class applies to both checkboxes and radio buttons and is added to the control's wrapper element." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="InputValue" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The value that should go into the generated input element's value attribute (defaults to undefined, with no value attribute)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. Checkbox&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The value that should go into the generated input element's value attribute (defaults to undefined, with no value attribute)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MouseDownCls" Type="string" DefaultValue="&quot;x-form-check-down&quot;">
          <Summary><![CDATA[The CSS class to use when the control is being actively clicked (defaults to 'x-form-check-down'). Note that this class applies to both checkboxes and radio buttons and is added to the control's wrapper element.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. Checkbox&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;x-form-check-down&quot;" />
            <Attribute Type="Description" RawValue="The CSS class to use when the control is being actively clicked (defaults to 'x-form-check-down'). Note that this class applies to both checkboxes and radio buttons and is added to the control's wrapper element." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="OverCls" Modifier="Override" Type="string" DefaultValue="&quot;x-form-check-over&quot;">
          <Summary><![CDATA[The CSS class to use when the control is hovered over (defaults to 'x-form-check-over'). Note that this class applies to both checkboxes and radio buttons and is added to the control's wrapper element.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. Checkbox&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;x-form-check-over&quot;" />
            <Attribute Type="Description" RawValue="The CSS class to use when the control is hovered over (defaults to 'x-form-check-over'). Note that this class applies to both checkboxes and radio buttons and is added to the control's wrapper element." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Tag" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. Checkbox&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="CheckboxColumn" Extends="Checkbox">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxItem" RawValue="false" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Items" Type="ItemsCollection&lt;Component&gt;">
          <Summary><![CDATA[Items collection]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;items&quot;, typeof(ItemCollectionJsonConverter)" />
            <Attribute Type="Category" RawValue="&quot;7. CheckboxColumn&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="Items collection" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="CheckboxConverter" Extends="StringConverter">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="CheckboxDirectEvents" Extends="FieldDirectEvents">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Check" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when the Checkbox is checked or unchecked.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Checkbox), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;checked&quot;, typeof(bool), &quot;The new checked value&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;check&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the Checkbox is checked or unchecked." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="CheckboxGroup" Extends="CheckboxGroupBase" Inherits="IItems">
      <Summary><![CDATA[A grouping container for Ext.form.Checkbox controls.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:CheckboxGroup runat=\&quot;server\&quot; /&gt;&quot;" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(CheckboxGroup), &quot;Build.ToolboxIcons.CheckboxGroup.bmp&quot;" />
        <Attribute Type="Description" RawValue="A grouping container for Ext.form.Checkbox controls." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="DefaultType" Type="string" DefaultValue="&quot;Checkbox&quot;">
          <Summary><![CDATA[The default type of content Container represented by this object as registered in Ext.ComponentMgr (defaults to 'checkbox').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;5. Container&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;Checkbox&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(DefaultTypeConverter)" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The default type of content Container represented by this object as registered in Ext.ComponentMgr (defaults to 'checkbox')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DefaultTypeProxy" Access="Protected" Type="string" DefaultValue="&quot;checkbox&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;defaultType&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;checkbox&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Listeners" Type="CheckboxGroupListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="CheckboxGroupDirectEvents">
          <Summary><![CDATA[Server-side Ajax Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Server-side Ajax Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Items" Type="ItemsCollection&lt;Checkbox&gt;">
          <Summary><![CDATA[Items collection]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;items&quot;, typeof(ItemCollectionJsonConverter)" />
            <Attribute Type="Category" RawValue="&quot;6. CheckboxGroup&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="Items collection" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="CheckboxGroupBase" Abstract="true" Extends="Field">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="ItemCls" Modifier="Override" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Ignore" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ItemClsProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;itemCls&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AllowBlank" Type="bool" DefaultValue="true">
          <Summary><![CDATA[False to validate that at least one item in the group is checked (defaults to true). If no items are selected at validation time, BlankText will be used as the error text.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. CheckboxGroup&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="False to validate that at least one item in the group is checked (defaults to true). If no items are selected at validation time, BlankText will be used as the error text." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BlankText" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[Error text to display if the AllowBlank validation fails (defaults to 'You must select at least one item in this group')]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. CheckboxGroup&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Description" RawValue="Error text to display if the AllowBlank validation fails (defaults to 'You must select at least one item in this group')" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ColumnsNumber" Type="int" DefaultValue="0">
          <Summary><![CDATA[Specifies the number of columns to use when displaying grouped checkbox/radio controls using automatic layout.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;columns&quot;" />
            <Attribute Type="Category" RawValue="&quot;6. CheckboxGroup&quot;" />
            <Attribute Type="DefaultValue" RawValue="0" />
            <Attribute Type="Description" RawValue="Specifies the number of columns to use when displaying grouped checkbox/radio controls using automatic layout." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ColumnsWidths" Type="string[]" DefaultValue="null">
          <Summary><![CDATA[You can also specify an array of column widths, mixing integer (fixed width) and float (percentage width) values as needed (e.g., [100, .25, .75]). Any integer values will be rendered first, then any float values will be calculated as a percentage of the remaining space. Float values do not have to add up to 1 (100%) although if you want the controls to take up the entire field container you should do so.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;columns&quot;, typeof(StringArrayJsonConverter)" />
            <Attribute Type="TypeConverter" RawValue="typeof(StringArrayConverter)" />
            <Attribute Type="Category" RawValue="&quot;6. CheckboxGroup&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="You can also specify an array of column widths, mixing integer (fixed width) and float (percentage width) values as needed (e.g., [100, .25, .75]). Any integer values will be rendered first, then any float values will be calculated as a percentage of the remaining space. Float values do not have to add up to 1 (100%) although if you want the controls to take up the entire field container you should do so." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="FireChangeOnLoad" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Fire change event after rendering]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. CheckboxGroup&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="Fire change event after rendering" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Vertical" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to distribute contained controls across columns, completely filling each column top to bottom before starting on the next column. The number of controls in each column will be automatically calculated to keep columns as even as possible. The default value is false, so that controls will be added to columns one at a time, completely filling each row left to right before starting on the next row.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. CheckboxGroup&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to distribute contained controls across columns, completely filling each column top to bottom before starting on the next column. The number of controls in each column will be automatically calculated to keep columns as even as possible. The default value is false, so that controls will be added to columns one at a time, completely filling each row left to right before starting on the next row." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods>
        <Method Name="SetValue" ParamsRaw="string id, bool value">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SetValue" ParamsRaw="bool[] values">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SetValue" ParamsRaw="Dictionary&lt;string, bool&gt; values">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SetValue" ParamsRaw="string values">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" />
          </Attributes>
          <Parameters />
        </Method>
      </Methods>
    </Class>
    <Class Name="CheckboxGroupDirectEvents" Extends="FieldDirectEvents">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Change" Modifier="Override" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when the state of a child checkbox changes.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CheckboxGroup), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;checked&quot;, typeof(object), &quot;An array containing the checked boxes.&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;change&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the state of a child checkbox changes." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="CheckboxGroupListeners" Extends="FieldListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Change" Modifier="Override" Type="ComponentListener">
          <Summary><![CDATA[Fires when the state of a child checkbox changes.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CheckboxGroup), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;checked&quot;, typeof(object), &quot;An array containing the checked boxes.&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;change&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the state of a child checkbox changes." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="CheckboxListeners" Extends="FieldListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Check" Type="ComponentListener">
          <Summary><![CDATA[Fires when the Checkbox is checked or unchecked.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Checkbox), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;checked&quot;, typeof(bool), &quot;The new checked value&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;check&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the Checkbox is checked or unchecked." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="CheckboxSelectionModel" Extends="RowSelectionModel">
      <Summary><![CDATA[A custom selection model that renders a column of checkboxes that can be toggled to select or deselect rows.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="Description" RawValue="A custom selection model that renders a column of checkboxes that can be toggled to select or deselect rows." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="CheckOnly" Type="bool" DefaultValue="false">
          <Summary><![CDATA[true if rows can only be selected by clicking on the checkbox column (defaults to false).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="true if rows can only be selected by clicking on the checkbox column (defaults to false)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Header" Type="string" DefaultValue="&quot;&lt;div class=\&quot;x-grid3-hd-checker\&quot;&gt; &lt;/div&gt;&quot;">
          <Summary><![CDATA[Any valid text or HTML fragment to display in the header cell for the checkbox column (defaults to '<div class='x-grid3-hd-checker'> </div>'). The default CSS class of 'x-grid3-hd-checker' displays a checkbox in the header and provides support for automatic check all/none behavior on header click. This string can be replaced by any valid HTML fragment, including a simple text string (e.g., 'Select Rows'), but the automatic check all/none behavior will only work if the 'x-grid3-hd-checker' class is supplied.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&lt;div class=\&quot;x-grid3-hd-checker\&quot;&gt; &lt;/div&gt;&quot;" />
            <Attribute Type="Description" RawValue="Any valid text or HTML fragment to display in the header cell for the checkbox column (defaults to '&lt;div class='x-grid3-hd-checker'&gt; &lt;/div&gt;'). The default CSS class of 'x-grid3-hd-checker' displays a checkbox in the header and provides support for automatic check all/none behavior on header click. This string can be replaced by any valid HTML fragment, including a simple text string (e.g., 'Select Rows'), but the automatic check all/none behavior will only work if the 'x-grid3-hd-checker' class is supplied." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Sortable" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True if the checkbox column is sortable (defaults to false).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True if the checkbox column is sortable (defaults to false)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HideCheckAll" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True if need hide the checkbox in the header (defaults to false).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True if need hide the checkbox in the header (defaults to false)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AllowDeselect" Type="bool" DefaultValue="true">
          <Summary><![CDATA[False if need disable deselection]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="False if need disable deselection" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Width" Type="int" DefaultValue="20">
          <Summary><![CDATA[The default width in pixels of the checkbox column (defaults to 20).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="20" />
            <Attribute Type="Description" RawValue="The default width in pixels of the checkbox column (defaults to 20)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RowSpan" Type="int" DefaultValue="1">
          <Summary><![CDATA[RowSpan attribute for the checkbox table cell]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="1" />
            <Attribute Type="Description" RawValue="RowSpan attribute for the checkbox table cell" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ColumnPosition" Type="int" DefaultValue="0">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="0" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="KeepSelectionOnClick" Type="KeepSelectionMode" DefaultValue="KeepSelectionMode.Always">
          <Summary><![CDATA[Selection Mode]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="Category" RawValue="&quot;6. MultiSelect&quot;" />
            <Attribute Type="DefaultValue" RawValue="KeepSelectionMode.Always" />
            <Attribute Type="Description" RawValue="Selection Mode" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="CheckColumn" Extends="ColumnBase">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="XType" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;xtype&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Editable" Modifier="Override" Type="bool" DefaultValue="false">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. CheckColumn&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SingleSelect" Type="bool" DefaultValue="false">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. CheckColumn&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="CheckMenuItem" Extends="MenuItemBase" Inherits="IXPostBackDataHandler">
      <Summary><![CDATA[Adds a menu item that contains a checkbox by default, but can also be part of a radio group.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="Description" RawValue="Adds a menu item that contains a checkbox by default, but can also be part of a radio group." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Checked" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to initialize this checkbox as checked (defaults to false). Note that if this checkbox is part of a radio group (group = true) only the last item in the group that is initialized with checked = true will be rendered as checked.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetChecked&quot;" />
            <Attribute Type="Category" RawValue="&quot;6. CheckItem&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to initialize this checkbox as checked (defaults to false). Note that if this checkbox is part of a radio group (group = true) only the last item in the group that is initialized with checked = true will be rendered as checked." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Group" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[All check items with the same group name will automatically be grouped into a single-select radio button group (defaults to '').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. CheckItem&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="All check items with the same group name will automatically be grouped into a single-select radio button group (defaults to '')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="GroupClass" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The default CSS class to use for radio group check items (defaults to \"x-menu-group-item\")]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. CheckItem&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The default CSS class to use for radio group check items (defaults to \&quot;x-menu-group-item\&quot;)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CheckHandler" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A function that handles the checkchange event.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;6. CheckItem&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="A function that handles the checkchange event." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Listeners" Type="CheckMenuItemListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="CheckMenuItemDirectEvents">
          <Summary><![CDATA[Server-side DirectEventHandlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Server-side DirectEventHandlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods>
        <Method Name="SetChecked" ParamsRaw="bool value, bool suppressEvent">
          <Summary><![CDATA[Set the checked state of this item.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Set the checked state of this item." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SetChecked" ParamsRaw="bool value">
          <Summary><![CDATA[Set the checked state of this item.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Set the checked state of this item." />
          </Attributes>
          <Parameters />
        </Method>
      </Methods>
    </Class>
    <Class Name="CheckMenuItemDirectEvents" Extends="BaseMenuItemDirectEvents">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="BeforeCheckChange" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before the checked value is set, providing an opportunity to cancel if needed]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CheckMenuItem), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;checked&quot;, typeof(bool), &quot;checked&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforecheckchange&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the checked value is set, providing an opportunity to cancel if needed" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CheckChange" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after the checked value has been set]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CheckMenuItem), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;checked&quot;, typeof(bool), &quot;checked&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;checkchange&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the checked value has been set" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="CheckMenuItemListeners" Extends="BaseMenuItemListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="BeforeCheckChange" Type="ComponentListener">
          <Summary><![CDATA[Fires before the checked value is set, providing an opportunity to cancel if needed]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CheckMenuItem), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;checked&quot;, typeof(bool), &quot;checked&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforecheckchange&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the checked value is set, providing an opportunity to cancel if needed" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CheckChange" Type="ComponentListener">
          <Summary><![CDATA[Fires after the checked value has been set]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CheckMenuItem), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;checked&quot;, typeof(bool), &quot;checked&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;checkchange&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the checked value has been set" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ClickRepeater" Extends="Observable">
      <Summary><![CDATA[A wrapper class which can be applied to any element. Fires a \"click\" event while the mouse is pressed. The interval between firings may be specified in the config but defaults to 20 milliseconds. Optionally, a CSS class may be applied to the element during the time it is pressed.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(ClickRepeater), &quot;Build.ToolboxIcons.ClickRepeater.bmp&quot;" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:ClickRepeater runat=\&quot;server\&quot;&gt;&lt;/{0}:ClickRepeater&gt;&quot;" />
        <Attribute Type="ToolboxItem" RawValue="true" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="Description" RawValue="A wrapper class which can be applied to any element. Fires a \&quot;click\&quot; event while the mouse is pressed. The interval between firings may be specified in the config but defaults to 20 milliseconds. Optionally, a CSS class may be applied to the element during the time it is pressed." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Accelerate" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True if autorepeating should start slowly and accelerate. Interval and Delay are ignored.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. ClickRepeater&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True if autorepeating should start slowly and accelerate. Interval and Delay are ignored." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Delay" Type="int" DefaultValue="250">
          <Summary><![CDATA[The initial delay before the repeating event begins firing. Similar to an autorepeat key delay.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;3. ClickRepeater&quot;" />
            <Attribute Type="DefaultValue" RawValue="250" />
            <Attribute Type="Description" RawValue="The initial delay before the repeating event begins firing. Similar to an autorepeat key delay." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TargetProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;el&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Target" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The element to act as a button.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;3. ClickRepeater&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The element to act as a button." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Interval" Type="int" DefaultValue="20">
          <Summary><![CDATA[The interval between firings of the \"click\" event. Default 20 ms.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;3. ClickRepeater&quot;" />
            <Attribute Type="DefaultValue" RawValue="20" />
            <Attribute Type="Description" RawValue="The interval between firings of the \&quot;click\&quot; event. Default 20 ms." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="PressClass" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A CSS class name to be applied to the element while pressed.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. ClickRepeater&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="A CSS class name to be applied to the element while pressed." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="PreventDefault" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to prevent the default click event.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. ClickRepeater&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to prevent the default click event." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="StopDefault" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to stop the default click event]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. ClickRepeater&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to stop the default click event" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Handler" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A function called when the traget is clicked (can be used instead of click event).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;3. ClickRepeater&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="A function called when the traget is clicked (can be used instead of click event)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IgnoreLeftButton" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to ignore the left button]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;3. ClickRepeater&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to ignore the left button" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IgnoreRightButton" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to ignore the right button]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;3. ClickRepeater&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to ignore the right button" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IgnoreMiddleButton" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to ignore the middle button]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;3. ClickRepeater&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to ignore the middle button" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IgnoredButtons" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Listeners" Type="ClickRepeaterListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="ClickRepeaterDirectEvents">
          <Summary><![CDATA[Server-side DirectEventHandlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Server-side DirectEventHandlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ClickRepeaterDirectEvents" Extends="ComponentDirectEvents">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Click" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires on a specified interval during the time the element is pressed.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Button), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object), &quot;The click event&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;click&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires on a specified interval during the time the element is pressed." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="LeftClick" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires on a specified interval during the time the element is pressed.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Button), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object), &quot;The click event&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;leftclick&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires on a specified interval during the time the element is pressed." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MiddleClick" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires on a specified interval during the time the element is pressed.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Button), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object), &quot;The click event&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;middleclick&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires on a specified interval during the time the element is pressed." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RightClick" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires on a specified interval during the time the element is pressed.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Button), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object), &quot;The click event&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;rightclick&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires on a specified interval during the time the element is pressed." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MouseDown" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when the mouse button is depressed.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Button), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object), &quot;The click event&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;mousedown&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the mouse button is depressed." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MouseUp" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when the mouse key is released.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Button), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object), &quot;The click event&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;mouseup&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the mouse key is released." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ClickRepeaterListeners" Extends="ComponentListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Click" Type="ComponentListener">
          <Summary><![CDATA[Fires on a specified interval during the time the element is pressed.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Button), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object), &quot;The click event&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;click&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires on a specified interval during the time the element is pressed." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="LeftClick" Type="ComponentListener">
          <Summary><![CDATA[Fires on a specified interval during the time the element is pressed.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Button), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object), &quot;The click event&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;leftclick&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires on a specified interval during the time the element is pressed." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MiddleClick" Type="ComponentListener">
          <Summary><![CDATA[Fires on a specified interval during the time the element is pressed.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Button), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object), &quot;The click event&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;middleclick&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires on a specified interval during the time the element is pressed." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RightClick" Type="ComponentListener">
          <Summary><![CDATA[Fires on a specified interval during the time the element is pressed.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Button), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object), &quot;The click event&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;rightclick&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires on a specified interval during the time the element is pressed." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MouseDown" Type="ComponentListener">
          <Summary><![CDATA[Fires when the mouse button is depressed.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Button), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object), &quot;The click event&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;mousedown&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the mouse button is depressed." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MouseUp" Type="ComponentListener">
          <Summary><![CDATA[Fires when the mouse key is released.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Button), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object), &quot;The click event&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;mouseup&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the mouse key is released." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ColorMenu" Extends="MenuBase">
      <Summary><![CDATA[A menu containing a Ext.menu.ColorItem component (which provides a basic color picker).]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="Description" RawValue="A menu containing a Ext.menu.ColorItem component (which provides a basic color picker)." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Palette" Type="ColorPalette">
          <Summary><![CDATA[The ColorPalette object]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;palette&quot;, typeof(LazyControlJsonConverter)" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="The ColorPalette object" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Listeners" Type="ColorMenuListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="ColorMenuDirectEvents">
          <Summary><![CDATA[Server-side DirectEventHandlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Server-side DirectEventHandlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ColorMenuDirectEvents" Extends="MenuDirectEvents">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Select" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(ColorPalette), &quot;palette&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;color&quot;, typeof(object), &quot;color&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;select&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ColorMenuListeners" Extends="MenuListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Select" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(ColorPalette), &quot;palette&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;color&quot;, typeof(object), &quot;color&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;select&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ColorPalette" Extends="Component" Inherits="IAutoPostBack,IXPostBackDataHandler,IPostBackEventHandler">
      <Summary><![CDATA[Simple color palette class for choosing colors.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:ColorPalette runat=\&quot;server\&quot;&gt;&lt;/{0}:ColorPalette&gt;&quot;" />
        <Attribute Type="ParseChildren" RawValue="true" />
        <Attribute Type="PersistChildren" RawValue="false" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(ColorPalette), &quot;Build.ToolboxIcons.ColorPalette.bmp&quot;" />
        <Attribute Type="DefaultProperty" RawValue="&quot;Value&quot;" />
        <Attribute Type="DefaultEvent" RawValue="&quot;SelectionChanged&quot;" />
        <Attribute Type="ValidationProperty" RawValue="&quot;Value&quot;" />
        <Attribute Type="ControlValueProperty" RawValue="&quot;Value&quot;" />
        <Attribute Type="SupportsEventValidation" />
        <Attribute Type="Description" RawValue="Simple color palette class for choosing colors." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="AllowReselect" Type="bool" DefaultValue="false">
          <Summary><![CDATA[If set to true then reselecting a color that is already selected fires the select event]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. ColorPalette&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="If set to true then reselecting a color that is already selected fires the select event" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Colors" Type="string[]" DefaultValue="null">
          <Summary><![CDATA[An array of 6-digit color hex code strings (without the # symbol).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.AlwaysArray" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="An array of 6-digit color hex code strings (without the # symbol)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ItemCls" Modifier="Override" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The CSS class to apply to the containing element (defaults to \"x-color-palette\")]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. ColorPalette&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The CSS class to apply to the containing element (defaults to \&quot;x-color-palette\&quot;)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Template" Type="XTemplate">
          <Summary><![CDATA[An existing XTemplate instance to be used in place of the default template for rendering the component.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;4. ColorPalette&quot;" />
            <Attribute Type="ConfigOption" RawValue="&quot;tpl&quot;, typeof(LazyControlJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="An existing XTemplate instance to be used in place of the default template for rendering the component." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Value" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The initial color to highlight (should be a valid 6-digit color hex code without the # symbol). Note that the hex codes are case-sensitive.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. ColorPalette&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SilentSelect&quot;" />
            <Attribute Type="Description" RawValue="The initial color to highlight (should be a valid 6-digit color hex code without the # symbol). Note that the hex codes are case-sensitive." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AutoPostBack" Type="bool" DefaultValue="false">
          <Summary><![CDATA[AutoPostBack]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;Behavior&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="AutoPostBack" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CausesValidation" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Gets or sets a value indicating whether validation is performed when the control is set to validate when a postback occurs.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;Behavior&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="Gets or sets a value indicating whether validation is performed when the control is set to validate when a postback occurs." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ValidationGroup" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[Gets or Sets the Controls ValidationGroup]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;Behavior&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="Gets or Sets the Controls ValidationGroup" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Listeners" Type="ColorPaletteListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="ColorPaletteDirectEvents">
          <Summary><![CDATA[Server-side DirectEventHandlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Server-side DirectEventHandlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods>
        <Method Name="Select" ParamsRaw="string value">
          <Summary><![CDATA[Selects the specified color in the palette (fires the select event)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Selects the specified color in the palette (fires the select event)" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Select" ParamsRaw="string value, bool suppressEvent">
          <Summary><![CDATA[Selects the specified color in the palette (fires the select event)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Selects the specified color in the palette (fires the select event)" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SilentSelect" ParamsRaw="string value">
          <Summary><![CDATA[Selects the specified color in the palette (doesn't fire the select event)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Selects the specified color in the palette (doesn't fire the select event)" />
          </Attributes>
          <Parameters />
        </Method>
      </Methods>
    </Class>
    <Class Name="ColorPaletteDirectEvents" Extends="ComponentBaseDirectEvents">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Select" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when a color is selected]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Component), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;select&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a color is selected" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ColorPaletteListeners" Extends="ComponentBaseListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Select" Type="ComponentListener">
          <Summary><![CDATA[Fires when a color is selected]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Component), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;color&quot;, typeof(System.Drawing.Color), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;select&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a color is selected" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="Column" Extends="ColumnBase" Inherits="IIcon">
      <Summary><![CDATA[An individual column's config object defines the header string, the Record field the column draws its data from, an optional rendering function to provide customized data formatting, and the ability to apply a CSS class to all cells in a column through its id config option.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" RawValue="An individual column's config object defines the header string, the Record field the column draws its data from, an optional rendering function to provide customized data formatting, and the ability to apply a CSS class to all cells in a column through its id config option." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="XType" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;xtype&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RightCommandAlign" Type="bool" DefaultValue="true">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Commands" Type="ImageCommandCollection">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;commands&quot;, JsonMode.AlwaysArray" />
            <Attribute Type="Category" RawValue="&quot;2. Column&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IsCellCommand" Access="Protected" Type="bool" DefaultValue="false">
          <Attributes>
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="PrepareCommand" Type="JFunction">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;2. Column&quot;" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="PrepareCommands" Type="JFunction">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;2. Column&quot;" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ColumnBase" Abstract="true" Extends="StateManagedItem">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Wrap" Type="bool" DefaultValue="false">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Locked" Type="bool" DefaultValue="false">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;2. ColumnBase&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Align" Type="Alignment" DefaultValue="Alignment.Left">
          <Summary><![CDATA[(optional) Set the CSS text-align property of the column. Defaults to undefined.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="Category" RawValue="&quot;2. ColumnBase&quot;" />
            <Attribute Type="DefaultValue" RawValue="Alignment.Left" />
            <Attribute Type="Description" RawValue="(optional) Set the CSS text-align property of the column. Defaults to undefined." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Css" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[(optional) Set custom CSS for all table cells in the column (excluding headers). Defaults to undefined.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;2. ColumnBase&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="(optional) Set custom CSS for all table cells in the column (excluding headers). Defaults to undefined." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DataIndex" Type="string" DefaultValue="null">
          <Summary><![CDATA[(optional) The name of the field in the grid's Ext.data.Store's Ext.data.Record definition from which to draw the column's value. If not specified, the column's index is used as an index into the Record's data Array.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;2. ColumnBase&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="(optional) The name of the field in the grid's Ext.data.Store's Ext.data.Record definition from which to draw the column's value. If not specified, the column's index is used as an index into the Record's data Array." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Editor" Type="EditorCollection">
          <Summary><![CDATA[(optional) The Ext.form.Field to use when editing values in this column if editing is supported by the grid.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. ColumnBase&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="(optional) The Ext.form.Field to use when editing values in this column if editing is supported by the grid." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EditorProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;editor&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EditorOptions" Type="GridEditorOptions">
          <Summary><![CDATA[Editor options]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. ColumnBase&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="Editor options" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Fixed" Type="bool" DefaultValue="false">
          <Summary><![CDATA[(optional) True if the column width cannot be changed. Defaults to false.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;2. ColumnBase&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="(optional) True if the column width cannot be changed. Defaults to false." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Header" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The header text to display in the Grid view.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;2. ColumnBase&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The header text to display in the Grid view." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Hidden" Type="bool" DefaultValue="false">
          <Summary><![CDATA[(optional) True to hide the column. Defaults to false.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;2. ColumnBase&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="(optional) True to hide the column. Defaults to false." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Hideable" Type="bool" DefaultValue="true">
          <Summary><![CDATA[(optional) Specify as false to prevent the user from hiding this column. Defaults to true.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;2. ColumnBase&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="(optional) Specify as false to prevent the user from hiding this column. Defaults to true." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ColumnID" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[(optional) Defaults to the column's initial ordinal position. A name which identifies this column. The id is used to create a CSS class name which is applied to all table cells (including headers) in that column.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;id&quot;" />
            <Attribute Type="Category" RawValue="&quot;2. ColumnBase&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="(optional) Defaults to the column's initial ordinal position. A name which identifies this column. The id is used to create a CSS class name which is applied to all table cells (including headers) in that column." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MenuDisabled" Type="bool" DefaultValue="false">
          <Summary><![CDATA[(optional) True to disable the column menu. Defaults to false.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;2. ColumnBase&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="(optional) True to disable the column menu. Defaults to false." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Renderer" Type="Renderer" DefaultValue="null">
          <Summary><![CDATA[(optional) A function used to generate HTML markup for a cell given the cell's data value. If not specified, the default renderer uses the raw data value.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="typeof(RendererJsonConverter)" />
            <Attribute Type="Category" RawValue="&quot;2. ColumnBase&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="(optional) A function used to generate HTML markup for a cell given the cell's data value. If not specified, the default renderer uses the raw data value." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="GroupRenderer" Type="Renderer" DefaultValue="null">
          <Summary><![CDATA[(optional) A function used to generate HTML markup for a cell given the cell's data value.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="typeof(RendererJsonConverter)" />
            <Attribute Type="Category" RawValue="&quot;2. ColumnBase&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="(optional) A function used to generate HTML markup for a cell given the cell's data value." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Groupable" Type="bool" DefaultValue="true">
          <Summary><![CDATA[(optional) False to disable grouping by this column. Defaults to true.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;2. ColumnBase&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="(optional) False to disable grouping by this column. Defaults to true." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Resizable" Type="bool" DefaultValue="true">
          <Summary><![CDATA[(optional) False to disable column resizing. Defaults to true.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;2. ColumnBase&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="(optional) False to disable column resizing. Defaults to true." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Scope" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The scope (this reference) in which to execute the renderer. Defaults to the Column configuration object.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;2. ColumnBase&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The scope (this reference) in which to execute the renderer. Defaults to the Column configuration object." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Sortable" Type="bool" DefaultValue="true">
          <Summary><![CDATA[(optional) True if sorting is to be allowed on this column. Defaults to the value of the defaultSortable property. Whether local/remote sorting is used is specified in Ext.data.Store.remoteSort.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. ColumnBase&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="(optional) True if sorting is to be allowed on this column. Defaults to the value of the defaultSortable property. Whether local/remote sorting is used is specified in Ext.data.Store.remoteSort." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SortableProxy" Access="Protected" Type="bool?" DefaultValue="null">
          <Attributes>
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="ConfigOption" RawValue="&quot;sortable&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Tooltip" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[(optional) A text string to use as the column header's tooltip. If Quicktips are enabled, this value will be used as the text of the quick tip, otherwise it will be set as the header's HTML title attribute. Defaults to ''.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;2. ColumnBase&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="(optional) A text string to use as the column header's tooltip. If Quicktips are enabled, this value will be used as the text of the quick tip, otherwise it will be set as the header's HTML title attribute. Defaults to ''." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Width" Type="Unit" DefaultValue="typeof(Unit), &quot;100&quot;">
          <Summary><![CDATA[(optional) The initial width in pixels of the column. Using this instead of Ext.grid.Grid.autoSizeColumns is more efficient.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;2. ColumnBase&quot;" />
            <Attribute Type="DefaultValue" RawValue="typeof(Unit), &quot;100&quot;" />
            <Attribute Type="Description" RawValue="(optional) The initial width in pixels of the column. Using this instead of Ext.grid.Grid.autoSizeColumns is more efficient." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Editable" Type="bool" DefaultValue="true">
          <Summary><![CDATA[Optional. Defaults to true, enabling the configured editor. Set to false to initially disable editing on this column.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;2. ColumnBase&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="Optional. Defaults to true, enabling the configured editor. Set to false to initially disable editing on this column." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EmptyGroupText" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[Optional. If the grid is being rendered by an Ext.grid.GroupingView, this option may be used to specify the text to display when there is an empty group value. Defaults to the Ext.grid.GroupingView.emptyGroupText.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;2. ColumnBase&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="Optional. If the grid is being rendered by an Ext.grid.GroupingView, this option may be used to specify the text to display when there is an empty group value. Defaults to the Ext.grid.GroupingView.emptyGroupText." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="GroupName" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[Optional. If the grid is being rendered by an Ext.grid.GroupingView, this option may be used to specify the text with which to prefix the group field value in the group header line. See also groupRenderer and Ext.grid.GroupingView.showGroupName.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;2. ColumnBase&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="Optional. If the grid is being rendered by an Ext.grid.GroupingView, this option may be used to specify the text with which to prefix the group field value in the group header line. See also groupRenderer and Ext.grid.GroupingView.showGroupName." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CustomConfig" Type="ConfigItemCollection">
          <Summary><![CDATA[Collection of custom js config]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;-&quot;, typeof(CustomConfigJsonConverter)" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="Collection of custom js config" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ColumnCollection" Extends="StateManagedCollection&lt;ColumnBase&gt;">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="ColumnDirectEvents" Extends="ComponentBaseDirectEvents">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="ColumnMoved" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when a column is moved.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Column), &quot;ColumnModel&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;oldIndex&quot;, typeof(int), &quot;Old index&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;newIndex&quot;, typeof(int), &quot;New index&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;columnmoved&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a column is moved." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ConfigChanged" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when the configuration is changed.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Column), &quot;ColumnModel&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;configchanged&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the configuration is changed." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HeaderChange" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when the text of a header changes.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Column), &quot;ColumnModel&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;columnIndex&quot;, typeof(int), &quot;The column index&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;newText&quot;, typeof(string), &quot;The new header text&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;headerchange&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the text of a header changes." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HiddenChange" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when a column is hidden or 'unhidden'.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Column), &quot;ColumnModel&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;columnIndex&quot;, typeof(int), &quot;The column index&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;hidden&quot;, typeof(bool), &quot;true if hidden, false otherwise&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;hiddenchange&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a column is hidden or 'unhidden'." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="WidthChange" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when the width of a column is programmaticially changed using setColumnWidth. Note internal resizing suppresses the event from firing. ]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Column), &quot;ColumnModel&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;columnIndex&quot;, typeof(int), &quot;The column index&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;newWidth&quot;, typeof(int), &quot;The new width&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;widthchange&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the width of a column is programmaticially changed using setColumnWidth. Note internal resizing suppresses the event from firing. " />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ColumnLayout" Extends="ContainerLayout">
      <Summary><![CDATA[This is the layout style of choice for creating structural layouts in a multi-column format where the width of each column can be specified as a percentage or fixed width, but the height is allowed to vary based on the content. ]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:ColumnLayout runat=\&quot;server\&quot;&gt;&lt;{0}:LayoutColumn&gt;&lt;{0}:Panel runat=\&quot;server\&quot; Title=\&quot;Column 1 (125px)\&quot; Width=\&quot;125\&quot; Height=\&quot;200\&quot; /&gt;&lt;/{0}:LayoutColumn&gt;&lt;{0}:LayoutColumn ColumnWidth=\&quot;0.8\&quot;&gt;&lt;{0}:Panel runat=\&quot;server\&quot; Title=\&quot;Column 2 (80% of remainder)\&quot; Height=\&quot;200\&quot; /&gt;&lt;/{0}:LayoutColumn&gt;&lt;{0}:LayoutColumn ColumnWidth=\&quot;0.2\&quot;&gt;&lt;{0}:Panel runat=\&quot;server\&quot; Title=\&quot;Column 3 (20% of remainder)\&quot; Height=\&quot;200\&quot; /&gt;&lt;/{0}:LayoutColumn&gt;&lt;/{0}:ColumnLayout&gt;&quot;" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(ColumnLayout), &quot;Build.ToolboxIcons.Layout.bmp&quot;" />
        <Attribute Type="Description" RawValue="This is the layout style of choice for creating structural layouts in a multi-column format where the width of each column can be specified as a percentage or fixed width, but the height is allowed to vary based on the content. " />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="LayoutConfig" Modifier="Override" Access="ProtectedInternal" Type="LayoutConfig">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Object" />
            <Attribute Type="Browsable" RawValue="false" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="FitHeight" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to fit the column elements height-wise into the Container. Defaults to false.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;6. ColumnLayout&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to fit the column elements height-wise into the Container. Defaults to false." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Background" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to fill background by predefined color. Defaults to false.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;6. ColumnLayout&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to fill background by predefined color. Defaults to false." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Split" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to allow resizing of the columns using a SplitBar. Defaults to false.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;6. ColumnLayout&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to allow resizing of the columns using a SplitBar. Defaults to false." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Margin" Type="int" DefaultValue="0">
          <Summary><![CDATA[Width of margin between columns in pixels. Overrides any style settings. Defaults to 0.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;6. ColumnLayout&quot;" />
            <Attribute Type="DefaultValue" RawValue="0" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Width of margin between columns in pixels. Overrides any style settings. Defaults to 0." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ScrollOffset" Type="int" DefaultValue="0">
          <Summary><![CDATA[The amount of space to reserve for the scrollbar]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;6. ColumnLayout&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="DefaultValue" RawValue="0" />
            <Attribute Type="Description" RawValue="The amount of space to reserve for the scrollbar" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Columns" Type="LayoutColumnCollection">
          <Summary><![CDATA[Columns collection]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;6. ColumnLayout&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Columns collection" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ColumnLayoutConfig" Extends="LayoutConfig">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="FitHeight" Type="bool" DefaultValue="true">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="true" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Background" Type="bool" DefaultValue="false">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Split" Type="bool" DefaultValue="false">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Margin" Type="int" DefaultValue="0">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="0" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ScrollOffset" Type="int" DefaultValue="0">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="0" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ColumnListeners" Extends="ComponentBaseListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="ColumnMoved" Type="ComponentListener">
          <Summary><![CDATA[Fires when a column is moved.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(ColumnModel), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;oldIndex&quot;, typeof(int), &quot;&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;newIndex&quot;, typeof(int), &quot;&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;columnmoved&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a column is moved." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ConfigChanged" Type="ComponentListener">
          <Summary><![CDATA[Fires when the configuration is changed.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(ColumnModel), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;configchanged&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the configuration is changed." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HeaderChange" Type="ComponentListener">
          <Summary><![CDATA[Fires when the text of a header changes.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(ColumnModel), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;columnIndex&quot;, typeof(int), &quot;&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;newText&quot;, typeof(string), &quot;&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;headerchange&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the text of a header changes." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HiddenChange" Type="ComponentListener">
          <Summary><![CDATA[Fires when a column is hidden or 'unhidden'.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(ColumnModel), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;columnIndex&quot;, typeof(int), &quot;&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;hidden&quot;, typeof(bool), &quot;&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;hiddenchange&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a column is hidden or 'unhidden'." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="WidthChange" Type="ComponentListener">
          <Summary><![CDATA[Fires when the width of a column is programmaticially changed using setColumnWidth. Note internal resizing suppresses the event from firing. ]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(ColumnModel), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;columnIndex&quot;, typeof(int), &quot;&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;newWidth&quot;, typeof(int), &quot;&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;widthchange&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the width of a column is programmaticially changed using setColumnWidth. Note internal resizing suppresses the event from firing. " />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ColumnModel" Extends="LazyObservable" Inherits="IIcon">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="DefaultSortable" Type="bool" DefaultValue="true">
          <Summary><![CDATA[Default sortable of columns which have no sortable specified (defaults to false). This property shall preferably be configured through the defaults config property.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. ColumnModel&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="Default sortable of columns which have no sortable specified (defaults to false). This property shall preferably be configured through the defaults config property." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DefaultWidth" Type="int" DefaultValue="100">
          <Summary><![CDATA[The width of columns which have no width specified (defaults to 100). This property shall preferably be configured through the defaults config property.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. ColumnModel&quot;" />
            <Attribute Type="DefaultValue" RawValue="100" />
            <Attribute Type="Description" RawValue="The width of columns which have no width specified (defaults to 100). This property shall preferably be configured through the defaults config property." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Defaults" Type="ParameterCollection">
          <Summary><![CDATA[Object literal which will be used to apply Ext.grid.Column configuration options to all columns. Configuration options specified with individual column configs will supersede these defaults.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ArrayToObject" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="Object literal which will be used to apply Ext.grid.Column configuration options to all columns. Configuration options specified with individual column configs will supersede these defaults." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Columns" Type="ColumnCollection">
          <Summary><![CDATA[The columns to use when rendering the grid (required).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;columns&quot;, JsonMode.AlwaysArray" />
            <Attribute Type="Category" RawValue="&quot;3. ColumnModel&quot;" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="The columns to use when rendering the grid (required)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Listeners" Type="ColumnListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="ColumnDirectEvents">
          <Summary><![CDATA[Server-side Ajax Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="Description" RawValue="Server-side Ajax Event Handlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods>
        <Method Name="MoveColumn" ParamsRaw="int oldIndex, int newIndex">
          <Summary><![CDATA[Moves a column from one position to another.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Moves a column from one position to another." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SetColumnHeader" ParamsRaw="int columnIndex, string header">
          <Summary><![CDATA[Sets the header for a column.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Sets the header for a column." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SetColumnTooltip" ParamsRaw="int columnIndex, string tooltip">
          <Summary><![CDATA[Sets the tooltip for a column.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Sets the tooltip for a column." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SetColumnWidth" ParamsRaw="int columnIndex, int width">
          <Summary><![CDATA[Sets the width for a column.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Sets the width for a column." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SetDataIndex" ParamsRaw="int columnIndex, string dataIndex">
          <Summary><![CDATA[Sets the dataIndex for a column.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Sets the dataIndex for a column." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SetEditable" ParamsRaw="int columnIndex, bool editable">
          <Summary><![CDATA[Sets if a column is editable.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Sets if a column is editable." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SetEditor" ParamsRaw="int columnIndex, Field editor">
          <Summary><![CDATA[Sets the editor for a column.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Sets the editor for a column." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SetEditor" ParamsRaw="int columnIndex, Field editor, GridEditorOptions options">
          <Summary><![CDATA[Sets the editor for a column.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Sets the editor for a column." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SetHidden" ParamsRaw="int columnIndex, bool hidden">
          <Summary><![CDATA[Sets if a column is hidden.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Sets if a column is hidden." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SetLocked" ParamsRaw="int columnIndex, bool locked">
          <Summary><![CDATA[Sets if a column is locked.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Sets if a column is locked." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SetLocked" ParamsRaw="int columnIndex, bool locked, bool suppressEvent">
          <Summary><![CDATA[Sets if a column is locked.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Sets if a column is locked." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SetRenderer" ParamsRaw="int columnIndex, Renderer renderer">
          <Summary><![CDATA[Sets the rendering (formatting) function for a column.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Sets the rendering (formatting) function for a column." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="RegisterCommandStyleRules">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" />
          </Attributes>
          <Parameters />
        </Method>
      </Methods>
    </Class>
    <Class Name="ColumnTree" Extends="TreePanel">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Columns" Type="ColumnTreeColumnCollection">
          <Summary><![CDATA[An array of column configuration objects]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;columns&quot;, JsonMode.AlwaysArray" />
            <Attribute Type="Category" RawValue="&quot;8. ColumnTree&quot;" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="An array of column configuration objects" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HideHeaders" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to hide the grid's header (defaults to false).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to hide the grid's header (defaults to false)." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ColumnTreeColumn" Extends="StateManagedItem">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="DataIndex" Type="string" DefaultValue="null">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;1. ColumnTreeColumn&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Header" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;1. ColumnTreeColumn&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Cls" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;1. ColumnTreeColumn&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Width" Type="int" DefaultValue="0">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;1. ColumnTreeColumn&quot;" />
            <Attribute Type="DefaultValue" RawValue="0" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Renderer" Type="Renderer" DefaultValue="null">
          <Summary><![CDATA[(optional) A function used to generate HTML markup for a node.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="typeof(RendererJsonConverter)" />
            <Attribute Type="Category" RawValue="&quot;2. ColumnBase&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="(optional) A function used to generate HTML markup for a node." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ColumnTreeColumnCollection" Extends="StateManagedCollection&lt;ColumnTreeColumn&gt;">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="ComboBox" Extends="ComboBoxBaseSingle&lt;ListItem&gt;" Inherits="IPostBackEventHandler">
      <Summary><![CDATA[A combobox control with support for autocomplete, remote-loading, paging and many other features.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:ComboBox runat=\&quot;server\&quot;&gt;&lt;/{0}:ComboBox&gt;&quot;" />
        <Attribute Type="ParseChildren" RawValue="true" />
        <Attribute Type="PersistChildren" RawValue="false" />
        <Attribute Type="SupportsEventValidation" />
        <Attribute Type="ValidationProperty" RawValue="&quot;SelectedItem&quot;" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(ComboBox), &quot;Build.ToolboxIcons.ComboBox.bmp&quot;" />
        <Attribute Type="Description" RawValue="A combobox control with support for autocomplete, remote-loading, paging and many other features." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Listeners" Type="ComboBoxListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="ComboBoxDirectEvents">
          <Summary><![CDATA[Server-side Ajax Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Server-side Ajax Event Handlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ComboBoxBase&lt;T&gt;" Abstract="true" Extends="TriggerFieldBase" Inherits="IStorewhereT:StateManagedItem">
      <Summary><![CDATA[A combobox control with support for autocomplete, remote-loading, paging and many other features.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" RawValue="A combobox control with support for autocomplete, remote-loading, paging and many other features." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="AllQuery" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The text query to send to the server to return all records for the list with no filtering (defaults to '').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;8. ComboBox&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The text query to send to the server to return all records for the list with no filtering (defaults to '')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ClearFilterOnReset" Type="bool" DefaultValue="true">
          <Summary><![CDATA[true to clear any filters on the store (when in local mode) when reset is called (defaults to true)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;8. ComboBox&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="true to clear any filters on the store (when in local mode) when reset is called (defaults to true)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DisplayField" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The underlying data field name to bind to this ComboBox (defaults to undefined if mode = 'remote' or 'text' if transforming a select).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;8. ComboBox&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The underlying data field name to bind to this ComboBox (defaults to undefined if mode = 'remote' or 'text' if transforming a select)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ForceSelection" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to restrict the selected value to one of the values in the list, false to allow the user to set arbitrary text into the field (defaults to true).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;8. ComboBox&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="True to restrict the selected value to one of the values in the list, false to allow the user to set arbitrary text into the field (defaults to true)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HandleHeight" Type="Unit" DefaultValue="typeof(Unit), &quot;8&quot;">
          <Summary><![CDATA[The height in pixels of the dropdown list resize handle if resizable = true (defaults to 8).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;8. ComboBox&quot;" />
            <Attribute Type="DefaultValue" RawValue="typeof(Unit), &quot;8&quot;" />
            <Attribute Type="Description" RawValue="The height in pixels of the dropdown list resize handle if resizable = true (defaults to 8)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HiddenID" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[If hiddenName is specified, hiddenId can also be provided to give the hidden field a unique id (defaults to the hiddenName). The hiddenId and combo id should be different, since no two DOM nodes should share the same id.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;hiddenId&quot;" />
            <Attribute Type="Category" RawValue="&quot;8. ComboBox&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="If hiddenName is specified, hiddenId can also be provided to give the hidden field a unique id (defaults to the hiddenName). The hiddenId and combo id should be different, since no two DOM nodes should share the same id." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HiddenValue" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[Sets the initial value of the hidden field if hiddenName is specified to contain the selected valueField, from the Store. Defaults to the configured value.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;8. ComboBox&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="Sets the initial value of the hidden field if hiddenName is specified to contain the selected valueField, from the Store. Defaults to the configured value." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HiddenName" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[If specified, a hidden form field with this name is dynamically generated to store the field's data value (defaults to the underlying DOM element's name). Required for the combo's value to automatically post during a form submission.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;8. ComboBox&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="If specified, a hidden form field with this name is dynamically generated to store the field's data value (defaults to the underlying DOM element's name). Required for the combo's value to automatically post during a form submission." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ItemSelector" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[This setting is required if a custom XTemplate has been specified in tpl which assigns a class other than 'x-combo-list-item' to dropdown list items. A simple CSS selector (e.g. div.some-class or span:first-child) that will be used to determine what nodes the DataView which handles the dropdown display will be working with.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;8. ComboBox&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="This setting is required if a custom XTemplate has been specified in tpl which assigns a class other than 'x-combo-list-item' to dropdown list items. A simple CSS selector (e.g. div.some-class or span:first-child) that will be used to determine what nodes the DataView which handles the dropdown display will be working with." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="LazyInit" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to not initialize the list for this combo until the field is focused. (defaults to true).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;8. ComboBox&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="True to not initialize the list for this combo until the field is focused. (defaults to true)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="LazyRender" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to prevent the ComboBox from rendering until requested (should always be used when rendering into an Ext.Editor, defaults to false).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;8. ComboBox&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to prevent the ComboBox from rendering until requested (should always be used when rendering into an Ext.Editor, defaults to false)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="FireSelectOnLoad" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to fire select event after setValue on page load]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;8. ComboBox&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to fire select event after setValue on page load" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ListAlign" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A valid anchor position value. See Ext.Element.alignTo for details on supported anchor positions (defaults to 'tl-bl').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;8. ComboBox&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="A valid anchor position value. See Ext.Element.alignTo for details on supported anchor positions (defaults to 'tl-bl')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ListClass" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[CSS class to apply to the dropdown list element (defaults to '').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;8. ComboBox&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="CSS class to apply to the dropdown list element (defaults to '')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ListWidth" Type="Unit" DefaultValue="typeof(Unit), &quot;&quot;">
          <Summary><![CDATA[The width in pixels of the dropdown list (defaults to the width of the ComboBox field).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;8. ComboBox&quot;" />
            <Attribute Type="DefaultValue" RawValue="typeof(Unit), &quot;&quot;" />
            <Attribute Type="Description" RawValue="The width in pixels of the dropdown list (defaults to the width of the ComboBox field)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="LoadingText" Type="string" DefaultValue="&quot;Loading...&quot;">
          <Summary><![CDATA[The text to display in the dropdown list while data is loading. Only applies when mode = 'remote' (defaults to 'Loading...').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;8. ComboBox&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;Loading...&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Description" RawValue="The text to display in the dropdown list while data is loading. Only applies when mode = 'remote' (defaults to 'Loading...')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MaxHeight" Modifier="Override" Type="Unit" DefaultValue="typeof(Unit), &quot;300&quot;">
          <Summary><![CDATA[The maximum height in pixels of the dropdown list before scrollbars are shown (defaults to 300).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;8. ComboBox&quot;" />
            <Attribute Type="DefaultValue" RawValue="typeof(Unit), &quot;300&quot;" />
            <Attribute Type="Description" RawValue="The maximum height in pixels of the dropdown list before scrollbars are shown (defaults to 300)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MinHeight" Modifier="Override" Type="Unit" DefaultValue="typeof(Unit), &quot;90&quot;">
          <Summary><![CDATA[The minimum height in pixels of the dropdown list when the list is constrained by its distance to the viewport edges (defaults to 90).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;8. ComboBox&quot;" />
            <Attribute Type="DefaultValue" RawValue="typeof(Unit), &quot;90&quot;" />
            <Attribute Type="Description" RawValue="The minimum height in pixels of the dropdown list when the list is constrained by its distance to the viewport edges (defaults to 90)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MinChars" Type="int" DefaultValue="4">
          <Summary><![CDATA[The minimum number of characters the user must type before autocomplete and typeahead activate (defaults to 4 if remote or 0 if local, does not apply if editable = false).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;8. ComboBox&quot;" />
            <Attribute Type="DefaultValue" RawValue="4" />
            <Attribute Type="Description" RawValue="The minimum number of characters the user must type before autocomplete and typeahead activate (defaults to 4 if remote or 0 if local, does not apply if editable = false)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MinListWidth" Type="Unit" DefaultValue="typeof(Unit), &quot;70&quot;">
          <Summary><![CDATA[The minimum width of the dropdown list in pixels (defaults to 70, will be ignored if listWidth has a higher value).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;8. ComboBox&quot;" />
            <Attribute Type="DefaultValue" RawValue="typeof(Unit), &quot;70&quot;" />
            <Attribute Type="Description" RawValue="The minimum width of the dropdown list in pixels (defaults to 70, will be ignored if listWidth has a higher value)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Mode" Type="DataLoadMode" DefaultValue="DataLoadMode.Remote">
          <Summary><![CDATA[Set to 'local' if the ComboBox loads local data (defaults to 'remote' which loads from the server).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="Category" RawValue="&quot;8. ComboBox&quot;" />
            <Attribute Type="DefaultValue" RawValue="DataLoadMode.Remote" />
            <Attribute Type="Description" RawValue="Set to 'local' if the ComboBox loads local data (defaults to 'remote' which loads from the server)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="PageSize" Type="int" DefaultValue="0">
          <Summary><![CDATA[If greater than 0, a paging toolbar is displayed in the footer of the dropdown list and the filter queries will execute with page addToStart and limit parameters. Only applies when mode = 'remote' (defaults to 0).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;8. ComboBox&quot;" />
            <Attribute Type="DefaultValue" RawValue="0" />
            <Attribute Type="Description" RawValue="If greater than 0, a paging toolbar is displayed in the footer of the dropdown list and the filter queries will execute with page addToStart and limit parameters. Only applies when mode = 'remote' (defaults to 0)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="QueryDelay" Type="int" DefaultValue="500">
          <Summary><![CDATA[The length of time in milliseconds to delay between the addToStart of typing and sending the query to filter the dropdown list (defaults to 500 if mode = 'remote' or 10 if mode = 'local').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;8. ComboBox&quot;" />
            <Attribute Type="DefaultValue" RawValue="500" />
            <Attribute Type="Description" RawValue="The length of time in milliseconds to delay between the addToStart of typing and sending the query to filter the dropdown list (defaults to 500 if mode = 'remote' or 10 if mode = 'local')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="QueryParam" Type="string" DefaultValue="&quot;query&quot;">
          <Summary><![CDATA[Name of the query as it will be passed on the querystring (defaults to 'query').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;8. ComboBox&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;query&quot;" />
            <Attribute Type="Description" RawValue="Name of the query as it will be passed on the querystring (defaults to 'query')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Resizable" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to add a resize handle to the bottom of the dropdown list (defaults to false)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;8. ComboBox&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to add a resize handle to the bottom of the dropdown list (defaults to false)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SelectedClass" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[CSS class to apply to the selected items in the dropdown list (defaults to 'x-combo-selected').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;8. ComboBox&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="CSS class to apply to the selected items in the dropdown list (defaults to 'x-combo-selected')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Shadow" Type="ShadowMode" DefaultValue="ShadowMode.Sides">
          <Summary><![CDATA['Sides' for the default effect, 'Frame' for 4-way shadow, and 'Drop' for bottom-right.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="typeof(ShadowJsonConverter)" />
            <Attribute Type="Category" RawValue="&quot;8. ComboBox&quot;" />
            <Attribute Type="DefaultValue" RawValue="ShadowMode.Sides" />
            <Attribute Type="Description" RawValue="'Sides' for the default effect, 'Frame' for 4-way shadow, and 'Drop' for bottom-right." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EnableShadow" Type="bool" DefaultValue="true">
          <Summary><![CDATA[true for the default effect]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;shadow&quot;" />
            <Attribute Type="Category" RawValue="&quot;8. ComboBox&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="true for the default effect" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SelectOnFocus" Modifier="Override" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to automatically select any existing field text when the field receives input focus (defaults to false).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;8. ComboBox&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to automatically select any existing field text when the field receives input focus (defaults to false)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SelectOnFocusProxy" Access="Protected" Type="bool" DefaultValue="false">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;selectOnFocus&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Template" Type="XTemplate">
          <Summary><![CDATA[The template string to use to display each item in the dropdown list.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;8. ComboBox&quot;" />
            <Attribute Type="ConfigOption" RawValue="&quot;tpl&quot;, typeof(LazyControlJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="The template string to use to display each item in the dropdown list." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Transform" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The ID of an existing select to convert to a ComboBox.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;8. ComboBox&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The ID of an existing select to convert to a ComboBox." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Title" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[If supplied, a header element is created containing this text and added into the top of the dropdown list.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;8. ComboBox&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="If supplied, a header element is created containing this text and added into the top of the dropdown list." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TriggerAction" Type="TriggerAction" DefaultValue="TriggerAction.Query">
          <Summary><![CDATA[The action to execute when the trigger field is activated. Use 'All' to run the query specified by the allQuery config option (defaults to 'Query').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="Category" RawValue="&quot;8. ComboBox&quot;" />
            <Attribute Type="DefaultValue" RawValue="TriggerAction.Query" />
            <Attribute Type="Description" RawValue="The action to execute when the trigger field is activated. Use 'All' to run the query specified by the allQuery config option (defaults to 'Query')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TypeAhead" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to populate and autoselect the remainder of the text being typed after a configurable delay (typeAheadDelay) if it matches a known value (defaults to false).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;8. ComboBox&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to populate and autoselect the remainder of the text being typed after a configurable delay (typeAheadDelay) if it matches a known value (defaults to false)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TypeAheadDelay" Type="int" DefaultValue="250">
          <Summary><![CDATA[The length of time in milliseconds to wait until the typeahead text is displayed if TypeAhead = true (defaults to 250).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;8. ComboBox&quot;" />
            <Attribute Type="DefaultValue" RawValue="250" />
            <Attribute Type="Description" RawValue="The length of time in milliseconds to wait until the typeahead text is displayed if TypeAhead = true (defaults to 250)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ValueField" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The underlying data value name to bind to this ComboBox (defaults to undefined if mode = 'remote' or 'value' if transforming a select) Note: use of a valueField requires the user to make a selection in order for a value to be mapped.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;8. ComboBox&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The underlying data value name to bind to this ComboBox (defaults to undefined if mode = 'remote' or 'value' if transforming a select) Note: use of a valueField requires the user to make a selection in order for a value to be mapped." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ValueNotFoundText" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[When using a name/value combo, if the value passed to setValue is not found in the store, valueNotFoundText will be displayed as the field text if defined (defaults to undefined).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;8. ComboBox&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Description" RawValue="When using a name/value combo, if the value passed to setValue is not found in the store, valueNotFoundText will be displayed as the field text if defined (defaults to undefined)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="StoreID" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The data store to use.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;store&quot;, JsonMode.ToClientID" />
            <Attribute Type="Category" RawValue="&quot;8. ComboBox&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="IDReferenceProperty" RawValue="typeof(Store)" />
            <Attribute Type="Description" RawValue="The data store to use." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Store" Type="StoreCollection">
          <Summary><![CDATA[The data store to use.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;store&gt;Primary&quot;" />
            <Attribute Type="Category" RawValue="&quot;7. ComboBox&quot;" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="The data store to use." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AlwaysMergeItems" Type="bool" DefaultValue="true">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;8. ComboBox&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ItemsProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;store&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MergeItems" Access="ProtectedInternal" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;mergeItems&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TriggerAutoPostBack" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Trigger AutoPostBack]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;8. ComboBox&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="Trigger AutoPostBack" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SubmitValueProxy" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;submitValue&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AutoPostBackEvent" Type="ComboAutoPostBackEvent" DefaultValue="ComboAutoPostBackEvent.Select">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="ComboAutoPostBackEvent.Select" />
            <Attribute Type="Category" RawValue="&quot;8. ComboBox&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="GetListParent" Type="JFunction" DefaultValue="null">
          <Summary><![CDATA[Returns the element used to house this ComboBox's pop-up list. Defaults to the document body.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;8. ComboBox&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="Returns the element used to house this ComboBox's pop-up list. Defaults to the document body." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods>
        <Method Name="ClearValue">
          <Summary><![CDATA[Clears any text/value currently set in the field]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Clears any text/value currently set in the field" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Collapse">
          <Summary><![CDATA[Hides the dropdown list if it is currently expanded. Fires the collapse event on completion.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Hides the dropdown list if it is currently expanded. Fires the collapse event on completion." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="DoQuery" ParamsRaw="string query, bool forceAll">
          <Summary><![CDATA[Execute a query to filter the dropdown list. Fires the beforequery event prior to performing the query allowing the query action to be canceled if needed.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Execute a query to filter the dropdown list. Fires the beforequery event prior to performing the query allowing the query action to be canceled if needed." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="DoQuery" ParamsRaw="string query">
          <Summary><![CDATA[Execute a query to filter the dropdown list. Fires the beforequery event prior to performing the query allowing the query action to be canceled if needed.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Execute a query to filter the dropdown list. Fires the beforequery event prior to performing the query allowing the query action to be canceled if needed." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Expand">
          <Summary><![CDATA[Expands the dropdown list if it is currently hidden. Fires the expand event on completion.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Expands the dropdown list if it is currently hidden. Fires the expand event on completion." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Select" ParamsRaw="int index, bool scrollIntoView">
          <Summary><![CDATA[Select an item in the dropdown list by its numeric index in the list. This function does NOT cause the select event to fire. The store must be loaded and the list expanded for this function to work, otherwise use setValue.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Select an item in the dropdown list by its numeric index in the list. This function does NOT cause the select event to fire. The store must be loaded and the list expanded for this function to work, otherwise use setValue." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Select" ParamsRaw="int index">
          <Summary><![CDATA[Select an item in the dropdown list by its numeric index in the list. This function does NOT cause the select event to fire. The store must be loaded and the list expanded for this function to work, otherwise use setValue.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Select an item in the dropdown list by its numeric index in the list. This function does NOT cause the select event to fire. The store must be loaded and the list expanded for this function to work, otherwise use setValue." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SelectByValue" ParamsRaw="string value, bool scrollIntoView">
          <Summary><![CDATA[Select an item in the dropdown list by its data value. This function does NOT cause the select event to fire. The store must be loaded and the list expanded for this function to work, otherwise use setValue.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Select an item in the dropdown list by its data value. This function does NOT cause the select event to fire. The store must be loaded and the list expanded for this function to work, otherwise use setValue." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SelectByValue" ParamsRaw="string value">
          <Summary><![CDATA[Select an item in the dropdown list by its data value. This function does NOT cause the select event to fire. The store must be loaded and the list expanded for this function to work, otherwise use setValue.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Select an item in the dropdown list by its data value. This function does NOT cause the select event to fire. The store must be loaded and the list expanded for this function to work, otherwise use setValue." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="InsertRecord" ParamsRaw="int index, IDictionary&lt;string,object&gt; values">
          <Summary><![CDATA[Insert record]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Insert record" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="AddRecord" ParamsRaw="IDictionary&lt;string, object&gt; values">
          <Summary><![CDATA[Add record]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Add record" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="InsertItem" ParamsRaw="int index, string text, object value">
          <Summary><![CDATA[Insert item]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Insert item" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="AddItem" ParamsRaw="string text, object value">
          <Summary><![CDATA[Add item]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Add item" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="RemoveByField" ParamsRaw="string field, object value">
          <Summary><![CDATA[Remove by field]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Remove by field" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="RemoveByIndex" ParamsRaw="int index">
          <Summary><![CDATA[Remove by index]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Remove by index" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="RemoveByValue" ParamsRaw="string value">
          <Summary><![CDATA[Remove by value]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Remove by value" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="RemoveByText" ParamsRaw="string text">
          <Summary><![CDATA[Remove by text]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Remove by text" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SetValueAndFireSelect" ParamsRaw="object value">
          <Summary><![CDATA[Sets a data value into the field and validates it. To set the value directly without validation see setRawValue.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Sets a data value into the field and validates it. To set the value directly without validation see setRawValue." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SetInitValue" ParamsRaw="object value">
          <Summary><![CDATA[Sets a data value into the field and validates it. To set the value directly without validation see setRawValue.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Sets a data value into the field and validates it. To set the value directly without validation see setRawValue." />
          </Attributes>
          <Parameters />
        </Method>
      </Methods>
    </Class>
    <Class Name="ComboBoxBaseMulti&lt;T&gt; : ComboBoxBase&lt;T&gt;" Abstract="true">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Delimiter" Type="string" DefaultValue="&quot;,&quot;">
          <Summary><![CDATA[The delimiter of selected items.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;8. MultiCombo&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;,&quot;" />
            <Attribute Type="Description" RawValue="The delimiter of selected items." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="WrapBySquareBrackets" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to wrap by square brackets.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;8. MultiCombo&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to wrap by square brackets." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SelectionMode" Type="MultiSelectMode" DefaultValue="MultiSelectMode.Checkbox">
          <Summary><![CDATA[Selection UI mode]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="Category" RawValue="&quot;8. MultiCombo&quot;" />
            <Attribute Type="DefaultValue" RawValue="MultiSelectMode.Checkbox" />
            <Attribute Type="Description" RawValue="Selection UI mode" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ComboBoxBaseSingle&lt;T&gt; : ComboBoxBase&lt;T&gt;" Abstract="true">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="SelectedIndexProperty" Access="Protected" Type="int" DefaultValue="-1">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;initSelectedIndex&quot;" />
            <Attribute Type="DefaultValue" RawValue="-1" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ComboBoxDirectEvents" Extends="TriggerFieldDirectEvents">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="BeforeQuery" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before all queries are processed. Return false to cancel the query or set the queryEvent's cancel property to true.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;queryEvent&quot;, typeof(object), &quot;An object that includes combo (This combo box), query (The query), forceAll (True to force 'all' query) and cancel (Set to true to cancel the query).&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforequery&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before all queries are processed. Return false to cancel the query or set the queryEvent's cancel property to true." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeSelect" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before a list items is selected. Return false to cancel the selection.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Field), &quot;This combo box&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object), &quot;The data record returned from the underlying store&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;index&quot;, typeof(int), &quot;The index of the selected item in the dropdown list&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeselect&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before a list items is selected. Return false to cancel the selection." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Collapse" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when the dropdown list is collapsed.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Field), &quot;This combo box&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;collapse&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the dropdown list is collapsed." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Expand" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when the dropdown list is expanded.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Field), &quot;This combo box&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;expand&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the dropdown list is expanded." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Select" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when a list items is selected.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Field), &quot;This combo box&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object), &quot;The data record returned from the underlying store&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;index&quot;, typeof(int), &quot;The index of the selected item in the dropdown list&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;select&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a list items is selected." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ComboBoxListeners" Extends="TriggerFieldListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="BeforeQuery" Type="ComponentListener">
          <Summary><![CDATA[Fires before all queries are processed. Return false to cancel the query or set the queryEvent's cancel property to true.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;queryEvent&quot;, typeof(object), &quot;An object that includes combo (This combo box), query (The query), forceAll (True to force 'all' query) and cancel (Set to true to cancel the query).&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforequery&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before all queries are processed. Return false to cancel the query or set the queryEvent's cancel property to true." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeSelect" Type="ComponentListener">
          <Summary><![CDATA[Fires before a list items is selected. Return false to cancel the selection.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Field), &quot;This combo box&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object), &quot;The data record returned from the underlying store&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;index&quot;, typeof(int), &quot;The index of the selected item in the dropdown list&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeselect&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before a list items is selected. Return false to cancel the selection." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Collapse" Type="ComponentListener">
          <Summary><![CDATA[Fires when the dropdown list is collapsed.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Field), &quot;This combo box&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;collapse&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the dropdown list is collapsed." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Expand" Type="ComponentListener">
          <Summary><![CDATA[Fires when the dropdown list is expanded.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Field), &quot;This combo box&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;expand&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the dropdown list is expanded." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Select" Type="ComponentListener">
          <Summary><![CDATA[Fires when a list items is selected.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Field), &quot;This combo box&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object), &quot;The data record returned from the underlying store&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;index&quot;, typeof(int), &quot;The index of the selected item in the dropdown list&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;select&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a list items is selected." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="CommandColumn" Extends="ColumnBase" Inherits="ICustomConfigSerialization,IIcon">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Hideable" Modifier="Override" Type="bool" DefaultValue="true">
          <Summary><![CDATA[(optional) Specify as false to prevent the user from hiding this column. Defaults to true.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. CommandColumn&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="(optional) Specify as false to prevent the user from hiding this column. Defaults to true." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Commands" Type="GridCommandCollection">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;commands&quot;, JsonMode.AlwaysArray" />
            <Attribute Type="Category" RawValue="&quot;3. CommandColumn&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="GroupCommands" Type="GridCommandCollection">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;groupCommands&quot;, JsonMode.AlwaysArray" />
            <Attribute Type="Category" RawValue="&quot;3. CommandColumn&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="PrepareToolbar" Type="JFunction">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;3. CommandColumn&quot;" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="PrepareGroupToolbar" Type="JFunction">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;3. CommandColumn&quot;" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ButtonAlign" Type="Alignment" DefaultValue="Alignment.Left">
          <Summary><![CDATA[Valid values are \"left\", \"center\" and \"right\" (defaults to \"left\").]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="Category" RawValue="&quot;3. CommandColumn&quot;" />
            <Attribute Type="DefaultValue" RawValue="Alignment.Left" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Valid values are \&quot;left\&quot;, \&quot;center\&quot; and \&quot;right\&quot; (defaults to \&quot;left\&quot;)." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="CommandFill" Extends="GridCommandBase">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="XType" Access="ProtectedInternal" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;xtype&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="CommandMenu" Extends="StateManagedItem">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Items" Type="MenuCommandCollection">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;items&quot;, JsonMode.AlwaysArray" />
            <Attribute Type="Category" RawValue="&quot;2. CommandMenu&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Shared" Type="bool" DefaultValue="false">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;2. CommandMenu&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EnableScrolling" Type="bool" DefaultValue="true">
          <Summary><![CDATA[Whenever a menu gets so long that the items won't fit the viewable area, it provides the user with an easy UI to scroll the menu.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;2. CommandMenu&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Whenever a menu gets so long that the items won't fit the viewable area, it provides the user with an easy UI to scroll the menu." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MinWidth" Type="int" DefaultValue="120">
          <Summary><![CDATA[The minimum width of the menu in pixels (defaults to 120).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;2. CommandMenu&quot;" />
            <Attribute Type="DefaultValue" RawValue="120" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The minimum width of the menu in pixels (defaults to 120)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MaxHeight" Type="int" DefaultValue="0">
          <Summary><![CDATA[The maximum height of the menu. Only applies when enableScrolling is set to True (defaults to null).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;2. CommandMenu&quot;" />
            <Attribute Type="DefaultValue" RawValue="0" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The maximum height of the menu. Only applies when enableScrolling is set to True (defaults to null)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ScrollIncrement" Type="int" DefaultValue="24">
          <Summary><![CDATA[The amount to scroll the menu. Only applies when enableScrolling is set to True (defaults to 24).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;2. CommandMenu&quot;" />
            <Attribute Type="DefaultValue" RawValue="24" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The amount to scroll the menu. Only applies when enableScrolling is set to True (defaults to 24)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ShowSeparator" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to show the icon separator. (defaults to true).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;2. CommandMenu&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to show the icon separator. (defaults to true)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Shadow" Type="ShadowMode" DefaultValue="ShadowMode.Sides">
          <Summary><![CDATA[True or \"sides\" for the default effect, \"frame\" for 4-way shadow, and \"drop\" for bottom-right shadow (defaults to \"sides\")]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="typeof(ShadowJsonConverter)" />
            <Attribute Type="Category" RawValue="&quot;2. CommandMenu&quot;" />
            <Attribute Type="DefaultValue" RawValue="ShadowMode.Sides" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True or \&quot;sides\&quot; for the default effect, \&quot;frame\&quot; for 4-way shadow, and \&quot;drop\&quot; for bottom-right shadow (defaults to \&quot;sides\&quot;)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SubMenuAlign" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The Ext.Element.alignTo anchor position value to use for submenus of this menu (defaults to \"tl-tr?\")]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. CommandMenu&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The Ext.Element.alignTo anchor position value to use for submenus of this menu (defaults to \&quot;tl-tr?\&quot;)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IgnoreParentClicks" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to ignore clicks on any item in this menu that is a parent item (displays a submenu) so that the submenu is not dismissed when clicking the parent item (defaults to false).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;2. CommandMenu&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to ignore clicks on any item in this menu that is a parent item (displays a submenu) so that the submenu is not dismissed when clicking the parent item (defaults to false)." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="CommandSeparator" Extends="GridCommandBase">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="XType" Access="ProtectedInternal" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;xtype&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="CommandSpacer" Extends="GridCommandBase">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="XType" Access="ProtectedInternal" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;xtype&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Width" Type="Unit" DefaultValue="typeof(Unit), &quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="typeof(Unit), &quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="CommandText" Extends="GridCommandBase">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="XType" Access="ProtectedInternal" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;xtype&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Text" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="Component" Abstract="true" Extends="Observable" Inherits="IComponent,IContent">
      <Summary><![CDATA[Base Class for all Ext.Net Web Controls.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" RawValue="Base Class for all Ext.Net Web Controls." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Bin" Type="ItemsCollection&lt;Observable&gt;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;bin&quot;, typeof(ItemCollectionJsonConverter), int.MinValue" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ContentEl" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The id of an existing HTML node to use as the panel's body content (defaults to '').]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. Panel&quot;" />
            <Attribute Type="DeferredRender" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The id of an existing HTML node to use as the panel's body content (defaults to '')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Html" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[An HTML fragment, or a DomHelper specification to use as the layout element content (defaults to '')]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;Update&quot;" />
            <Attribute Type="ConfigOption" RawValue="&quot;html&quot;" />
            <Attribute Type="Category" RawValue="&quot;3. Component&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="An HTML fragment, or a DomHelper specification to use as the layout element content (defaults to '')" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Anchor" Type="string" DefaultValue="null">
          <Summary><![CDATA[This config is only used when this Component is rendered by a Container which has been configured to use an AnchorLayout based layout manager]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;3. Component - AnchorLayout&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="This config is only used when this Component is rendered by a Container which has been configured to use an AnchorLayout based layout manager" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetAnchor&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DefaultAnchor" Type="string" DefaultValue="null">
          <Summary><![CDATA[The DefaultAnchor is applied as the Anchor config item to all child Items during render.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. Component - AnchorLayout&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="The DefaultAnchor is applied as the Anchor config item to all child Items during render." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AnchorHorizontal" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[See Anchor property]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;3. Component - AnchorLayout&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="See Anchor property" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetAnchor&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AnchorVertical" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[See Anchor property]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;3. Component - AnchorLayout&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="See Anchor property" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AnchorProxy" Access="Protected" Type="string" DefaultValue="null">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;anchor&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ColumnWidth" Type="double" DefaultValue="0.0">
          <Summary><![CDATA[The ColumnWidth property is only used with ColumnLayout is used. The ColumnWidth property is always evaluated as a percentage, and must be a decimal value greater than 0 and less than 1.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Category" RawValue="&quot;3. Component - ColumnLayout&quot;" />
            <Attribute Type="DefaultValue" RawValue="0.0" />
            <Attribute Type="Description" RawValue="The ColumnWidth property is only used with ColumnLayout is used. The ColumnWidth property is always evaluated as a percentage, and must be a decimal value greater than 0 and less than 1." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ColumnWidthProxy" Access="Protected" Type="string" DefaultValue="&quot;0&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;columnWidth&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;0&quot;" />
            <Attribute Type="Browsable" RawValue="false" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IsFormField" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True if component should be rendered as a Form Field with a Field Label and Label separator (defaults to false).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. Component - FormLayout&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True if component should be rendered as a Form Field with a Field Label and Label separator (defaults to false)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="LabelSeparator" Type="string" DefaultValue="&quot;:&quot;">
          <Summary><![CDATA[The separator to display after the text of each fieldLabel. This property may be configured at various levels.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. Component - FormLayout&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;:&quot;" />
            <Attribute Type="Description" RawValue="The separator to display after the text of each fieldLabel. This property may be configured at various levels." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="LabelStyle" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A CSS style specification string to apply directly to this field's label. Defaults to the container's labelStyle value if set (eg, Ext.layout.FormLayout.labelStyle , or '').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. Component - FormLayout&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="A CSS style specification string to apply directly to this field's label. Defaults to the container's labelStyle value if set (eg, Ext.layout.FormLayout.labelStyle , or '')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HideLabels" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to hide field labels by default (defaults to false).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Container&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to hide field labels by default (defaults to false)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="LabelAlign" Type="LabelAlign" DefaultValue="LabelAlign.Left">
          <Summary><![CDATA[The default label alignment. The default value is empty string '' for left alignment, but specifying 'top' will align the labels above the fields.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="Category" RawValue="&quot;5. Container&quot;" />
            <Attribute Type="DefaultValue" RawValue="LabelAlign.Left" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The default label alignment. The default value is empty string '' for left alignment, but specifying 'top' will align the labels above the fields." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="LabelWidth" Type="int" DefaultValue="100">
          <Summary><![CDATA[The default width in pixels of field labels (defaults to 100).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Container&quot;" />
            <Attribute Type="DefaultValue" RawValue="100" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The default width in pixels of field labels (defaults to 100)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="LabelPad" Type="int" DefaultValue="5">
          <Summary><![CDATA[The default padding in pixels for field labels (defaults to 5). labelPad only applies if labelWidth is also specified, otherwise it will be ignored.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Container&quot;" />
            <Attribute Type="DefaultValue" RawValue="5" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The default padding in pixels for field labels (defaults to 5). labelPad only applies if labelWidth is also specified, otherwise it will be ignored." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Flex" Type="int" DefaultValue="0">
          <Summary><![CDATA[NOTE: This property is only used when the parent Layout is HBoxLayout or VBoxLayout. This configuation option is to be applied to child items of the container managed by this layout. Each child item with a flex property will be flexed horizontally according to each item's relative flex value compared to the sum of all items with a flex value specified. Any child items that have either a flex = 0 or flex = undefined will not be 'flexed' (the initial size will not be changed).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. BoxItem&quot;" />
            <Attribute Type="DefaultValue" RawValue="0" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="NOTE: This property is only used when the parent Layout is HBoxLayout or VBoxLayout. This configuation option is to be applied to child items of the container managed by this layout. Each child item with a flex property will be flexed horizontally according to each item's relative flex value compared to the sum of all items with a flex value specified. Any child items that have either a flex = 0 or flex = undefined will not be 'flexed' (the initial size will not be changed)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RowHeight" Type="double" DefaultValue="0.0">
          <Summary><![CDATA[The ColumnWidth property is always evaluated as a percentage, and must be a decimal value greater than 0 and less than or equal to 1.0.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Category" RawValue="&quot;3. Compoenrnt - RowLayout&quot;" />
            <Attribute Type="DefaultValue" RawValue="0.0" />
            <Attribute Type="Description" RawValue="The ColumnWidth property is always evaluated as a percentage, and must be a decimal value greater than 0 and less than or equal to 1.0." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RowHeightProxy" Access="Protected" Type="string" DefaultValue="&quot;0&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;rowHeight&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;0&quot;" />
            <Attribute Type="Browsable" RawValue="false" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AdditionalConfig" Access="ProtectedInternal" Type="object" DefaultValue="null">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.UnrollObject" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Browsable" RawValue="false" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Hidden" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ContextMenuIDProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="ConfigOption" RawValue="&quot;contextMenuId&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AllowDomMove" Type="bool" DefaultValue="true">
          <Summary><![CDATA[Whether the component can move the Dom node when rendering (defaults to true).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. Component&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="Whether the component can move the Dom node when rendering (defaults to true)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ApplyTo" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[Specify the id of the element, a DOM element or an existing Element corresponding to a DIV that is already present in the document that specifies some structural markup for this component.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;3. Component&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="Specify the id of the element, a DOM element or an existing Element corresponding to a DIV that is already present in the document that specifies some structural markup for this component." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ApplyToProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;applyTo&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AutoEl" Type="DomObject">
          <Summary><![CDATA[A tag name or DomHelper spec used to create the Element which will encapsulate this Component.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;3. Component&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="A tag name or DomHelper spec used to create the Element which will encapsulate this Component." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AutoShow" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True if the component should check for hidden classes (e.g. 'x-hidden' or 'x-hide-display') and remove them on render (defaults to false).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. Component&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True if the component should check for hidden classes (e.g. 'x-hidden' or 'x-hide-display') and remove them on render (defaults to false)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ClearCls" Type="string" DefaultValue="&quot;x-form-clear-left&quot;">
          <Summary><![CDATA[The CSS class used to to apply to the special clearing div rendered directly after each form field wrapper to provide field clearing (defaults to 'x-form-clear-left').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. Component&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;x-form-clear-left&quot;" />
            <Attribute Type="Description" RawValue="The CSS class used to to apply to the special clearing div rendered directly after each form field wrapper to provide field clearing (defaults to 'x-form-clear-left')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Cls" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[An optional extra CSS class that will be added to this component's Element (defaults to ''). This can be useful for adding customized styles to the component or any of its children using standard CSS rules.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;AddClass&quot;" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. Component&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="An optional extra CSS class that will be added to this component's Element (defaults to ''). This can be useful for adding customized styles to the component or any of its children using standard CSS rules." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CtCls" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[An optional extra CSS class that will be added to this component's container. This can be useful for adding customized styles to the container or any of its children using standard CSS rules.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. Component&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="An optional extra CSS class that will be added to this component's container. This can be useful for adding customized styles to the container or any of its children using standard CSS rules." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Disabled" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Render this component disabled (default is false).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetDisabled&quot;" />
            <Attribute Type="Category" RawValue="&quot;3. Component&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Render this component disabled (default is false)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Selectable" Type="bool" DefaultValue="true">
          <Summary><![CDATA[Determines if this component is selectable. (default is true).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetSelectable&quot;" />
            <Attribute Type="Category" RawValue="&quot;3. Component&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Determines if this component is selectable. (default is true)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DisabledClass" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[CSS class added to the component when it is disabled (defaults to 'x-item-disabled').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. Component&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="CSS class added to the component when it is disabled (defaults to 'x-item-disabled')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="FieldLabel" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The label text to display next to this Component (defaults to '').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetFieldLabel&quot;" />
            <Attribute Type="Category" RawValue="&quot;3. Component&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Description" RawValue="The label text to display next to this Component (defaults to '')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Hidden" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Render this component hidden (default is false). If true, the hide method will be called internally.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DirectEventUpdate" RawValue="Script = &quot;{0}.setVisible(!{1});&quot;" />
            <Attribute Type="Category" RawValue="&quot;3. Component&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Render this component hidden (default is false). If true, the hide method will be called internally." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HideLabel" Type="bool" DefaultValue="false">
          <Summary><![CDATA[true to completely hide the label element (label and separator). Defaults to false. By default, even if you do not specify a fieldLabel the space will still be reserved so that the field will line up with other fields that do have labels. Setting this to true will cause the field to not reserve that space.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. Component&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="true to completely hide the label element (label and separator). Defaults to false. By default, even if you do not specify a fieldLabel the space will still be reserved so that the field will line up with other fields that do have labels. Setting this to true will cause the field to not reserve that space." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HideMode" Type="HideMode" DefaultValue="HideMode.Display">
          <Summary><![CDATA[How this component should be hidden. Supported values are 'visibility' (css visibility), 'offsets' (negative offset position) and 'display' (css display).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="Category" RawValue="&quot;3. Component&quot;" />
            <Attribute Type="DefaultValue" RawValue="HideMode.Display" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="How this component should be hidden. Supported values are 'visibility' (css visibility), 'offsets' (negative offset position) and 'display' (css display)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HideParent" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to hide and show the component's container when hide/show is called on the component, false to hide and show the component itself (defaults to false).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. Component&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to hide and show the component's container when hide/show is called on the component, false to hide and show the component itself (defaults to false)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ItemCls" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[An additional CSS class to apply to the div wrapping the form item element of this field.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. Component&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="An additional CSS class to apply to the div wrapping the form item element of this field." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="OverCls" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[An optional extra CSS class that will be added to this component's Element when the mouse moves over the Element, and removed when the mouse moves out. (defaults to '').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. Component&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="An optional extra CSS class that will be added to this component's Element when the mouse moves over the Element, and removed when the mouse moves out. (defaults to '')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="PType" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The registered ptype to create. This config option is not used when passing a config object into a constructor. This config option is used only when lazy instantiation is being used, and a Plugin is being specified not as a fully instantiated Component, but as a Component config object. The ptype will be looked up at render time up to determine what type of Plugin to create.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;ptype&quot;" />
            <Attribute Type="Category" RawValue="&quot;3. Component&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The registered ptype to create. This config option is not used when passing a config object into a constructor. This config option is used only when lazy instantiation is being used, and a Plugin is being specified not as a fully instantiated Component, but as a Component config object. The ptype will be looked up at render time up to determine what type of Plugin to create." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Ref" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A path specification, relative to the Component's ownerCt specifying into which ancestor Container to place a named reference to this Component. The ancestor axis can be traversed by using '/' characters in the path.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. Component&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="A path specification, relative to the Component's ownerCt specifying into which ancestor Container to place a named reference to this Component. The ancestor axis can be traversed by using '/' characters in the path." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RenderTo" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The id of the node, a DOM node or an existing Element that will be the content Container to render this component into.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Browsable" RawValue="false" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Hidden" />
            <Attribute Type="Description" RawValue="The id of the node, a DOM node or an existing Element that will be the content Container to render this component into." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RenderToProxy" Access="ProtectedInternal" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;renderTo&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="StateEvents" Type="string[]" DefaultValue="null">
          <Summary><![CDATA[An array of events that, when fired, should trigger this component to save its state (defaults to none). These can be any types of events supported by this component, including browser or custom events (e.g., ['click', 'customerchange']).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="typeof(StringArrayJsonConverter)" />
            <Attribute Type="TypeConverter" RawValue="typeof(StringArrayConverter)" />
            <Attribute Type="Category" RawValue="&quot;3. Component&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="An array of events that, when fired, should trigger this component to save its state (defaults to none). These can be any types of events supported by this component, including browser or custom events (e.g., ['click', 'customerchange'])." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="StateID" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The unique id for this component to use for state management purposes (defaults to the component id).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;stateId&quot;" />
            <Attribute Type="Category" RawValue="&quot;3. Component&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The unique id for this component to use for state management purposes (defaults to the component id)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Stateful" Type="bool" DefaultValue="true">
          <Summary><![CDATA[A flag which causes the Component to attempt to restore the state of internal properties from a saved state on startup.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. Component&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="A flag which causes the Component to attempt to restore the state of internal properties from a saved state on startup." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="StyleSpec" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A custom style specification to be applied to this component's Element.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;style&quot;" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;ApplyStyles&quot;" />
            <Attribute Type="Category" RawValue="&quot;3. Component&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="A custom style specification to be applied to this component's Element." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Plugins" Type="ItemsCollection&lt;Plugin&gt;">
          <Summary><![CDATA[An object or array of controls that inherit from IPlugin that will provide custom functionality for this component. The only requirement for a valid plugin is that it contain an init method that accepts a reference of type Ext.Component. When a component is created, if any plugins are available, the component will call the init method on each plugin, passing a reference to itself. Each plugin can then call methods or respond to events on the component as needed to provide its functionality.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;plugins&quot;, typeof(ItemCollectionJsonConverter)" />
            <Attribute Type="Category" RawValue="&quot;3. Component&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="An object or array of controls that inherit from IPlugin that will provide custom functionality for this component. The only requirement for a valid plugin is that it contain an init method that accepts a reference of type Ext.Component. When a component is created, if any plugins are available, the component will call the init method on each plugin, passing a reference to itself. Each plugin can then call methods or respond to events on the component as needed to provide its functionality." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AutoRender" Type="bool" DefaultValue="true">
          <Summary><![CDATA[Automatically render control on client during page load. Default is true.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;3. Component&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Automatically render control on client during page load. Default is true." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ToolTips" Type="ItemsCollection&lt;ToolTip&gt;">
          <Summary><![CDATA[A collection of ToolTip configs used to add ToolTips to the Component]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;3. Component&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="A collection of ToolTip configs used to add ToolTips to the Component" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="GetState" Type="JFunction">
          <Summary><![CDATA[Return component's data which should be saved by StateProvider]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;3. Component&quot;" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="Return component's data which should be saved by StateProvider" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AutoFocus" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to automatically set the focus after render (defaults to false).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. Component&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to automatically set the focus after render (defaults to false)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AutoFocusDelay" Type="int" DefaultValue="10">
          <Summary><![CDATA[Focus delay (in milliseconds) when AutoFocus is true.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. Component&quot;" />
            <Attribute Type="DefaultValue" RawValue="10" />
            <Attribute Type="Description" RawValue="Focus delay (in milliseconds) when AutoFocus is true." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods>
        <Method Name="Bubble" ParamsRaw="string function">
          <Summary><![CDATA[Bubbles up the component/container heirarchy, calling the specified function with each component. The scope (this) of function call will be the scope provided or the current component. The arguments to the function will be the args provided or the current component. If the function returns false at any point, the bubble is stopped.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Bubbles up the component/container heirarchy, calling the specified function with each component. The scope (this) of function call will be the scope provided or the current component. The arguments to the function will be the args provided or the current component. If the function returns false at any point, the bubble is stopped." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Bubble" ParamsRaw="string function, string scope">
          <Summary><![CDATA[Bubbles up the component/container heirarchy, calling the specified function with each component. The scope (this) of function call will be the scope provided or the current component. The arguments to the function will be the args provided or the current component. If the function returns false at any point, the bubble is stopped.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Bubbles up the component/container heirarchy, calling the specified function with each component. The scope (this) of function call will be the scope provided or the current component. The arguments to the function will be the args provided or the current component. If the function returns false at any point, the bubble is stopped." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Bubble" ParamsRaw="string function, string scope, Dictionary&lt;string, object&gt; args">
          <Summary><![CDATA[Bubbles up the component/container heirarchy, calling the specified function with each component. The scope (this) of function call will be the scope provided or the current component. The arguments to the function will be the args provided or the current component. If the function returns false at any point, the bubble is stopped.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Bubbles up the component/container heirarchy, calling the specified function with each component. The scope (this) of function call will be the scope provided or the current component. The arguments to the function will be the args provided or the current component. If the function returns false at any point, the bubble is stopped." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="CallEl" ParamsRaw="string name, params object[] args">
          <Attributes>
            <Attribute Type="Meta" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="AddClass" ParamsRaw="string cls">
          <Summary><![CDATA[Adds a CSS class to the component's underlying element.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Adds a CSS class to the component's underlying element." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="AddContainerClass" ParamsRaw="string cls">
          <Summary><![CDATA[Adds a CSS class to the component's container.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Adds a CSS class to the component's container." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="ApplyStyles" ParamsRaw="string styles">
          <Summary><![CDATA[More flexible version of setStyle for setting style properties.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="More flexible version of setStyle for setting style properties." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Destroy">
          <Summary><![CDATA[Destroys this component by purging any event listeners, removing the component's element from the DOM, removing the component from its Ext.Container (if applicable) and unregistering it from Ext.ComponentMgr. Destruction is generally handled automatically by the framework and this method should usually not need to be called directly.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Destroys this component by purging any event listeners, removing the component's element from the DOM, removing the component from its Ext.Container (if applicable) and unregistering it from Ext.ComponentMgr. Destruction is generally handled automatically by the framework and this method should usually not need to be called directly." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Focus">
          <Summary><![CDATA[Try to focus this component.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Try to focus this component." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Focus" ParamsRaw="bool selectText">
          <Summary><![CDATA[Try to focus this component.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Try to focus this component." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Focus" ParamsRaw="bool selectText, int delay">
          <Summary><![CDATA[Try to focus this component.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Try to focus this component." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Hide">
          <Summary><![CDATA[Hide this component.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Hide this component." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="RemoveClass" ParamsRaw="string cls">
          <Summary><![CDATA[Removes a CSS class from the component's underlying element.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Removes a CSS class from the component's underlying element." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="RemoveContainerClass" ParamsRaw="string cls">
          <Summary><![CDATA[Removes a CSS class from the component's container.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Removes a CSS class from the component's container." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Show">
          <Summary><![CDATA[Show this component.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Show this component." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Mon" ParamsRaw="Element el, string eventName, JFunction fn">
          <Summary><![CDATA[Adds listeners to any Observable object (or Elements) which are automatically removed when this Component is destroyed.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Adds listeners to any Observable object (or Elements) which are automatically removed when this Component is destroyed." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Mon" ParamsRaw="Observable el, string eventName, JFunction fn">
          <Summary><![CDATA[Adds listeners to any Observable object (or Elements) which are automatically removed when this Component is destroyed.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Adds listeners to any Observable object (or Elements) which are automatically removed when this Component is destroyed." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Mon" ParamsRaw="Element el, string eventName, JFunction fn, string scope">
          <Summary><![CDATA[Adds listeners to any Observable object (or Elements) which are automatically removed when this Component is destroyed.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Adds listeners to any Observable object (or Elements) which are automatically removed when this Component is destroyed." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Mon" ParamsRaw="Observable el, string eventName, JFunction fn, string scope">
          <Summary><![CDATA[Adds listeners to any Observable object (or Elements) which are automatically removed when this Component is destroyed.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Adds listeners to any Observable object (or Elements) which are automatically removed when this Component is destroyed." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Mon" ParamsRaw="Element el, string eventName, string fn, string scope, HandlerConfig options">
          <Summary><![CDATA[Adds listeners to any Observable object (or Elements) which are automatically removed when this Component is destroyed.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Adds listeners to any Observable object (or Elements) which are automatically removed when this Component is destroyed." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Mon" ParamsRaw="Observable el, string eventName, string fn, string scope, HandlerConfig options">
          <Summary><![CDATA[Adds listeners to any Observable object (or Elements) which are automatically removed when this Component is destroyed.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Adds listeners to any Observable object (or Elements) which are automatically removed when this Component is destroyed." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Mun" ParamsRaw="Element el, string eventName, string fn">
          <Summary><![CDATA[Removes listeners that were added by the Mon method.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Removes listeners that were added by the Mon method." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Mun" ParamsRaw="Observable el, string eventName, string fn">
          <Summary><![CDATA[Removes listeners that were added by the Mon method.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Removes listeners that were added by the Mon method." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Mun" ParamsRaw="Element el, string eventName, string fn, string scope">
          <Summary><![CDATA[Removes listeners that were added by the Mon method.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Removes listeners that were added by the Mon method." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Mun" ParamsRaw="Observable el, string eventName, string fn, string scope">
          <Summary><![CDATA[Removes listeners that were added by the Mon method.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Removes listeners that were added by the Mon method." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Update" ParamsRaw="string html">
          <Summary><![CDATA[Update the html of the Body, optionally searching for and processing scripts.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Update the html of the Body, optionally searching for and processing scripts." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Update" ParamsRaw="string html, bool loadScripts">
          <Summary><![CDATA[Update the html of the Body, optionally searching for and processing scripts.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Update the html of the Body, optionally searching for and processing scripts." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Update" ParamsRaw="string html, bool loadScripts, string callback">
          <Summary><![CDATA[Update the html of the Body, optionally searching for and processing scripts.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Update the html of the Body, optionally searching for and processing scripts." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Update" ParamsRaw="string html, bool loadScripts, JFunction callback">
          <Summary><![CDATA[Update the html of the Body, optionally searching for and processing scripts.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Update the html of the Body, optionally searching for and processing scripts." />
          </Attributes>
          <Parameters />
        </Method>
      </Methods>
    </Class>
    <Class Name="ComponentBaseDirectEvents" Abstract="true" Extends="ComponentDirectEvents">
      <Attributes>
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="TypeConverter" RawValue="typeof(DirectEventsConverter)" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Added" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when a component is added to an Ext.Container]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Component), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;ownerCt&quot;, typeof(Container), &quot;Container which holds the component&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;index&quot;, typeof(int), &quot;Position at which the component was added&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;added&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a component is added to an Ext.Container" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AfterRender" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after the component rendering is finished. The afterrender event is fired after this Component has been rendered, been postprocesed by any afterRender method defined for the Component, and, if stateful, after state has been restored.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Component), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;afterrender&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the component rendering is finished. The afterrender event is fired after this Component has been rendered, been postprocesed by any afterRender method defined for the Component, and, if stateful, after state has been restored." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeDestroy" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before the component is destroyed. Return false to stop the destroy.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Component), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforedestroy&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the component is destroyed. Return false to stop the destroy." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeHide" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before the component is hidden. Return false to stop the hide.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Component), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforehide&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the component is hidden. Return false to stop the hide." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeRender" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before the component is rendered. Return false to stop the render.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Component), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforerender&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the component is rendered. Return false to stop the render." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeShow" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before the component is shown. Return false to stop the show.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Component), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeshow&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the component is shown. Return false to stop the show." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeStateRestore" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before the state of the component is restored. Return false to stop the restore.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Component), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;state&quot;, typeof(object), &quot;The hash of state values&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforestaterestore&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the state of the component is restored. Return false to stop the restore." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeStateSave" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before the state of the component is saved to the configured state provider. Return false to stop the save.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Component), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;state&quot;, typeof(object), &quot;The hash of state values&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforestatesave&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the state of the component is saved to the configured state provider. Return false to stop the save." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Destroy" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after the component is destroyed.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Component), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;destroy&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the component is destroyed." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Disable" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after the component is disabled.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Component), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;disable&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the component is disabled." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Enable" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after the component is enabled.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Component), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;enable&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the component is enabled." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Hide" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after the component is hidden.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Component), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;hide&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the component is hidden." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Render" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after the component is rendered.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Component), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;render&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the component is rendered." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Removed" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after the component is rendered.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Component), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;ownerCt&quot;, typeof(Container), &quot;Container which holds the component&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;removed&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the component is rendered." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Show" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after the component is shown.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Component), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;show&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the component is shown." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="StateRestore" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after the state of the component is restored.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Component), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;state&quot;, typeof(object), &quot;The hash of state values&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;staterestore&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the state of the component is restored." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="StateSave" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after the state of the component is saved to the configured state provider.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Component), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;state&quot;, typeof(object), &quot;The hash of state values&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;statesave&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the state of the component is saved to the configured state provider." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ComponentBaseListeners" Abstract="true" Extends="ComponentListeners">
      <Attributes>
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="TypeConverter" RawValue="typeof(ListenersConverter)" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Added" Type="ComponentListener">
          <Summary><![CDATA[Fires when a component is added to an Ext.Container]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Component), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;ownerCt&quot;, typeof(Container), &quot;Container which holds the component&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;index&quot;, typeof(int), &quot;Position at which the component was added&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;added&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a component is added to an Ext.Container" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AfterRender" Type="ComponentListener">
          <Summary><![CDATA[Fires after the component rendering is finished. The afterrender event is fired after this Component has been rendered, been postprocesed by any afterRender method defined for the Component, and, if stateful, after state has been restored.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Component), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;afterrender&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the component rendering is finished. The afterrender event is fired after this Component has been rendered, been postprocesed by any afterRender method defined for the Component, and, if stateful, after state has been restored." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeDestroy" Type="ComponentListener">
          <Summary><![CDATA[Fires before the component is destroyed. Return false to stop the destroy.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Component), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforedestroy&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the component is destroyed. Return false to stop the destroy." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeHide" Type="ComponentListener">
          <Summary><![CDATA[Fires before the component is hidden. Return false to stop the hide.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Component), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforehide&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the component is hidden. Return false to stop the hide." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeRender" Type="ComponentListener">
          <Summary><![CDATA[Fires before the component is rendered. Return false to stop the render.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Component), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforerender&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the component is rendered. Return false to stop the render." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeShow" Type="ComponentListener">
          <Summary><![CDATA[Fires before the component is shown. Return false to stop the show.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Component), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeshow&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the component is shown. Return false to stop the show." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeStateRestore" Type="ComponentListener">
          <Summary><![CDATA[Fires before the state of the component is restored. Return false to stop the restore.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Component), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;state&quot;, typeof(object), &quot;The hash of state values&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforestaterestore&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the state of the component is restored. Return false to stop the restore." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeStateSave" Type="ComponentListener">
          <Summary><![CDATA[Fires before the state of the component is saved to the configured state provider. Return false to stop the save.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Component), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;state&quot;, typeof(object), &quot;The hash of state values&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforestatesave&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the state of the component is saved to the configured state provider. Return false to stop the save." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Destroy" Type="ComponentListener">
          <Summary><![CDATA[Fires after the component is destroyed.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Component), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;destroy&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the component is destroyed." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Disable" Type="ComponentListener">
          <Summary><![CDATA[Fires after the component is disabled.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Component), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;disable&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the component is disabled." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Enable" Type="ComponentListener">
          <Summary><![CDATA[Fires after the component is enabled.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Component), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;enable&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the component is enabled." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Hide" Type="ComponentListener">
          <Summary><![CDATA[Fires after the component is hidden.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Component), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;hide&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the component is hidden." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Render" Type="ComponentListener">
          <Summary><![CDATA[Fires after the component is rendered.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Component), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;render&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the component is rendered." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Removed" Type="ComponentListener">
          <Summary><![CDATA[Fires when a component is removed from an Ext.Container]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Component), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;ownerCt&quot;, typeof(Container), &quot;Container which holds the component&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;removed&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a component is removed from an Ext.Container" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Show" Type="ComponentListener">
          <Summary><![CDATA[Fires after the component is shown.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Component), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;show&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the component is shown." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="StateRestore" Type="ComponentListener">
          <Summary><![CDATA[Fires after the state of the component is restored.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Component), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;state&quot;, typeof(object), &quot;The hash of state values&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;staterestore&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the state of the component is restored." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="StateSave" Type="ComponentListener">
          <Summary><![CDATA[Fires after the state of the component is saved to the configured state provider.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Component), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;state&quot;, typeof(object), &quot;The hash of state values&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;statesave&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the state of the component is saved to the configured state provider." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ComponentDirectEvent" Extends="ObservableDirectEvent">
      <Attributes>
        <Attribute Type="TypeConverter" RawValue="typeof (DirectEventConverter)" />
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Confirmation" Type="DirectEventConfirmation">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Object" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ComponentDirectEvents" Extends="StateManagedItem">
      <Attributes>
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="TypeConverter" RawValue="typeof(DirectEventsConverter)" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="ComponentListener" Extends="BaseListener" Inherits="IAutoPostBack">
      <Attributes>
        <Attribute Type="DefaultProperty" RawValue="&quot;Handler&quot;" />
        <Attribute Type="TypeConverter" RawValue="typeof(ListenerConverter)" />
        <Attribute Type="ToolboxItem" RawValue="false" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="AutoPostBack" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to initiate a postback.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to initiate a postback." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="FnInternal" Access="ProtectedInternal" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;fn&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ComponentListeners" Abstract="true" Extends="StateManagedItem">
      <Attributes>
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="TypeConverter" RawValue="typeof(ListenersConverter)" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="ComponentManager">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="ComponentMenuItem" Extends="MenuItemBase">
      <Summary><![CDATA[A menu item that wraps the choosen component.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="Description" RawValue="A menu item that wraps the choosen component." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Component" Type="ItemsCollection&lt;Component&gt;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;6. ComponentItem&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;component&quot;, typeof(ItemCollectionJsonConverter)" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ComponentElement" Type="TargetElement" DefaultValue="TargetElement.Auto">
          <Summary><![CDATA[The element of component which will be used during menu item rendering]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;6. ComponentItem&quot;" />
            <Attribute Type="DefaultValue" RawValue="TargetElement.Auto" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="Description" RawValue="The element of component which will be used during menu item rendering" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TargetProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;target&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Shift" Type="bool" DefaultValue="true">
          <Summary><![CDATA[If true then element will be shiffted on horizontal, the icon place will be visible]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;6. ComponentItem&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Description" RawValue="If true then element will be shiffted on horizontal, the icon place will be visible" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Target" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The target element which will be placed to toolbar.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;6. ComponentItem&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The target element which will be placed to toolbar." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HideOnClick" Modifier="Override" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to hide the containing menu after this item is clicked (defaults to false).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. ComponentItem&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to hide the containing menu after this item is clicked (defaults to false)." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="CompositeField" Extends="Field">
      <Summary><![CDATA[Composite field allowing a number of form Fields to be rendered on the same row. The fields are rendered using an hbox layout internally, so all of the normal HBox layout config items are available.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:CompositeField runat=\&quot;server\&quot;&gt;&lt;/{0}:CompositeField&gt;&quot;" />
        <Attribute Type="ParseChildren" RawValue="true" />
        <Attribute Type="PersistChildren" RawValue="false" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(CompositeField), &quot;Build.ToolboxIcons.MultiField.bmp&quot;" />
        <Attribute Type="Description" RawValue="Composite field allowing a number of form Fields to be rendered on the same row. The fields are rendered using an hbox layout internally, so all of the normal HBox layout config items are available." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="LayoutConfig" Type="HBoxLayoutConfig">
          <Summary><![CDATA[Layout config of the inner hbox layout]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;6. CompositeField&quot;" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="Layout config of the inner hbox layout" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AutoDoLayout" Type="bool" DefaultValue="false">
          <Summary><![CDATA[If true .doLayout() is called after render. Default is false.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. CompositeField&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="If true .doLayout() is called after render. Default is false." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BuildLabel" Type="JFunction">
          <Summary><![CDATA[Builds a label string from an array of subfield labels. Calls if CompositeField has no FieldLabel]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;6. CompositeField&quot;" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="Builds a label string from an array of subfield labels. Calls if CompositeField has no FieldLabel" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Items" Type="ItemsCollection&lt;Component&gt;">
          <Summary><![CDATA[A Collection of Field Components.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;items&quot;, typeof(ItemCollectionJsonConverter)" />
            <Attribute Type="Category" RawValue="&quot;6. CompositeField&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="A Collection of Field Components." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DefaultMargins" Type="string" DefaultValue="&quot;0 5 0 0&quot;">
          <Summary><![CDATA[The margins to apply by default to each field in the composite]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. CompositeField&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;0 5 0 0&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The margins to apply by default to each field in the composite" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SkipLastItemMargin" Type="bool" DefaultValue="true">
          <Summary><![CDATA[If true, the defaultMargins are not applied to the last item in the composite field set (defaults to true)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. CompositeField&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="If true, the defaultMargins are not applied to the last item in the composite field set (defaults to true)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CombineErrors" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to combine errors from the individual fields into a single error message at the CompositeField level (defaults to true)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. CompositeField&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to combine errors from the individual fields into a single error message at the CompositeField level (defaults to true)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="LabelConnector" Type="string" DefaultValue="&quot;, &quot;">
          <Summary><![CDATA[The string to use when joining segments of the built label together (defaults to ', ')]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. CompositeField&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;, &quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The string to use when joining segments of the built label together (defaults to ', ')" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Defaults" Type="ParameterCollection">
          <Summary><![CDATA[A config object that will be applied to all fields added to this CompositeField either via the items config. The defaults config can contain any number of name/value property pairs to be added to each items, and should be valid for the types of items being added to the CompositeField.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ArrayToObject" />
            <Attribute Type="Category" RawValue="&quot;6. CompositeField&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="A config object that will be applied to all fields added to this CompositeField either via the items config. The defaults config can contain any number of name/value property pairs to be added to each items, and should be valid for the types of items being added to the CompositeField." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Listeners" Type="CompositeFieldListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="CompositeFieldDirectEvents">
          <Summary><![CDATA[Server-side Ajax Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Server-side Ajax Event Handlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods>
        <Method Name="DoLayout">
          <Summary><![CDATA[Force this container's layout to be recalculated. A call to this function is required after adding a new component to an already rendered container, or possibly after changing sizing/position properties of child components.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Force this container's layout to be recalculated. A call to this function is required after adding a new component to an already rendered container, or possibly after changing sizing/position properties of child components." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="DoLayout" ParamsRaw="bool shallow">
          <Summary><![CDATA[Force this container's layout to be recalculated. A call to this function is required after adding a new component to an already rendered container, or possibly after changing sizing/position properties of child components.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Force this container's layout to be recalculated. A call to this function is required after adding a new component to an already rendered container, or possibly after changing sizing/position properties of child components." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="DoLayout" ParamsRaw="bool shallow, bool force">
          <Summary><![CDATA[Force this container's layout to be recalculated. A call to this function is required after adding a new component to an already rendered container, or possibly after changing sizing/position properties of child components.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Force this container's layout to be recalculated. A call to this function is required after adding a new component to an already rendered container, or possibly after changing sizing/position properties of child components." />
          </Attributes>
          <Parameters />
        </Method>
      </Methods>
    </Class>
    <Class Name="CompositeFieldDirectEvents" Extends="FieldDirectEvents">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="CompositeFieldListeners" Extends="FieldListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="ConfigOptionAttribute" Extends="System">
      <Attributes>
        <Attribute Type="AttributeUsage" RawValue="AttributeTargets.Property | AttributeTargets.Enum | AttributeTargets.Class, AllowMultiple = false" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="ConfigScriptBuilder" Extends="BaseScriptBuilder">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="ConfirmationList" Extends="SortedList&lt;string, ConfirmationRecord&gt;">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="ConfirmationRecord">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="Container" Extends="ContainerBase">
      <Summary><![CDATA[Base class for any Ext.BoxComponent that may contain other Components. Containers handle the basic behavior of containing items, namely adding, inserting and removing items.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:Container runat=\&quot;server\&quot;&gt;&lt;Items&gt;&lt;/Items&gt;&lt;/{0}:Container&gt;&quot;" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(Container), &quot;Build.ToolboxIcons.Container.bmp&quot;" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="Description" RawValue="Base class for any Ext.BoxComponent that may contain other Components. Containers handle the basic behavior of containing items, namely adding, inserting and removing items." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Listeners" Type="ContainerListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="ContainerDirectEvents">
          <Summary><![CDATA[Server-side Ajax Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Server-side Ajax Event Handlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ContainerBase" Abstract="true" Extends="BoxComponentBase" Inherits="ILayout,IItems">
      <Summary><![CDATA[Base Class for any visual Component that uses a box content Container.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ParseChildren" RawValue="true" />
        <Attribute Type="PersistChildren" RawValue="false" />
        <Attribute Type="Description" RawValue="Base Class for any visual Component that uses a box content Container." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="ActiveItem" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A string component id of the component that should be initially activated within the content Container's layout on render.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetActiveItem&quot;" />
            <Attribute Type="Category" RawValue="&quot;5. Container&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="A string component id of the component that should be initially activated within the content Container's layout on render." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ActiveIndex" Type="int" DefaultValue="-1">
          <Summary><![CDATA[A numeric index of the component that should be initially activated within the content Container's layout on render.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;activeItem&quot;" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetActiveIndex&quot;" />
            <Attribute Type="Category" RawValue="&quot;5. Container&quot;" />
            <Attribute Type="DefaultValue" RawValue="-1" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="A numeric index of the component that should be initially activated within the content Container's layout on render." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AutoDestroy" Type="bool" DefaultValue="true">
          <Summary><![CDATA[If true the content Container will automatically destroy any contained component that is removed from it, else destruction must be handled manually (defaults to true).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Container&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="If true the content Container will automatically destroy any contained component that is removed from it, else destruction must be handled manually (defaults to true)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AutoDoLayout" Type="bool" DefaultValue="false">
          <Summary><![CDATA[If true .doLayout() is called after render. Default is false.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Container&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="If true .doLayout() is called after render. Default is false." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BufferResize" Type="int" DefaultValue="50">
          <Summary><![CDATA[When set to true (50 milliseconds) or a number of milliseconds, the layout assigned for this container will buffer the frequency it calculates and does a re-layout of components. This is useful for heavy containers or containers with a large quantity of sub-components for which frequent layout calls would be expensive. Defaults to 50.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Container&quot;" />
            <Attribute Type="DefaultValue" RawValue="50" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="When set to true (50 milliseconds) or a number of milliseconds, the layout assigned for this container will buffer the frequency it calculates and does a re-layout of components. This is useful for heavy containers or containers with a large quantity of sub-components for which frequent layout calls would be expensive. Defaults to 50." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DefaultType" Type="string" DefaultValue="&quot;Panel&quot;">
          <Summary><![CDATA[The default type of content Container represented by this object as registered in Ext.ComponentMgr (defaults to 'panel').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;5. Container&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;Panel&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(DefaultTypeConverter)" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The default type of content Container represented by this object as registered in Ext.ComponentMgr (defaults to 'panel')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DefaultTypeProxy" Access="Protected" Type="string" DefaultValue="&quot;panel&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;defaultType&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;panel&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Defaults" Type="ParameterCollection">
          <Summary><![CDATA[A config object that will be applied to all components added to this content Container either via the items config or via the add or insert methods. The defaults config can contain any number of name/value property pairs to be added to each items, and should be valid for the types of items being added to the content Container. For example, to automatically apply padding to the body of each of a set of contained Ext.Panel items, you could pass: defaults: {bodyStyle:'padding:15px'}.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ArrayToObject" />
            <Attribute Type="Category" RawValue="&quot;5. Container&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="A config object that will be applied to all components added to this content Container either via the items config or via the add or insert methods. The defaults config can contain any number of name/value property pairs to be added to each items, and should be valid for the types of items being added to the content Container. For example, to automatically apply padding to the body of each of a set of contained Ext.Panel items, you could pass: defaults: {bodyStyle:'padding:15px'}." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HideBorders" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to hide the borders of each contained component, false to defer to the component's existing border settings (defaults to false).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Container&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to hide the borders of each contained component, false to defer to the component's existing border settings (defaults to false)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MonitorResize" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to automatically monitor window resize events to handle anything that is sensitive to the current size of the viewport. This value is typically managed by the chosen layout and should not need to be set manually.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Container&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to automatically monitor window resize events to handle anything that is sensitive to the current size of the viewport. This value is typically managed by the chosen layout and should not need to be set manually." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ForceLayout" Type="bool" DefaultValue="false">
          <Summary><![CDATA[If true the container will force a layout initially even if hidden or collapsed. This option is useful for forcing forms to render in collapsed or hidden containers. (defaults to false).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Container&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="If true the container will force a layout initially even if hidden or collapsed. This option is useful for forcing forms to render in collapsed or hidden containers. (defaults to false)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Items" Type="ItemsCollection&lt;Component&gt;">
          <Summary><![CDATA[Items Collection]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DeferredRender" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="Items Collection" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ItemsProxy" Access="ProtectedInternal" Type="ItemsCollection&lt;Component&gt;" DefaultValue="null">
          <Summary><![CDATA[Items Collection]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;items&quot;, typeof(ItemCollectionJsonConverter)" />
            <Attribute Type="DeferredRender" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="Items Collection" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Layout" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The layout type to be used in this container.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;5. Container&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(LayoutConverter)" />
            <Attribute Type="Description" RawValue="The layout type to be used in this container." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="LayoutConfig" Type="LayoutConfigCollection">
          <Summary><![CDATA[This is a config object containing properties specific to the chosen layout (to be used in conjunction with the layout config value)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;layoutConfig&gt;Primary&quot;" />
            <Attribute Type="Category" RawValue="&quot;5. Container&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="This is a config object containing properties specific to the chosen layout (to be used in conjunction with the layout config value)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="LayoutProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;layout&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="LayoutControl" Type="Layout" DefaultValue="null">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.UnrollObject" />
            <Attribute Type="DeferredRender" />
            <Attribute Type="Category" RawValue="&quot;5. Container&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Browsable" RawValue="false" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods>
        <Method Name="Add" ParamsRaw="Component component">
          <Summary><![CDATA[Adds a component to this container. Fires the beforeadd event before adding, then fires the add event after the component has been added. If the container is already rendered when add is called, you may need to call doLayout to refresh the view. This is required so that you can add multiple child components if needed while only refreshing the layout once.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Adds a component to this container. Fires the beforeadd event before adding, then fires the add event after the component has been added. If the container is already rendered when add is called, you may need to call doLayout to refresh the view. This is required so that you can add multiple child components if needed while only refreshing the layout once." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Add" ParamsRaw="IEnumerable&lt;Component&gt; collection">
          <Summary><![CDATA[Adds a range of components to this container.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Adds a range of components to this container." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Cascade" ParamsRaw="string function">
          <Summary><![CDATA[Cascades down the component/container heirarchy from this component (called first), calling the specified function with each component. The scope (this) of function call will be the scope provided or the current component. The arguments to the function will be the args provided or the current component. If the function returns false at any point, the cascade is stopped on that branch.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Cascades down the component/container heirarchy from this component (called first), calling the specified function with each component. The scope (this) of function call will be the scope provided or the current component. The arguments to the function will be the args provided or the current component. If the function returns false at any point, the cascade is stopped on that branch." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Cascade" ParamsRaw="string function, string scope">
          <Summary><![CDATA[Cascades down the component/container heirarchy from this component (called first), calling the specified function with each component. The scope (this) of function call will be the scope provided or the current component. The arguments to the function will be the args provided or the current component. If the function returns false at any point, the cascade is stopped on that branch.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Cascades down the component/container heirarchy from this component (called first), calling the specified function with each component. The scope (this) of function call will be the scope provided or the current component. The arguments to the function will be the args provided or the current component. If the function returns false at any point, the cascade is stopped on that branch." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Cascade" ParamsRaw="string function, string scope, Dictionary&lt;string, object&gt; args">
          <Summary><![CDATA[Cascades down the component/container heirarchy from this component (called first), calling the specified function with each component. The scope (this) of function call will be the scope provided or the current component. The arguments to the function will be the args provided or the current component. If the function returns false at any point, the cascade is stopped on that branch.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Cascades down the component/container heirarchy from this component (called first), calling the specified function with each component. The scope (this) of function call will be the scope provided or the current component. The arguments to the function will be the args provided or the current component. If the function returns false at any point, the cascade is stopped on that branch." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="DoLayout">
          <Summary><![CDATA[Force this container's layout to be recalculated. A call to this function is required after adding a new component to an already rendered container, or possibly after changing sizing/position properties of child components.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Force this container's layout to be recalculated. A call to this function is required after adding a new component to an already rendered container, or possibly after changing sizing/position properties of child components." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="DoLayout" ParamsRaw="bool shallow">
          <Summary><![CDATA[Force this container's layout to be recalculated. A call to this function is required after adding a new component to an already rendered container, or possibly after changing sizing/position properties of child components.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Force this container's layout to be recalculated. A call to this function is required after adding a new component to an already rendered container, or possibly after changing sizing/position properties of child components." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="DoLayout" ParamsRaw="bool shallow, bool force">
          <Summary><![CDATA[Force this container's layout to be recalculated. A call to this function is required after adding a new component to an already rendered container, or possibly after changing sizing/position properties of child components.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Force this container's layout to be recalculated. A call to this function is required after adding a new component to an already rendered container, or possibly after changing sizing/position properties of child components." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Insert" ParamsRaw="int index, Component component">
          <Summary><![CDATA[Inserts a Component into this Container at a specified index. Fires the beforeadd event before inserting, then fires the add event after the Component has been inserted.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Inserts a Component into this Container at a specified index. Fires the beforeadd event before inserting, then fires the add event after the Component has been inserted." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Insert" ParamsRaw="int index, string id">
          <Summary><![CDATA[Inserts a Component into this Container at a specified index. Fires the beforeadd event before inserting, then fires the add event after the Component has been inserted.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Inserts a Component into this Container at a specified index. Fires the beforeadd event before inserting, then fires the add event after the Component has been inserted." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Remove" ParamsRaw="Component component">
          <Summary><![CDATA[Removes a component from this container. Fires the beforeremove event before removing, then fires the remove event after the component has been removed.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Removes a component from this container. Fires the beforeremove event before removing, then fires the remove event after the component has been removed." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Remove" ParamsRaw="Component component, bool destroy">
          <Summary><![CDATA[Removes a component from this container. Fires the beforeremove event before removing, then fires the remove event after the component has been removed.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Removes a component from this container. Fires the beforeremove event before removing, then fires the remove event after the component has been removed." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Remove" ParamsRaw="string id">
          <Summary><![CDATA[Removes a component from this container. Fires the beforeremove event before removing, then fires the remove event after the component has been removed.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Removes a component from this container. Fires the beforeremove event before removing, then fires the remove event after the component has been removed." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Remove" ParamsRaw="string id, bool destroy">
          <Summary><![CDATA[Removes a component from this container. Fires the beforeremove event before removing, then fires the remove event after the component has been removed.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Removes a component from this container. Fires the beforeremove event before removing, then fires the remove event after the component has been removed." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="RemoveAll">
          <Summary><![CDATA[Removes all components from this container.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Removes all components from this container." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="RemoveAll" ParamsRaw="bool autoDestroy">
          <Summary><![CDATA[Removes all components from this container.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Removes all components from this container." />
          </Attributes>
          <Parameters />
        </Method>
      </Methods>
    </Class>
    <Class Name="ContainerDirectEvents" Extends="BoxComponentDirectEvents">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Add" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after any Component is added or inserted into the content Container.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(ContainerBase), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;component&quot;, typeof(Component), &quot;The component that was added&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;index&quot;, typeof(int), &quot;The index at which the component was added to the container's items collection&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;add&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after any Component is added or inserted into the content Container." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AfterLayout" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when the components in this content Container are arranged by the associated layout manager.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(ContainerBase), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;layout&quot;, typeof(ContainerLayout), &quot;The ContainerLayout implementation for this container&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;afterlayout&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the components in this content Container are arranged by the associated layout manager." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeAdd" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before any Component is added or inserted into the content Container. A handler can return false to cancel the add.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(ContainerBase), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;component&quot;, typeof(Component), &quot;The component that was added&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;index&quot;, typeof(int), &quot;The index at which the component was added to the container's items collection&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeadd&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before any Component is added or inserted into the content Container. A handler can return false to cancel the add." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeRemove" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before any Component is removed from the content Container. A handler can return false to cancel the remove.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(ContainerBase), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;component&quot;, typeof(Component), &quot;The component being removed&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeremove&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before any Component is removed from the content Container. A handler can return false to cancel the remove." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Remove" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after any Component is removed from the content Container.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(ContainerBase), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;component&quot;, typeof(Component), &quot;The component that was removed&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;remove&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after any Component is removed from the content Container." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ContainerLayout" Extends="Layout">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:ContainerLayout runat=\&quot;server\&quot;&gt;&lt;/{0}:ContainerLayout&gt;&quot;" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(ContainerLayout), &quot;Build.ToolboxIcons.Layout.bmp&quot;" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="LayoutConfig" Access="ProtectedInternal" Type="LayoutConfig">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Object" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ContainerListeners" Extends="BoxComponentListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Add" Type="ComponentListener">
          <Summary><![CDATA[Fires after any Component is added or inserted into the content Container.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(ContainerBase), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;component&quot;, typeof(Component), &quot;The component that was added&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;index&quot;, typeof(int), &quot;The index at which the component was added to the container's items collection&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;add&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after any Component is added or inserted into the content Container." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AfterLayout" Type="ComponentListener">
          <Summary><![CDATA[Fires when the components in this content Container are arranged by the associated layout manager.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(ContainerBase), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;layout&quot;, typeof(ContainerLayout), &quot;The ContainerLayout implementation for this container&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;afterlayout&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the components in this content Container are arranged by the associated layout manager." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeAdd" Type="ComponentListener">
          <Summary><![CDATA[Fires before any Component is added or inserted into the content Container. A handler can return false to cancel the add.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(ContainerBase), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;component&quot;, typeof(Component), &quot;The component that was added&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;index&quot;, typeof(int), &quot;The index at which the component was added to the container's items collection&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeadd&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before any Component is added or inserted into the content Container. A handler can return false to cancel the add." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeRemove" Type="ComponentListener">
          <Summary><![CDATA[Fires before any Component is removed from the content Container. A handler can return false to cancel the remove.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(ContainerBase), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;component&quot;, typeof(Component), &quot;The component being removed&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeremove&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before any Component is removed from the content Container. A handler can return false to cancel the remove." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Remove" Type="ComponentListener">
          <Summary><![CDATA[Fires after any Component is removed from the content Container.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(ContainerBase), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;component&quot;, typeof(Component), &quot;The component that was removed&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;remove&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after any Component is removed from the content Container." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ContentScriptBuilder" Extends="BaseScriptBuilder">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="ControlConverter" Extends="StringConverter">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="Cookies" Extends="ScriptClass">
      <Attributes />
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="CSS" Extends="ScriptClass">
      <Attributes />
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="CtorDateTimeJsonConverter" Extends="ExtJsonConverter">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="CustomConfigJsonConverter" Extends="ExtJsonConverter">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="CycleButton" Extends="SplitButtonBase">
      <Summary><![CDATA[A specialized SplitButton that contains a menu of Ext.menu.CheckItem elements. The button automatically cycles through each menu items on click, raising the button's change event (or calling the button's changeHandler function, if supplied) for the active menu items. Clicking on the arrow section of the button displays the dropdown menu just like a normal SplitButton.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:CycleButton runat=\&quot;server\&quot; Text=\&quot;Cycle Button\&quot; /&gt;&quot;" />
        <Attribute Type="DefaultEvent" RawValue="&quot;Click&quot;" />
        <Attribute Type="DefaultProperty" RawValue="&quot;Text&quot;" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(CycleButton), &quot;Build.ToolboxIcons.CycleButton.bmp&quot;" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="Description" RawValue="A specialized SplitButton that contains a menu of Ext.menu.CheckItem elements. The button automatically cycles through each menu items on click, raising the button's change event (or calling the button's changeHandler function, if supplied) for the active menu items. Clicking on the arrow section of the button displays the dropdown menu just like a normal SplitButton." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="ChangeHandler" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A callback function that will be invoked each time the active menu items in the button's menu has changed. If this callback is not supplied, the SplitButton will instead fire the change event on active items change. The changeHandler function will be called with the following argument list: (SplitButton this, Ext.menu.CheckItem items).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;7. CycleButton&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="A callback function that will be invoked each time the active menu items in the button's menu has changed. If this callback is not supplied, the SplitButton will instead fire the change event on active items change. The changeHandler function will be called with the following argument list: (SplitButton this, Ext.menu.CheckItem items)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ForceIcon" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A css class which sets an image to be used as the static icon for this button. This icon will always be displayed regardless of which item is selected in the dropdown list. This overrides the default behavior of changing the button's icon to match the selected item's icon on change.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. CycleButton&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="A css class which sets an image to be used as the static icon for this button. This icon will always be displayed regardless of which item is selected in the dropdown list. This overrides the default behavior of changing the button's icon to match the selected item's icon on change." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="PrependText" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A static string to prepend before the active items's text when displayed as the button's text (only applies when showText = true, defaults to '')]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. CycleButton&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="A static string to prepend before the active items's text when displayed as the button's text (only applies when showText = true, defaults to '')" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ShowText" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to display the active items's text as the button text (defaults to false).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. CycleButton&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to display the active items's text as the button text (defaults to false)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ToggleOnClick" Type="bool" DefaultValue="true">
          <Summary><![CDATA[False to prevent change active item after button click (defaults to true).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;7. CycleButton&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="False to prevent change active item after button click (defaults to true)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ToggleOnClickProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;toggleSelected&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Listeners" Type="CycleButtonListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="CycleButtonDirectEvents">
          <Summary><![CDATA[Server-side Ajax Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Server-side Ajax Event Handlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods>
        <Method Name="ToggleSelected">
          <Summary><![CDATA[This is normally called internally on button click, but can be called externally to advance the button's active item programmatically to the next one in the menu. If the current item is the last one in the menu the active item will be set to the first item in the menu.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="This is normally called internally on button click, but can be called externally to advance the button's active item programmatically to the next one in the menu. If the current item is the last one in the menu the active item will be set to the first item in the menu." />
          </Attributes>
          <Parameters />
        </Method>
      </Methods>
    </Class>
    <Class Name="CycleButtonDirectEvents" Extends="SplitButtonDirectEvents">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Change" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after the button's active menu items has changed. Note that if a changeHandler function is set on this CycleButton, it will be called instead on active items change and this change event will not be fired.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CycleButton), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;item&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;change&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the button's active menu items has changed. Note that if a changeHandler function is set on this CycleButton, it will be called instead on active items change and this change event will not be fired." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="CycleButtonListeners" Extends="SplitButtonListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Change" Type="ComponentListener">
          <Summary><![CDATA[Fires after the button's active menu items has changed. Note that if a changeHandler function is set on this CycleButton, it will be called instead on active items change and this change event will not be fired.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CycleButton), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;checkitem&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;change&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the button's active menu items has changed. Note that if a changeHandler function is set on this CycleButton, it will be called instead on active items change and this change event will not be fired." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="DataProxy" Abstract="true" Extends="StateManagedItem">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Listeners" Type="DataProxyListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RestAPI" Type="RestUrls">
          <Summary><![CDATA[Specific urls to call on REST action methods \"read\", \"create\", \"update\" and \"destroy\".]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;api&quot;, JsonMode.Object" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="Specific urls to call on REST action methods \&quot;read\&quot;, \&quot;create\&quot;, \&quot;update\&quot; and \&quot;destroy\&quot;." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="DataProxyDirectEvents" Extends="ComponentBaseDirectEvents">
      <Attributes>
        <Attribute Type="TypeConverter" RawValue="typeof(DirectEventsConverter)" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="BeforeLoad" Type="ComponentDirectEvent" DefaultValue="null">
          <Summary><![CDATA[Fires before a network request is made to retrieve a data object.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;beforeload&gt;Handler&quot;, JsonMode.Object" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="Fires before a network request is made to retrieve a data object." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Load" Type="ComponentDirectEvent" DefaultValue="null">
          <Summary><![CDATA[Fires before the load method's callback is called.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;load&gt;Handler&quot;, JsonMode.Object" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="Fires before the load method's callback is called." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="LoawdException" Type="ComponentDirectEvent" DefaultValue="null">
          <Summary><![CDATA[Fires if an exception occurs in the Proxy during data loading]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;loadexception&gt;Handler&quot;, JsonMode.Object" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="Fires if an exception occurs in the Proxy during data loading" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="DataProxyListeners" Extends="ComponentListeners">
      <Attributes>
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="TypeConverter" RawValue="typeof(ListenersConverter)" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="BeforeLoad" Type="ComponentListener">
          <Summary><![CDATA[Fires before a request to retrieve a data object.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;proxy&quot;, typeof(DataProxy), &quot;The proxy for the request&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;params&quot;, typeof(object), &quot;The params object passed to the request function&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeload&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before a request to retrieve a data object." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeWrite" Type="ComponentListener">
          <Summary><![CDATA[Fires before a request is generated for one of the actions Ext.data.Api.actions.create|update|destroy]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;proxy&quot;, typeof(DataProxy), &quot;The proxy for the request&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;action&quot;, typeof(string), &quot;[Ext.data.Api.actions.create|update|destroy]&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;rs&quot;, typeof(object), &quot;The Record(s) to create|update|destroy.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;params&quot;, typeof(object), &quot;The request params object. Edit params to add parameters to the request.&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforewrite&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before a request is generated for one of the actions Ext.data.Api.actions.create|update|destroy" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Exception" Type="ComponentListener">
          <Summary><![CDATA[Fires if an exception occurs in the Proxy during a remote request.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;proxy&quot;, typeof(DataProxy), &quot;The proxy for the request&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;type&quot;, typeof(string), &quot;The value of this parameter will be either 'response' or 'remote'.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;action&quot;, typeof(string), &quot;Name of the action (see Ext.data.Api.actions)&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;options&quot;, typeof(object), &quot;The options for the action that were specified in the request.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;response&quot;, typeof(object), &quot;The value of this parameter depends on the value of the type parameter&quot;" />
            <Attribute Type="ListenerArgument" RawValue="5, &quot;arg&quot;, typeof(object), &quot;The type and value of this parameter depends on the value of the type parameter&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;exception&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires if an exception occurs in the Proxy during a remote request." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Load" Type="ComponentListener">
          <Summary><![CDATA[Fires before the load method's callback is called.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;proxy&quot;, typeof(DataProxy), &quot;The proxy for the request&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;o&quot;, typeof(string), &quot;The request transaction object&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;options&quot;, typeof(object), &quot;The callback's options property as passed to the request function&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;load&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the load method's callback is called." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Write" Type="ComponentListener">
          <Summary><![CDATA[Fires before the request-callback is called]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;proxy&quot;, typeof(DataProxy), &quot;The proxy for the request&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;action&quot;, typeof(string), &quot;[Ext.data.Api.actions.create|upate|destroy]&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;data&quot;, typeof(object), &quot;The data object extracted from the server-response&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;response&quot;, typeof(object), &quot;The decoded response from server&quot;" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;rs&quot;, typeof(object), &quot;The Record(s) from Store&quot;" />
            <Attribute Type="ListenerArgument" RawValue="5, &quot;options&quot;, typeof(object), &quot;The callback's options property as passed to the request function&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;write&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the request-callback is called" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="DataReader" Abstract="true" Extends="StateManagedItem">
      <Summary><![CDATA[Abstract base class for reading structured data from a data source and converting it into an object containing RecordField objects and metadata for use by an Store.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" RawValue="Abstract base class for reading structured data from a data source and converting it into an object containing RecordField objects and metadata for use by an Store." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Fields" Type="RecordFieldCollection">
          <Summary><![CDATA[Either a Collection of RecordField definition objects]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.AlwaysArray" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Either a Collection of RecordField definition objects" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EmptyFields" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="ConfigOption" RawValue="&quot;fields&quot;, JsonMode.Raw" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MessageProperty" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="DataView" Extends="DataViewBase" Inherits="IXPostBackDataHandler">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:DataView runat=\&quot;server\&quot;&gt;&lt;/{0}:DataView&gt;&quot;" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(DataView), &quot;Build.ToolboxIcons.DataView.bmp&quot;" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Listeners" Type="DataViewListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="DataViewDirectEvents">
          <Summary><![CDATA[Server-side Ajax Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Server-side Ajax Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SelectedRows" Type="SelectedRowCollection">
          <Attributes>
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="ConfigOption" RawValue="&quot;selectedData&quot;, JsonMode.AlwaysArray" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="DataViewBase" Abstract="true" Extends="BoxComponentBase" Inherits="IStore">
      <Attributes>
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="DeferEmptyText" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to defer emptyText being applied until the store's first load]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. DataView&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to defer emptyText being applied until the store's first load" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EmptyText" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The text to display in the view when there is no data to display (defaults to '').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. DataView&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The text to display in the view when there is no data to display (defaults to '')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ItemSelector" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[This is a required setting. A simple CSS selector (e.g. div.some-class or span:first-child) that will be used to determine what nodes this DataView will be working with.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. DataView&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="This is a required setting. A simple CSS selector (e.g. div.some-class or span:first-child) that will be used to determine what nodes this DataView will be working with." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="LoadingText" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A string to display during data load operations (defaults to undefined). If specified, this text will be displayed in a loading div and the view's contents will be cleared while loading, otherwise the view's contents will continue to display normally until the new data is loaded and the contents are replaced.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. DataView&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="A string to display during data load operations (defaults to undefined). If specified, this text will be displayed in a loading div and the view's contents will be cleared while loading, otherwise the view's contents will continue to display normally until the new data is loaded and the contents are replaced." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MultiSelect" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to allow selection of more than one item at a time, false to allow selection of only a single item at a time or no selection at all, depending on the value of singleSelect (defaults to false).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. DataView&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to allow selection of more than one item at a time, false to allow selection of only a single item at a time or no selection at all, depending on the value of singleSelect (defaults to false)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="OverClass" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A CSS class to apply to each item in the view on mouseover (defaults to undefined).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. DataView&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="A CSS class to apply to each item in the view on mouseover (defaults to undefined)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SelectedClass" Type="string" DefaultValue="&quot;x-view-selected&quot;">
          <Summary><![CDATA[A CSS class to apply to each selected item in the view (defaults to 'x-view-selected').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. DataView&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;x-view-selected&quot;" />
            <Attribute Type="Description" RawValue="A CSS class to apply to each selected item in the view (defaults to 'x-view-selected')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SimpleSelect" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to enable multiselection by clicking on multiple items without requiring the user to hold Shift or Ctrl, false to force the user to hold Ctrl or Shift to select more than on item (defaults to false).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. DataView&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to enable multiselection by clicking on multiple items without requiring the user to hold Shift or Ctrl, false to force the user to hold Ctrl or Shift to select more than on item (defaults to false)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SingleSelect" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to allow selection of exactly one item at a time, false to allow no selection at all (defaults to false). Note that if multiSelect = true, this value will be ignored.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. DataView&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to allow selection of exactly one item at a time, false to allow no selection at all (defaults to false). Note that if multiSelect = true, this value will be ignored." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="StoreID" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The data store to use.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;store&quot;, JsonMode.ToClientID" />
            <Attribute Type="Category" RawValue="&quot;5. DataView&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="IDReferenceProperty" RawValue="typeof(Store)" />
            <Attribute Type="Description" RawValue="The data store to use." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Store" Type="StoreCollection">
          <Summary><![CDATA[The data store to use.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;store&gt;Primary&quot;" />
            <Attribute Type="Category" RawValue="&quot;5. DataView&quot;" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="The data store to use." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Template" Type="XTemplate">
          <Summary><![CDATA[The template string to use to display each item in the dropdown list.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;5. DataView&quot;" />
            <Attribute Type="ConfigOption" RawValue="&quot;tpl&quot;, typeof(LazyControlJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="The template string to use to display each item in the dropdown list." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TrackOver" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to enable mouseenter and mouseleave events]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. DataView&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to enable mouseenter and mouseleave events" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="PrepareData" Type="JFunction" DefaultValue="null">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;5. DataView&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods>
        <Method Name="ClearSelections" ParamsRaw="bool suppressEvent">
          <Summary><![CDATA[Clears all selections.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Clears all selections." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="ClearSelections">
          <Summary><![CDATA[Clears all selections.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Clears all selections." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Deselect" ParamsRaw="int index">
          <Summary><![CDATA[Deselects a node.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Deselects a node." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Refresh">
          <Summary><![CDATA[Refreshes the view by reloading the data from the store and re-rendering the template.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Refreshes the view by reloading the data from the store and re-rendering the template." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="RefreshNode" ParamsRaw="int index">
          <Summary><![CDATA[Refreshes an individual node's data from the store.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Refreshes an individual node's data from the store." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Select" ParamsRaw="int[] indexes, bool keepExisting, bool suppressEvent">
          <Summary><![CDATA[Selects a set of nodes.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Selects a set of nodes." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Select" ParamsRaw="int[] indexes">
          <Summary><![CDATA[Selects a set of nodes.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Selects a set of nodes." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SelectRange" ParamsRaw="int start, int end, bool keepExisting">
          <Summary><![CDATA[Selects a range of nodes. All nodes between start and end are selected.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Selects a range of nodes. All nodes between start and end are selected." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SelectRange" ParamsRaw="int start, int end">
          <Summary><![CDATA[Selects a range of nodes. All nodes between start and end are selected.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Selects a range of nodes. All nodes between start and end are selected." />
          </Attributes>
          <Parameters />
        </Method>
      </Methods>
    </Class>
    <Class Name="DataViewDirectEvents" Extends="ContainerDirectEvents">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="BeforeClick" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before a click is processed. Returns false to cancel the default action.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;index&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;node&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeclick&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before a click is processed. Returns false to cancel the default action." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeSelect" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before a selection is made. If any handlers return false, the selection is cancelled.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;node&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;selections&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeselect&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before a selection is made. If any handlers return false, the selection is cancelled." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Click" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when a template node is clicked.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;index&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;node&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;click&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a template node is clicked." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ContainerClick" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when a click occurs and it is not on a template node.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;containerclick&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a click occurs and it is not on a template node." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ContextMenu" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when a template node is right clicked.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;index&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;node&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;contextmenu&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a template node is right clicked." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ContainerContextMenu" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when a right click occurs that is not on a template node.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;containercontextmenu&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a right click occurs that is not on a template node." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DblClick" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when a template node is double clicked.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;index&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;node&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;dblclick&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a template node is double clicked." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MouseEnter" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when the mouse enters a template node. trackOver:true or an overCls must be set to enable this event.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;index&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;node&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;mouseenter&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the mouse enters a template node. trackOver:true or an overCls must be set to enable this event." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MouseLeave" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when the mouse leaves a template node. trackOver:true or an overCls must be set to enable this event.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;index&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;node&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;mouseleave&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the mouse leaves a template node. trackOver:true or an overCls must be set to enable this event." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SelectionChange" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when the selected nodes change.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;selections&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;selectionchange&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the selected nodes change." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="DataViewListeners" Extends="BoxComponentListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="BeforeClick" Type="ComponentListener">
          <Summary><![CDATA[Fires before a click is processed. Returns false to cancel the default action.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;index&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;node&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeclick&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before a click is processed. Returns false to cancel the default action." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeSelect" Type="ComponentListener">
          <Summary><![CDATA[Fires before a selection is made. If any handlers return false, the selection is cancelled.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;node&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;selections&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeselect&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before a selection is made. If any handlers return false, the selection is cancelled." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Click" Type="ComponentListener">
          <Summary><![CDATA[Fires when a template node is clicked.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;index&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;node&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;click&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a template node is clicked." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ContainerClick" Type="ComponentListener">
          <Summary><![CDATA[Fires when a click occurs and it is not on a template node.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;containerclick&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a click occurs and it is not on a template node." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ContextMenu" Type="ComponentListener">
          <Summary><![CDATA[Fires when a template node is right clicked.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;index&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;node&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;contextmenu&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a template node is right clicked." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ContainerContextMenu" Type="ComponentListener">
          <Summary><![CDATA[Fires when a right click occurs that is not on a template node.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;containercontextmenu&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a right click occurs that is not on a template node." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DblClick" Type="ComponentListener">
          <Summary><![CDATA[Fires when a template node is double clicked.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;index&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;node&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;dblclick&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a template node is double clicked." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MouseEnter" Type="ComponentListener">
          <Summary><![CDATA[Fires when the mouse enters a template node. trackOver:true or an overCls must be set to enable this event.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;index&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;node&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;mouseenter&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the mouse enters a template node. trackOver:true or an overCls must be set to enable this event." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MouseLeave" Type="ComponentListener">
          <Summary><![CDATA[Fires when the mouse leaves a template node. trackOver:true or an overCls must be set to enable this event.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;index&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;node&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;mouseleave&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the mouse leaves a template node. trackOver:true or an overCls must be set to enable this event." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SelectionChange" Type="ComponentListener">
          <Summary><![CDATA[Fires when the selected nodes change.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DataView), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;selections&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;selectionchange&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the selected nodes change." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="DateColumn" Extends="Column">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="XType" Modifier="Override" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;xtype&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Format" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A formatting string as used by Date.format to format a Date for this Column.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;3. DateColumn&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="A formatting string as used by Date.format to format a Date for this Column." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="FormatProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;format&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="DateField" Extends="TriggerFieldBase" Inherits="IDate">
      <Summary><![CDATA[Provides a date input field with a DatePicker dropdown and automatic date validation.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:DateField runat=\&quot;server\&quot; /&gt;&quot;" />
        <Attribute Type="DefaultProperty" RawValue="&quot;SelectedDate&quot;" />
        <Attribute Type="DefaultEvent" RawValue="&quot;SelectionChanged&quot;" />
        <Attribute Type="ValidationProperty" RawValue="&quot;SelectedDate&quot;" />
        <Attribute Type="ControlValueProperty" RawValue="&quot;SelectedDate&quot;" />
        <Attribute Type="ParseChildren" RawValue="true" />
        <Attribute Type="PersistChildren" RawValue="false" />
        <Attribute Type="SupportsEventValidation" />
        <Attribute Type="Designer" RawValue="typeof(DateFieldDesigner)" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(DateField), &quot;Build.ToolboxIcons.DateField.bmp&quot;" />
        <Attribute Type="Description" RawValue="Provides a date input field with a DatePicker dropdown and automatic date validation." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="SelectedDate" Type="DateTime" DefaultValue="typeof(DateTime), &quot;0001-01-01&quot;">
          <Summary><![CDATA[Gets or sets the current selected date of the DatePicker. Accepts and returns a DateTime object.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;8. DateField&quot;" />
            <Attribute Type="DefaultValue" RawValue="typeof(DateTime), &quot;0001-01-01&quot;" />
            <Attribute Type="Bindable" RawValue="true, BindingDirection.TwoWay" />
            <Attribute Type="Description" RawValue="Gets or sets the current selected date of the DatePicker. Accepts and returns a DateTime object." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SelectedValue" Type="object" DefaultValue="null">
          <Summary><![CDATA[Gets or sets the current selected date of the DatePicker.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;8. DateField&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Bindable" RawValue="true, BindingDirection.TwoWay" />
            <Attribute Type="Description" RawValue="Gets or sets the current selected date of the DatePicker." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ValueProxy" Modifier="Override" Access="ProtectedInternal" Type="object">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;value&quot;, typeof(CtorDateTimeJsonConverter)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EmptyValue" Modifier="Override" Type="object">
          <Summary><![CDATA[The fields null value.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="Description" RawValue="The fields null value." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Listeners" Type="DateFieldListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="DateFieldDirectEvents">
          <Summary><![CDATA[Server-side Ajax Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Server-side Ajax Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AltFormats" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[Multiple date formats separated by \" | \" to try when parsing a user input value and it doesn't match the defined format ('MM/dd/yyyy|MM-dd-yy|MM-dd-yyyy|MM/dd|MM-dd|dd').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;8. DateField&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="Multiple date formats separated by \&quot; | \&quot; to try when parsing a user input value and it doesn't match the defined format ('MM/dd/yyyy|MM-dd-yy|MM-dd-yyyy|MM/dd|MM-dd|dd')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AltFormatsProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;altFormats&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DisabledDates" Type="DisabledDateCollection">
          <Summary><![CDATA[An array of \"dates\" to disable, as strings. These strings will be used to build a dynamic regular expression so they are very powerful.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;8. DateField&quot;" />
            <Attribute Type="Description" RawValue="An array of \&quot;dates\&quot; to disable, as strings. These strings will be used to build a dynamic regular expression so they are very powerful." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DisabledDatesProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;disabledDates&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DisabledDatesText" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The tooltip text to display when the date falls on a disabled date (defaults to 'Disabled').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Category" RawValue="&quot;8. DateField&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The tooltip text to display when the date falls on a disabled date (defaults to 'Disabled')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DisabledDays" Type="int[]" DefaultValue="null">
          <Summary><![CDATA[An array of days to disable, 0 based. For example, [0, 6] disables Sunday and Saturday (defaults to null).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="typeof(IntArrayJsonConverter)" />
            <Attribute Type="TypeConverter" RawValue="typeof(IntArrayConverter)" />
            <Attribute Type="Category" RawValue="&quot;8. DateField&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="An array of days to disable, 0 based. For example, [0, 6] disables Sunday and Saturday (defaults to null)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DisabledDaysText" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The tooltip to display when the date falls on a disabled day (defaults to 'Disabled').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;8. DateField&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The tooltip to display when the date falls on a disabled day (defaults to 'Disabled')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Format" Type="string" DefaultValue="&quot;d&quot;">
          <Summary><![CDATA[The default date format string which can be overriden for localization support. The format must be valid according to Date.parseDate (defaults to 'd').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;8. DateField&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;d&quot;" />
            <Attribute Type="Description" RawValue="The default date format string which can be overriden for localization support. The format must be valid according to Date.parseDate (defaults to 'd')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="FormatProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;format&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MaxText" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The error text to display when the date in the cell is after MaxValue (defaults to 'The date in this field must be before {MaxValue}').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;8. DateField&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Description" RawValue="The error text to display when the date in the cell is after MaxValue (defaults to 'The date in this field must be before {MaxValue}')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MaxDate" Type="DateTime" DefaultValue="typeof(DateTime), &quot;9999-12-31&quot;">
          <Summary><![CDATA[The maximum allowed date.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetMaxDate&quot;" />
            <Attribute Type="ConfigOption" RawValue="&quot;maxValue&quot;, typeof(CtorDateTimeJsonConverter)" />
            <Attribute Type="DefaultValue" RawValue="typeof(DateTime), &quot;9999-12-31&quot;" />
            <Attribute Type="Category" RawValue="&quot;8. DateField&quot;" />
            <Attribute Type="Bindable" RawValue="true" />
            <Attribute Type="Description" RawValue="The maximum allowed date." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MinText" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The error text to display when the date in the cell is before MinValue (defaults to 'The date in this field must be after {MinValue}').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;8. DateField&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Description" RawValue="The error text to display when the date in the cell is before MinValue (defaults to 'The date in this field must be after {MinValue}')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MinDate" Type="DateTime" DefaultValue="typeof(DateTime), &quot;0001-01-01&quot;">
          <Summary><![CDATA[The minimum allowed date.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetMinDate&quot;" />
            <Attribute Type="ConfigOption" RawValue="&quot;minValue&quot;, typeof(CtorDateTimeJsonConverter)" />
            <Attribute Type="DefaultValue" RawValue="typeof(DateTime), &quot;0001-01-01&quot;" />
            <Attribute Type="Category" RawValue="&quot;8. DateField&quot;" />
            <Attribute Type="Bindable" RawValue="true" />
            <Attribute Type="Description" RawValue="The minimum allowed date." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ShowToday" Type="bool" DefaultValue="true">
          <Summary><![CDATA[False to hide the footer area of the DatePicker containing the Today button and disable the keyboard handler for spacebar that selects the current date (defaults to true).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;8. DateField&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="False to hide the footer area of the DatePicker containing the Today button and disable the keyboard handler for spacebar that selects the current date (defaults to true)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CancelText" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The text to display on the cancel button.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="UrlProperty" />
            <Attribute Type="Category" RawValue="&quot;8. DateField&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Description" RawValue="The text to display on the cancel button." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DayNames" Type="string[]" DefaultValue="null">
          <Summary><![CDATA[An array of textual day names which can be overriden for localization support (defaults to Date.dayNames).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="typeof(StringArrayJsonConverter)" />
            <Attribute Type="TypeConverter" RawValue="typeof(StringArrayConverter)" />
            <Attribute Type="Category" RawValue="&quot;Behavior&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="An array of textual day names which can be overriden for localization support (defaults to Date.dayNames)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MonthNames" Type="string[]" DefaultValue="null">
          <Summary><![CDATA[An array of textual month names which can be overriden for localization support (defaults to Date.monthNames).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="typeof(StringArrayJsonConverter)" />
            <Attribute Type="TypeConverter" RawValue="typeof(StringArrayConverter)" />
            <Attribute Type="Category" RawValue="&quot;Behavior&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="An array of textual month names which can be overriden for localization support (defaults to Date.monthNames)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MonthYearText" Type="string" DefaultValue="&quot;Choose a month (Control+Up/Down to move years)&quot;">
          <Summary><![CDATA[The header month selector tooltip (defaults to 'Choose a month (Control+Up/Down to move years)').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;8. DateField&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;Choose a month (Control+Up/Down to move years)&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Description" RawValue="The header month selector tooltip (defaults to 'Choose a month (Control+Up/Down to move years)')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="NextText" Type="string" DefaultValue="&quot;Next Month (Control+Right)&quot;">
          <Summary><![CDATA[The next month navigation button tooltip (defaults to 'Next Month (Control+Right)').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;8. DateField&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;Next Month (Control+Right)&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Description" RawValue="The next month navigation button tooltip (defaults to 'Next Month (Control+Right)')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="OkText" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The text to display on the ok button.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;8. DateField&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Description" RawValue="The text to display on the ok button." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="PrevText" Type="string" DefaultValue="&quot;Previous Month (Control+Left)&quot;">
          <Summary><![CDATA[The previous month navigation button tooltip (defaults to 'Previous Month (Control+Left)').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;8. DateField&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;Previous Month (Control+Left)&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Description" RawValue="The previous month navigation button tooltip (defaults to 'Previous Month (Control+Left)')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="StartDay" Type="int" DefaultValue="0">
          <Summary><![CDATA[Day index at which the week should begin, 0-based (defaults to 0, which is Sunday).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;8. DateField&quot;" />
            <Attribute Type="DefaultValue" RawValue="0" />
            <Attribute Type="Description" RawValue="Day index at which the week should begin, 0-based (defaults to 0, which is Sunday)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TodayText" Type="string" DefaultValue="&quot;Today&quot;">
          <Summary><![CDATA[The text to display on the button that selects the current date (defaults to 'Today').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;8. DateField&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;Today&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Description" RawValue="The text to display on the button that selects the current date (defaults to 'Today')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TodayTip" Type="string" DefaultValue="&quot;{current date} (Spacebar)&quot;">
          <Summary><![CDATA[The tooltip to display for the button that selects the current date (defaults to '{current date} (Spacebar)').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;8. DateField&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;{current date} (Spacebar)&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Description" RawValue="The tooltip to display for the button that selects the current date (defaults to '{current date} (Spacebar)')." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="DateFieldDirectEvents" Extends="TriggerFieldDirectEvents">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Select" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when a date is selected via the date picker.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Field), &quot;This date field&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;date&quot;, typeof(DateTime), &quot;The date that was selected&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;select&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a date is selected via the date picker." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="DateFieldListeners" Extends="TriggerFieldListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Select" Type="ComponentListener">
          <Summary><![CDATA[Fires when a date is selected via the date picker.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Field), &quot;This date field&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;date&quot;, typeof(DateTime), &quot;The date that was selected&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;select&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a date is selected via the date picker." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="DateFilter" Extends="GridFilter">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Type" Modifier="Override" Type="FilterType">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="Category" RawValue="&quot;3. DateFilter&quot;" />
            <Attribute Type="Browsable" RawValue="false" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Hidden" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeText" Type="string" DefaultValue="&quot;Before&quot;">
          <Summary><![CDATA[The text displayed for the 'Before' menu item]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. DateFilter&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;Before&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The text displayed for the 'Before' menu item" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AfterText" Type="string" DefaultValue="&quot;After&quot;">
          <Summary><![CDATA[The text displayed for the 'After' menu item]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. DateFilter&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;After&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The text displayed for the 'After' menu item" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="OnText" Type="string" DefaultValue="&quot;On&quot;">
          <Summary><![CDATA[The text displayed for the 'On' menu item]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. DateFilter&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;On&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The text displayed for the 'On' menu item" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Format" Type="string" DefaultValue="&quot;d&quot;">
          <Summary><![CDATA[The default date format string which can be overriden for localization support. The format must be valid according to Date.parseDate (defaults to 'd').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;8. DateField&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;d&quot;" />
            <Attribute Type="Description" RawValue="The default date format string which can be overriden for localization support. The format must be valid according to Date.parseDate (defaults to 'd')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="FormatProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;dateFormat&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DatePickerOptions" Type="DatePickerOptions">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;pickerOpts&quot;, JsonMode.Object" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ValueProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;value&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="DateMenu" Extends="MenuBase">
      <Summary><![CDATA[A menu containing a Ext.menu.DateItem component (which provides a date picker).]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="Description" RawValue="A menu containing a Ext.menu.DateItem component (which provides a date picker)." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="HideOnClick" Type="bool" DefaultValue="true">
          <Summary><![CDATA[False to continue showing the menu after a date is selected, defaults to true.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. DateMenu&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="False to continue showing the menu after a date is selected, defaults to true." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Picker" Type="DatePicker">
          <Summary><![CDATA[The Ext.DatePicker object]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;picker&quot;, typeof(LazyControlJsonConverter)" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="The Ext.DatePicker object" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Listeners" Type="DateMenuListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="DateMenuDirectEvents">
          <Summary><![CDATA[Server-side DirectEventHandlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Server-side DirectEventHandlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="DateMenuDirectEvents" Extends="MenuDirectEvents">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Select" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DatePicker), &quot;picker&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;date&quot;, typeof(object), &quot;Date&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;select&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="DateMenuListeners" Extends="MenuListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Select" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DatePicker), &quot;picker&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;date&quot;, typeof(object), &quot;Date&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;select&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="DatePicker" Extends="Component" Inherits="IDate,IAutoPostBack,IXPostBackDataHandler,IPostBackEventHandler,IField">
      <Summary><![CDATA[Simple DatePicker class.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:DatePicker runat=\&quot;server\&quot; /&gt;&quot;" />
        <Attribute Type="DefaultProperty" RawValue="&quot;SelectedDate&quot;" />
        <Attribute Type="DefaultEvent" RawValue="&quot;SelectionChanged&quot;" />
        <Attribute Type="ValidationProperty" RawValue="&quot;SelectedDate&quot;" />
        <Attribute Type="ControlValueProperty" RawValue="&quot;SelectedDate&quot;" />
        <Attribute Type="ParseChildren" RawValue="true" />
        <Attribute Type="PersistChildren" RawValue="false" />
        <Attribute Type="SupportsEventValidation" />
        <Attribute Type="Designer" RawValue="typeof(DatePickerDesigner)" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(DatePicker), &quot;Build.ToolboxIcons.DatePicker.bmp&quot;" />
        <Attribute Type="Description" RawValue="Simple DatePicker class." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="DataIndex" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[(optional) The name of the field in the grid's Ext.data.Store's Ext.data.Record definition from which to draw the column's value.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="(optional) The name of the field in the grid's Ext.data.Store's Ext.data.Record definition from which to draw the column's value." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HideWithLabel" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to hide the label when the field hide]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="True to hide the label when the field hide" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ReadOnly" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to mark the field as readOnly in HTML (defaults to false) -- Note: this only sets the element's readOnly DOM attribute.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetReadOnly&quot;" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="Bindable" RawValue="true" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to mark the field as readOnly in HTML (defaults to false) -- Note: this only sets the element's readOnly DOM attribute." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Note" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The note.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The note." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="NoteCls" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The note css class.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The note css class." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="NoteAlign" Type="NoteAlign" DefaultValue="NoteAlign.Down">
          <Summary><![CDATA[Note align]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="DefaultValue" RawValue="NoteAlign.Down" />
            <Attribute Type="Description" RawValue="Note align" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Value" Type="object" DefaultValue="null">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="typeof(CtorDateTimeJsonConverter)" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetValueProxy&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Browsable" RawValue="false" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Hidden" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EmptyValue" Type="object">
          <Summary><![CDATA[The fields null value.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="Description" RawValue="The fields null value." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AutoPostBack" Type="bool" DefaultValue="false">
          <Summary><![CDATA[AutoPostBack]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;Behavior&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="AutoPostBack" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CausesValidation" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Gets or sets a value indicating whether validation is performed when the control is set to validate when a postback occurs.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;Behavior&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="Gets or sets a value indicating whether validation is performed when the control is set to validate when a postback occurs." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ValidationGroup" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[Gets or Sets the Controls ValidationGroup]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;Behavior&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="Gets or Sets the Controls ValidationGroup" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SelectedDate" Type="DateTime" DefaultValue="typeof(DateTime), &quot;0001-01-01&quot;">
          <Summary><![CDATA[Gets or sets the current selected date of the DatePicker. Accepts and returns a DateTime object.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;4. DatePicker&quot;" />
            <Attribute Type="DefaultValue" RawValue="typeof(DateTime), &quot;0001-01-01&quot;" />
            <Attribute Type="Bindable" RawValue="true, BindingDirection.TwoWay" />
            <Attribute Type="Description" RawValue="Gets or sets the current selected date of the DatePicker. Accepts and returns a DateTime object." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SelectedValue" Type="object">
          <Summary><![CDATA[Gets or sets the current selected date of the DatePicker.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;4. DatePicker&quot;" />
            <Attribute Type="Bindable" RawValue="true, BindingDirection.TwoWay" />
            <Attribute Type="Description" RawValue="Gets or sets the current selected date of the DatePicker." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CancelText" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The text to display on the cancel button.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="UrlProperty" />
            <Attribute Type="Category" RawValue="&quot;4. DatePicker&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Description" RawValue="The text to display on the cancel button." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DisabledDates" Type="DisabledDateCollection">
          <Summary><![CDATA[An array of \"dates\" to disable, as strings. These strings will be used to build a dynamic regular expression so they are very powerful.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;4. DatePicker&quot;" />
            <Attribute Type="Description" RawValue="An array of \&quot;dates\&quot; to disable, as strings. These strings will be used to build a dynamic regular expression so they are very powerful." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DisabledDatesProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;disabledDates&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DayNames" Type="string[]" DefaultValue="null">
          <Summary><![CDATA[An array of textual day names which can be overriden for localization support (defaults to Date.dayNames).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="typeof(StringArrayJsonConverter)" />
            <Attribute Type="TypeConverter" RawValue="typeof(StringArrayConverter)" />
            <Attribute Type="Category" RawValue="&quot;4. DatePicker&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="An array of textual day names which can be overriden for localization support (defaults to Date.dayNames)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DisabledDatesRE" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[JavaScript regular expression used to disable a pattern of dates (defaults to null).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="typeof(RegexJsonConverter)" />
            <Attribute Type="Category" RawValue="&quot;4. DatePicker&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Editor" RawValue="&quot;System.Web.UI.Design.WebControls.RegexTypeEditor&quot;, typeof(UITypeEditor)" />
            <Attribute Type="Description" RawValue="JavaScript regular expression used to disable a pattern of dates (defaults to null)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DisabledDays" Type="int[]" DefaultValue="null">
          <Summary><![CDATA[An array of days to disable, 0-based. For example, [0, 6] disables Sunday and Saturday (defaults to null).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="typeof(IntArrayJsonConverter)" />
            <Attribute Type="TypeConverter" RawValue="typeof(IntArrayConverter)" />
            <Attribute Type="Category" RawValue="&quot;4. DatePicker&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="An array of days to disable, 0-based. For example, [0, 6] disables Sunday and Saturday (defaults to null)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DisabledDaysText" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The tooltip to display when the date falls on a disabled day (defaults to '').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. DatePicker&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Description" RawValue="The tooltip to display when the date falls on a disabled day (defaults to '')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Format" Type="string" DefaultValue="&quot;d&quot;">
          <Summary><![CDATA[The default date format string which can be overriden for localization support. The format must be valid according to Date.parseDate (defaults to 'm/d/y').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;4. DatePicker&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;d&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Description" RawValue="The default date format string which can be overriden for localization support. The format must be valid according to Date.parseDate (defaults to 'm/d/y')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="FormatProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;format&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MaxDate" Type="DateTime" DefaultValue="typeof(DateTime), &quot;9999-12-31&quot;">
          <Summary><![CDATA[The maximum allowed date.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="typeof(CtorDateTimeJsonConverter)" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetMaxDate&quot;" />
            <Attribute Type="Category" RawValue="&quot;4. DatePicker&quot;" />
            <Attribute Type="DefaultValue" RawValue="typeof(DateTime), &quot;9999-12-31&quot;" />
            <Attribute Type="Bindable" RawValue="true" />
            <Attribute Type="Description" RawValue="The maximum allowed date." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MaxText" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The error text to display when the date in the cell is after MaxValue (defaults to 'The date in this field must be before {MaxValue}').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. DatePicker&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Description" RawValue="The error text to display when the date in the cell is after MaxValue (defaults to 'The date in this field must be before {MaxValue}')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MinDate" Type="DateTime" DefaultValue="typeof(DateTime), &quot;0001-01-01&quot;">
          <Summary><![CDATA[The minimum allowed date.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="typeof(CtorDateTimeJsonConverter)" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetMinDate&quot;" />
            <Attribute Type="DefaultValue" RawValue="typeof(DateTime), &quot;0001-01-01&quot;" />
            <Attribute Type="Category" RawValue="&quot;4. DatePicker&quot;" />
            <Attribute Type="Bindable" RawValue="true" />
            <Attribute Type="Description" RawValue="The minimum allowed date." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MinText" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The error text to display when the date in the cell is before MinValue (defaults to 'The date in this field must be after {MinValue}').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. DatePicker&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Description" RawValue="The error text to display when the date in the cell is before MinValue (defaults to 'The date in this field must be after {MinValue}')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MonthNames" Type="string[]" DefaultValue="null">
          <Summary><![CDATA[An array of textual month names which can be overriden for localization support (defaults to Date.monthNames).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="typeof(StringArrayJsonConverter)" />
            <Attribute Type="TypeConverter" RawValue="typeof(StringArrayConverter)" />
            <Attribute Type="Category" RawValue="&quot;4. DatePicker&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="An array of textual month names which can be overriden for localization support (defaults to Date.monthNames)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MonthYearText" Type="string" DefaultValue="&quot;Choose a month (Control+Up/Down to move years)&quot;">
          <Summary><![CDATA[The header month selector tooltip (defaults to 'Choose a month (Control+Up/Down to move years)').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. DatePicker&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;Choose a month (Control+Up/Down to move years)&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Description" RawValue="The header month selector tooltip (defaults to 'Choose a month (Control+Up/Down to move years)')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="NextText" Type="string" DefaultValue="&quot;Next Month (Control+Right)&quot;">
          <Summary><![CDATA[The next month navigation button tooltip (defaults to 'Next Month (Control+Right)').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. DatePicker&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;Next Month (Control+Right)&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Description" RawValue="The next month navigation button tooltip (defaults to 'Next Month (Control+Right)')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="OkText" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The text to display on the ok button.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. DatePicker&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Description" RawValue="The text to display on the ok button." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="PrevText" Type="string" DefaultValue="&quot;Previous Month (Control+Left)&quot;">
          <Summary><![CDATA[The previous month navigation button tooltip (defaults to 'Previous Month (Control+Left)').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. DatePicker&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;Previous Month (Control+Left)&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Description" RawValue="The previous month navigation button tooltip (defaults to 'Previous Month (Control+Left)')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ShowToday" Type="bool" DefaultValue="true">
          <Summary><![CDATA[False to hide the footer area containing the Today button and disable the keyboard handler for spacebar that selects the current date (defaults to true).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. DatePicker&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="False to hide the footer area containing the Today button and disable the keyboard handler for spacebar that selects the current date (defaults to true)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="StartDay" Type="int" DefaultValue="0">
          <Summary><![CDATA[Day index at which the week should begin, 0-based (defaults to 0, which is Sunday).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. DatePicker&quot;" />
            <Attribute Type="DefaultValue" RawValue="0" />
            <Attribute Type="Description" RawValue="Day index at which the week should begin, 0-based (defaults to 0, which is Sunday)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TodayText" Type="string" DefaultValue="&quot;Today&quot;">
          <Summary><![CDATA[The text to display on the button that selects the current date (defaults to 'Today').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. DatePicker&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;Today&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Description" RawValue="The text to display on the button that selects the current date (defaults to 'Today')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TodayTip" Type="string" DefaultValue="&quot;{current date} (Spacebar)&quot;">
          <Summary><![CDATA[The tooltip to display for the button that selects the current date (defaults to '{current date} (Spacebar)').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. DatePicker&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;{current date} (Spacebar)&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Description" RawValue="The tooltip to display for the button that selects the current date (defaults to '{current date} (Spacebar)')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Listeners" Type="DatePickerListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="DatePickerDirectEvents">
          <Summary><![CDATA[Server-side Ajax Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Server-side Ajax Event Handlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods>
        <Method Name="Clear">
          <Summary><![CDATA[Clear the value of this field.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Clear the value of this field." />
          </Attributes>
          <Parameters />
        </Method>
      </Methods>
    </Class>
    <Class Name="DatePickerDirectEvents" Extends="ComponentBaseDirectEvents">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Select" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when a date is selected.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DatePicker), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;date&quot;, typeof(DateTime), &quot;The selected date&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;select&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a date is selected." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="DatePickerListeners" Extends="ComponentBaseListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Select" Type="ComponentListener">
          <Summary><![CDATA[Fires when a date is selected.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(DatePicker), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;date&quot;, typeof(DateTime), &quot;The selected date&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;select&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a date is selected." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="DatePickerOptions" Extends="DatePicker">
      <Attributes>
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="ApplyTo" Modifier="Override" Type="string">
          <Attributes>
            <Attribute Type="Browsable" RawValue="false" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Hidden" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Ignore" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ConfigIDProxy" Modifier="Override" Access="Protected" Type="string">
          <Attributes>
            <Attribute Type="Browsable" RawValue="false" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Hidden" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Ignore" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ID" Modifier="Override" Type="string">
          <Attributes>
            <Attribute Type="Browsable" RawValue="false" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Hidden" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Ignore" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RenderTo" Modifier="Override" Type="string">
          <Attributes>
            <Attribute Type="Browsable" RawValue="false" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Hidden" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Ignore" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RenderToProxy" Modifier="Override" Access="ProtectedInternal" Type="string">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Ignore" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="DayView" Extends="ContainerBase">
      <Attributes>
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(DayView), &quot;Build.ToolboxIcons.CalendarPanel.bmp&quot;" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="DayCount" Type="int" DefaultValue="1">
          <Summary><![CDATA[The number of days to display in the view (defaults to 1)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. DayView&quot;" />
            <Attribute Type="DefaultValue" RawValue="1" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The number of days to display in the view (defaults to 1)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DDCreateEventText" Type="string" DefaultValue="&quot;Create event for {0}&quot;">
          <Summary><![CDATA[The text to display inside the drag proxy while dragging over the calendar to create a new event (defaults to 'Create event for {0}' where {0} is a date range supplied by the view)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;ddCreateEventText&quot;" />
            <Attribute Type="Category" RawValue="&quot;6. DayView&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;Create event for {0}&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The text to display inside the drag proxy while dragging over the calendar to create a new event (defaults to 'Create event for {0}' where {0} is a date range supplied by the view)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DDMoveEventText" Type="string" DefaultValue="&quot;Move event to {0}&quot;">
          <Summary><![CDATA[The text to display inside the drag proxy while dragging an event to reposition it (defaults to 'Move event to {0}' where {0} is the updated event start date/time supplied by the view)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;ddMoveEventText&quot;" />
            <Attribute Type="Category" RawValue="&quot;6. DayView&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;Move event to {0}&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The text to display inside the drag proxy while dragging an event to reposition it (defaults to 'Move event to {0}' where {0} is the updated event start date/time supplied by the view)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ShowTime" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to display the current time in today's box in the calendar, false to not display it (defautls to true)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. DayView&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to display the current time in today's box in the calendar, false to not display it (defautls to true)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ShowTodayText" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to display the todayText string in today's box in the calendar, false to not display it (defautls to true)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. DayView&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to display the todayText string in today's box in the calendar, false to not display it (defautls to true)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TodayText" Type="string" DefaultValue="&quot;Today&quot;">
          <Summary><![CDATA[The text to display in the current day's box in the calendar when showTodayText is true (defaults to 'Today')]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. DayView&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;Today&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The text to display in the current day's box in the calendar when showTodayText is true (defaults to 'Today')" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="DD" Extends="DragDrop">
      <Summary><![CDATA[A DragDrop implementation where the linked element follows the mouse cursor during a drag.]]></Summary>
      <Attributes>
        <Attribute Type="ToolboxItem" RawValue="true" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:DD runat=\&quot;server\&quot;&gt;&lt;/{0}:DD&gt;&quot;" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(DD), &quot;Build.ToolboxIcons.DragDrop.bmp&quot;" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="Description" RawValue="A DragDrop implementation where the linked element follows the mouse cursor during a drag." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Scroll" Type="bool" DefaultValue="true">
          <Summary><![CDATA[When set to true, the utility automatically tries to scroll the browser window when a drag and drop element is dragged near the viewport boundary. Defaults to true.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. DD&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="When set to true, the utility automatically tries to scroll the browser window when a drag and drop element is dragged near the viewport boundary. Defaults to true." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="DDProxy" Extends="DD">
      <Summary><![CDATA[A DragDrop implementation that inserts an empty, bordered div into the document that follows the cursor during drag operations. At the time of the click, the frame div is resized to the dimensions of the linked html element, and moved to the exact location of the linked element.]]></Summary>
      <Attributes>
        <Attribute Type="ToolboxItem" RawValue="true" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:DDProxy runat=\&quot;server\&quot;&gt;&lt;/{0}:DDProxy&gt;&quot;" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(DDProxy), &quot;Build.ToolboxIcons.DragDrop.bmp&quot;" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="Description" RawValue="A DragDrop implementation that inserts an empty, bordered div into the document that follows the cursor during drag operations. At the time of the click, the frame div is resized to the dimensions of the linked html element, and moved to the exact location of the linked element." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="CenterFrame" Type="bool" DefaultValue="false">
          <Summary><![CDATA[By default the frame is positioned exactly where the drag element is, so we use the cursor offset provided by Ext.dd.DD. Another option that works only if you do not have constraints on the obj is to have the drag frame centered around the cursor. Set centerFrame to true for this effect.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. DDProxy&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="By default the frame is positioned exactly where the drag element is, so we use the cursor offset provided by Ext.dd.DD. Another option that works only if you do not have constraints on the obj is to have the drag frame centered around the cursor. Set centerFrame to true for this effect." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ResizeFrame" Type="bool" DefaultValue="true">
          <Summary><![CDATA[By default we resize the drag frame to be the same size as the element we want to drag (this is to get the frame effect). We can turn it off if we want a different behavior.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. DDProxy&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="By default we resize the drag frame to be the same size as the element we want to drag (this is to get the frame effect). We can turn it off if we want a different behavior." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AfterDrag" Type="JFunction" DefaultValue="null">
          <Summary><![CDATA[Abstract method runs on drag end]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;5. DDProxy&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="Abstract method runs on drag end" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="DDTarget" Abstract="true" Extends="DragDrop">
      <Attributes />
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="Debug" Extends="ScriptClass">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="DebugDescriptor">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="DefaultScriptBuilder" Extends="BaseScriptBuilder">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="DefaultSelectionModel" Extends="AbstractTreeSelectionModel">
      <Summary><![CDATA[The default single selection for a TreePanel.]]></Summary>
      <Attributes>
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="Description" RawValue="The default single selection for a TreePanel." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Listeners" Type="DefaultSelectionModelListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="DefaultSelectionModelDirectEvents">
          <Summary><![CDATA[Server-side DirectEventHandlers]]></Summary>
          <Attributes>
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Server-side DirectEventHandlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="DefaultSelectionModelDirectEvents" Extends="ComponentDirectEvents">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="BeforeSelect" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before the selected node changes, return false to cancel the change]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;el&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;newNode&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;oldNode&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeselect&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the selected node changes, return false to cancel the change" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SelectionChange" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when the selected node changes]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;el&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;node&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;selectionchange&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the selected node changes" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="DefaultSelectionModelListeners" Extends="ComponentListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="BeforeSelect" Type="ComponentListener">
          <Summary><![CDATA[Fires before the selected node changes, return false to cancel the change]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;el&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;newNode&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;oldNode&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeselect&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the selected node changes, return false to cancel the change" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SelectionChange" Type="ComponentListener">
          <Summary><![CDATA[Fires when the selected node changes]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;el&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;node&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;selectionchange&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the selected node changes" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="DefaultTypeConverter" Extends="StringConverter">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="DeferredRenderAttribute" Extends="System">
      <Attributes>
        <Attribute Type="AttributeUsage" RawValue="AttributeTargets.Property, AllowMultiple = false" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="Desktop" Extends="Component">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(Desktop), &quot;Build.ToolboxIcons.Desktop.bmp&quot;" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:Desktop runat=\&quot;server\&quot;&gt;&lt;/{0}:Desktop&gt;&quot;" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="RenderToProxy" Modifier="Override" Access="ProtectedInternal" Type="string">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Ignore" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Modules" Type="DesktopModulesCollection">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ModulesProxy" Access="Protected" Type="string">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;getModules&quot;, JsonMode.Raw" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="StartMenuProxy" Access="Protected" Type="string">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;getStartConfig&quot;, JsonMode.Raw" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="StartButtonProxy" Access="Protected" Type="string">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;getStartButtonConfig&quot;, JsonMode.Raw" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Shortcuts" Type="DesktopShortcuts">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="XTickSize" Type="int" DefaultValue="1">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. Desktop&quot;" />
            <Attribute Type="DefaultValue" RawValue="1" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="YTickSize" Type="int" DefaultValue="1">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. Desktop&quot;" />
            <Attribute Type="DefaultValue" RawValue="1" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BackgroundColor" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. Desktop&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetBackgroundColor&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ShortcutTextColor" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. Desktop&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetShortcutTextColor&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Wallpaper" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. Desktop&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetWallpaper&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TextLengthToTruncate" Type="int" DefaultValue="12">
          <Summary><![CDATA[The maximum length of Ext.ux.TaskBar.TaskButton's text to allow before truncating]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. Desktop&quot;" />
            <Attribute Type="DefaultValue" RawValue="12" />
            <Attribute Type="Description" RawValue="The maximum length of Ext.ux.TaskBar.TaskButton's text to allow before truncating" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Listeners" Type="DesktopListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="DesktopDirectEvents">
          <Summary><![CDATA[Server-side DirectEventHandlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Server-side DirectEventHandlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="DesktopDirectEvents" Extends="ComponentDirectEvents">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="ShortcutClick" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;id&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;shortcutclick&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Ready" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;el&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;ready&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeUnload" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;el&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeunload&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="DesktopListeners" Extends="ComponentListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="ShortcutClick" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;id&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;shortcutclick&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Ready" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;el&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;ready&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeUnload" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;el&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeunload&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="DesktopModule" Extends="StateManagedItem">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="ModuleID" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;id&quot;" />
            <Attribute Type="Category" RawValue="&quot;2. DesktopModule&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="WindowID" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. DesktopModule&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="WindowProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;windowID&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="LauncherProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="ConfigOption" RawValue="&quot;launcher&quot;,JsonMode.Raw" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AutoRun" Type="bool" DefaultValue="false">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;2. DesktopModule&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="DesktopModulesCollection" Extends="StateManagedCollection&lt;DesktopModule&gt;">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="DesktopShortcut" Extends="StateManagedItem">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="ModuleID" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;2. DesktopShortcut&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ShortcutID" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;2. DesktopShortcut&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IconCls" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;2. DesktopShortcut&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Text" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;2. DesktopShortcut&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="X" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;2. DesktopShortcut&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Y" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;2. DesktopShortcut&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="DesktopShortcuts" Extends="StateManagedCollection&lt;DesktopShortcut&gt;">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="DesktopWindow" Extends="Window">
      <Summary><![CDATA[A specialized panel intended for use as an application window. Windows are floated and draggable by default, and also provide specific behavior like the ability to maximize and restore (with an event for minimizing, since the minimize behavior is application-specific). Windows can also be linked to a Ext.WindowGroup or managed by the Ext.WindowManager to provide grouping, activation, to front/back and other application-specific behavior.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:DesktopWindow runat=\&quot;server\&quot; Title=\&quot;Title\&quot; Collapsible=\&quot;true\&quot; Icon=\&quot;Application\&quot;&gt;&lt;Items&gt;&lt;/Items&gt;&lt;/{0}:DesktopWindow&gt;&quot;" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(DesktopWindow), &quot;Build.ToolboxIcons.DesktopWindow.bmp&quot;" />
        <Attribute Type="Designer" RawValue="typeof(WindowDesigner)" />
        <Attribute Type="Description" RawValue="A specialized panel intended for use as an application window. Windows are floated and draggable by default, and also provide specific behavior like the ability to maximize and restore (with an event for minimizing, since the minimize behavior is application-specific). Windows can also be linked to a Ext.WindowGroup or managed by the Ext.WindowManager to provide grouping, activation, to front/back and other application-specific behavior." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Maximizable" Modifier="Override" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to display the 'maximize' tool button and allow the user to maximize the window, false to hide the button and disallow maximizing the window (defaults to false). Note that when a window is maximized, the tool button will automatically change to a 'restore' button with the appropriate behavior already built-in that will restore the window to its previous size.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Ignore" />
            <Attribute Type="Category" RawValue="&quot;8. DesktopWindow&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="True to display the 'maximize' tool button and allow the user to maximize the window, false to hide the button and disallow maximizing the window (defaults to false). Note that when a window is maximized, the tool button will automatically change to a 'restore' button with the appropriate behavior already built-in that will restore the window to its previous size." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="LazyRender" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to force rendering otherwise rendering will be performed before the first showing.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;8. DesktopWindow&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="True to force rendering otherwise rendering will be performed before the first showing." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ShowInTaskbar" Type="bool" DefaultValue="true">
          <Summary><![CDATA[False to skip task button showing]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;8. DesktopWindow&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="False to skip task button showing" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Minimizable" Modifier="Override" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to display the 'minimize' tool button and allow the user to minimize the window, false to hide the button and disallow minimizing the window (defaults to false). Note that this button provides no implementation -- the behavior of minimizing a window is implementation-specific, so the minimize event must be handled and a custom minimize behavior implemented for this option to be useful.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Ignore" />
            <Attribute Type="Category" RawValue="&quot;8. DesktopWindow&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="True to display the 'minimize' tool button and allow the user to minimize the window, false to hide the button and disallow minimizing the window (defaults to false). Note that this button provides no implementation -- the behavior of minimizing a window is implementation-specific, so the minimize event must be handled and a custom minimize behavior implemented for this option to be useful." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RenderToProxy" Modifier="Override" Access="ProtectedInternal" Type="string">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Ignore" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Manager" Access="ProtectedInternal" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DesktopReference" Access="ProtectedInternal" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="ConfigOption" RawValue="&quot;desktop&quot;, JsonMode.Raw" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods>
        <Method Name="Show" Modifier="Override">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" />
          </Attributes>
          <Parameters />
        </Method>
      </Methods>
    </Class>
    <Class Name="DirectEvent" Extends="ComponentDirectEvent">
      <Attributes>
        <Attribute Type="TypeConverter" RawValue="typeof(DirectEventConverter)" />
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="DirectEventArgs" Extends="EventArgs">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="DirectEventCollection" Extends="StateManagedCollection&lt;DirectEvent&gt;">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="DirectEventConfirmation" Extends="StateManagedItem">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="ConfirmRequest" Type="bool" DefaultValue="false">
          <Summary><![CDATA[If true show confirmation dialog]]></Summary>
          <Attributes>
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="If true show confirmation dialog" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Title" Type="string" DefaultValue="&quot;Confirmation&quot;">
          <Summary><![CDATA[Confirmation dialog title]]></Summary>
          <Attributes>
            <Attribute Type="DefaultValue" RawValue="&quot;Confirmation&quot;" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Confirmation dialog title" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Message" Type="string" DefaultValue="&quot;Are you sure?&quot;">
          <Summary><![CDATA[Confirmation dialog message]]></Summary>
          <Attributes>
            <Attribute Type="DefaultValue" RawValue="&quot;Are you sure?&quot;" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Confirmation dialog message" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeConfirmProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;beforeConfirm&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CancelProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;cancel&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="DirectEventHandlerJsonConverter" Extends="ExtJsonConverter">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="DirectEventJsonConverter" Extends="ExtJsonConverter">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="DirectEventsConverter" Extends="ExpandableObjectConverter">
      <Attributes>
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="DirectEventTriplet">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="DirectEventUpdateAttribute" Extends="System">
      <Attributes>
        <Attribute Type="AttributeUsage" RawValue="AttributeTargets.Property, AllowMultiple = false" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="DirectMethodProxyIDAttribute" Extends="System">
      <Attributes>
        <Attribute Type="AttributeUsage" RawValue="AttributeTargets.Class, AllowMultiple = false, Inherited = true" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="DirectResponse" Extends="ExtObject">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Success" Type="bool" DefaultValue="true">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ErrorMessage" Type="string" DefaultValue="null">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Script" Type="string" DefaultValue="null">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ViewState" Type="string" DefaultValue="null">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ViewStateEncrypted" Type="string" DefaultValue="null">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EventValidation" Type="string" DefaultValue="null">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ServiceResponse" Type="string" DefaultValue="null">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ExtraParamsResponse" Type="string" DefaultValue="null">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ResultProxy" Access="Protected" Type="object" DefaultValue="null">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;result&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="DisabledDate" Extends="StateManagedItem">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="DisabledDateCollection" Extends="StateManagedCollection&lt;DisabledDate&gt;">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="DisplayField" Extends="Field">
      <Summary><![CDATA[A display-only text field which is not validated and not submitted.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:DisplayField runat=\&quot;server\&quot; /&gt;&quot;" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(DisplayField), &quot;Build.ToolboxIcons.DisplayField.bmp&quot;" />
        <Attribute Type="Description" RawValue="A display-only text field which is not validated and not submitted." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="FieldClass" Modifier="Override" Type="string" DefaultValue="&quot;x-form-display-field&quot;">
          <Summary><![CDATA[The default CSS class for the field (defaults to 'x-form-display-field')]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. DisplayField&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;x-form-display-field&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Description" RawValue="The default CSS class for the field (defaults to 'x-form-display-field')" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HtmlEncode" Type="bool" DefaultValue="false">
          <Summary><![CDATA[false to skip HTML-encoding the text when rendering it (defaults to false). This might be useful if you want to include tags in the field's innerHTML rather than rendering them as string literals per the default logic.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetHtmlEncode&quot;" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. DisplayField&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="false to skip HTML-encoding the text when rendering it (defaults to false). This might be useful if you want to include tags in the field's innerHTML rather than rendering them as string literals per the default logic." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Text" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The plain text to display within the label (defaults to ''). If you need to include HTML tags within the label's innerHTML, use the html config instead.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;value&quot;" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetValue&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Category" RawValue="&quot;6. DisplayField&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The plain text to display within the label (defaults to ''). If you need to include HTML tags within the label's innerHTML, use the html config instead." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Listeners" Type="FieldListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="FieldDirectEvents">
          <Summary><![CDATA[Server-side Ajax Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Server-side Ajax Event Handlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="Dom" Extends="ScriptClass">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="DomHelper">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="DomObject" Extends="StateManagedItem">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Tag" Type="HtmlTextWriterTag" DefaultValue="HtmlTextWriterTag.Div">
          <Summary><![CDATA[The tag name of the element]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="HtmlTextWriterTag.Div" />
            <Attribute Type="Description" RawValue="The tag name of the element" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ID" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The id of the element]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;id&quot;" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The id of the element" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Cls" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The class attribute of the element. This will end up being either the \"class\" attribute on a HTML fragment or className for a DOM node, depending on whether DomHelper is using fragments or DOM.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The class attribute of the element. This will end up being either the \&quot;class\&quot; attribute on a HTML fragment or className for a DOM node, depending on whether DomHelper is using fragments or DOM." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Html" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The innerHTML for the element]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The innerHTML for the element" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CustomConfig" Type="ConfigItemCollection">
          <Summary><![CDATA[Collection of custom js config]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;-&quot;, typeof(CustomConfigJsonConverter)" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="Collection of custom js config" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Children" Type="DomObjectCollection">
          <Summary><![CDATA[An array of the same kind of element definition objects to be created and appended. These can be nested as deep as you want.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;cn&quot;, JsonMode.AlwaysArray" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="An array of the same kind of element definition objects to be created and appended. These can be nested as deep as you want." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="DomObjectCollection" Extends="StateManagedCollection&lt;DomObject&gt;">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="DragDrop" Abstract="true" Extends="Observable" Inherits="ICustomConfigSerialization">
      <Summary><![CDATA[Defines the interface and base operation of items that that can be dragged or can be drop targets.]]></Summary>
      <Attributes>
        <Attribute Type="Description" RawValue="Defines the interface and base operation of items that that can be dragged or can be drop targets." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="ConfigIDProxy" Modifier="Override" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Ignore" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Groups" Type="DragDropGroups" DefaultValue="null">
          <Summary><![CDATA[The group defines a logical collection of DragDrop objects that are related. Instances only get events when interacting with other DragDrop object in the same group. This lets us define multiple groups using a single DragDrop subclass if we want.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;groups&quot;, JsonMode.Raw" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Content" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Category" RawValue="&quot;3. DragDrop&quot;" />
            <Attribute Type="Description" RawValue="The group defines a logical collection of DragDrop objects that are related. Instances only get events when interacting with other DragDrop object in the same group. This lets us define multiple groups using a single DragDrop subclass if we want." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HasOuterHandles" Type="bool" DefaultValue="false">
          <Summary><![CDATA[By default, drags can only be initiated if the mousedown occurs in the region the linked element is. This is done in part to work around a bug in some browsers that mis-report the mousedown if the previous mouseup happened outside of the window. This property is set to true if outer handles are defined.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. DragDrop&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="By default, drags can only be initiated if the mousedown occurs in the region the linked element is. This is done in part to work around a bug in some browsers that mis-report the mousedown if the previous mouseup happened outside of the window. This property is set to true if outer handles are defined." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IgnoreSelf" Type="bool" DefaultValue="true">
          <Summary><![CDATA[Set to false to enable a DragDrop object to fire drag events while dragging over its own Element. Defaults to true - DragDrop objects do not by default fire drag events to themselves.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. DragDrop&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Set to false to enable a DragDrop object to fire drag events while dragging over its own Element. Defaults to true - DragDrop objects do not by default fire drag events to themselves." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="InvalidHandleClasses" Type="string[]" DefaultValue="null">
          <Summary><![CDATA[An Array of CSS class names for elements to be considered in valid as drag handles.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="typeof(StringArrayJsonConverter)" />
            <Attribute Type="TypeConverter" RawValue="typeof(StringArrayConverter)" />
            <Attribute Type="Category" RawValue="&quot;3. DragDrop&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="An Array of CSS class names for elements to be considered in valid as drag handles." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="InvalidHandleTypesProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;invalidHandleTypes&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="InvalidHandleIdsProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;invalidHandleIds&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IsTarget" Type="bool" DefaultValue="true">
          <Summary><![CDATA[By default, all instances can be a drop target. This can be disabled by setting isTarget to false.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. DragDrop&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="By default, all instances can be a drop target. This can be disabled by setting isTarget to false." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MaintainOffset" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Maintain offsets when we resetconstraints. Set to true when you want the position of the element relative to its parent to stay the same when the page changes]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. DragDrop&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Maintain offsets when we resetconstraints. Set to true when you want the position of the element relative to its parent to stay the same when the page changes" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MoveOnly" Type="bool" DefaultValue="false">
          <Summary><![CDATA[When set to true, other DD objects in cooperating DDGroups do not receive notification events when this DD object is dragged over them. Defaults to false.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. DragDrop&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="When set to true, other DD objects in cooperating DDGroups do not receive notification events when this DD object is dragged over them. Defaults to false." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Padding" Type="int[]" DefaultValue="null">
          <Summary><![CDATA[An Array of CSS class names for elements to be considered in valid as drag handles.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="typeof(IntArrayJsonConverter)" />
            <Attribute Type="TypeConverter" RawValue="typeof(IntArrayConverter)" />
            <Attribute Type="Category" RawValue="&quot;3. DragDrop&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="An Array of CSS class names for elements to be considered in valid as drag handles." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="PrimaryButtonOnly" Type="bool" DefaultValue="true">
          <Summary><![CDATA[By default the drag and drop instance will only respond to the primary button click (left button for a right-handed mouse). Set to true to allow drag and drop to start with any mouse click that is propogated by the browser]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. DragDrop&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="By default the drag and drop instance will only respond to the primary button click (left button for a right-handed mouse). Set to true to allow drag and drop to start with any mouse click that is propogated by the browser" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="XTicks" Type="int[]" DefaultValue="null">
          <Summary><![CDATA[Array of pixel locations the element will snap to if we specified a horizontal graduation/interval. This array is generated automatically when you define a tick interval.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="typeof(IntArrayJsonConverter)" />
            <Attribute Type="TypeConverter" RawValue="typeof(IntArrayConverter)" />
            <Attribute Type="Category" RawValue="&quot;3. DragDrop&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="Array of pixel locations the element will snap to if we specified a horizontal graduation/interval. This array is generated automatically when you define a tick interval." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="YTicks" Type="int[]" DefaultValue="null">
          <Summary><![CDATA[Array of pixel locations the element will snap to if we specified a vertical graduation/interval. This array is generated automatically when you define a tick interval.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="typeof(IntArrayJsonConverter)" />
            <Attribute Type="TypeConverter" RawValue="typeof(IntArrayConverter)" />
            <Attribute Type="Category" RawValue="&quot;3. DragDrop&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="Array of pixel locations the element will snap to if we specified a vertical graduation/interval. This array is generated automatically when you define a tick interval." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EndDrag" Type="JFunction" DefaultValue="null">
          <Summary><![CDATA[Fired when we are done dragging the object]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;3. DragDrop&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="Fired when we are done dragging the object" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="OnAvailable" Type="JFunction" DefaultValue="null">
          <Summary><![CDATA[Override the onAvailable method to do what is needed after the initial position was determined.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;3. DragDrop&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="Override the onAvailable method to do what is needed after the initial position was determined." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="OnDrag" Type="JFunction" DefaultValue="null">
          <Summary><![CDATA[Abstract method called during the onMouseMove event while dragging an object.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;3. DragDrop&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="Abstract method called during the onMouseMove event while dragging an object." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="OnDragDrop" Type="JFunction" DefaultValue="null">
          <Summary><![CDATA[Abstract method called when this item is dropped on another DragDrop obj]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;3. DragDrop&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="Abstract method called when this item is dropped on another DragDrop obj" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="OnDragEnter" Type="JFunction" DefaultValue="null">
          <Summary><![CDATA[Abstract method called when this element fist begins hovering over another DragDrop obj]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;3. DragDrop&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="Abstract method called when this element fist begins hovering over another DragDrop obj" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="OnDragOut" Type="JFunction" DefaultValue="null">
          <Summary><![CDATA[Abstract method called when we are no longer hovering over an element]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;3. DragDrop&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="Abstract method called when we are no longer hovering over an element" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="OnDragOver" Type="JFunction" DefaultValue="null">
          <Summary><![CDATA[Abstract method called when this element is hovering over another DragDrop obj]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;3. DragDrop&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="Abstract method called when this element is hovering over another DragDrop obj" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="OnInvalidDrop" Type="JFunction" DefaultValue="null">
          <Summary><![CDATA[Abstract method called when this item is dropped on an area with no drop target]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;3. DragDrop&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="Abstract method called when this item is dropped on an area with no drop target" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="OnMouseDown" Type="JFunction" DefaultValue="null">
          <Summary><![CDATA[Event handler that fires when a drag/drop obj gets a mousedown]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;3. DragDrop&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="Event handler that fires when a drag/drop obj gets a mousedown" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="OnMouseUp" Type="JFunction" DefaultValue="null">
          <Summary><![CDATA[Event handler that fires when a drag/drop obj gets a mouseup]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;3. DragDrop&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="Event handler that fires when a drag/drop obj gets a mouseup" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="StartDrag" Type="JFunction" DefaultValue="null">
          <Summary><![CDATA[Event handler that fires when a drag/drop obj gets a mouseup]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;3. DragDrop&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="Event handler that fires when a drag/drop obj gets a mouseup" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="DragDropGroup" Extends="StateManagedItem">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Name" Type="string">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Allow" Type="bool">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="DragDropGroups" Extends="StateManagedCollection&lt;DragDropGroup&gt;">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="DragSource" Extends="DDProxy">
      <Summary><![CDATA[A simple class that provides the basic implementation needed to make any element draggable.]]></Summary>
      <Attributes>
        <Attribute Type="ToolboxItem" RawValue="true" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:DragSource runat=\&quot;server\&quot;&gt;&lt;/{0}:DragSource&gt;&quot;" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(DragSource), &quot;Build.ToolboxIcons.DragDrop.bmp&quot;" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="Description" RawValue="A simple class that provides the basic implementation needed to make any element draggable." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Group" Modifier="Override" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A named drag drop group to which this object belongs. If a group is specified, then this object will only interact with other drag drop objects in the same group (defaults to undefined).]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;ddGroup&quot;" />
            <Attribute Type="Category" RawValue="&quot;6. DragSource&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="A named drag drop group to which this object belongs. If a group is specified, then this object will only interact with other drag drop objects in the same group (defaults to undefined)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DragDataProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;dragData&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DropAllowed" Type="string" DefaultValue="&quot;x-dd-drop-ok&quot;">
          <Summary><![CDATA[The CSS class returned to the drag source when drop is allowed (defaults to \"x-dd-drop-ok\").]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. DragSource&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;x-dd-drop-ok&quot;" />
            <Attribute Type="Description" RawValue="The CSS class returned to the drag source when drop is allowed (defaults to \&quot;x-dd-drop-ok\&quot;)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DropNotAllowed" Type="string" DefaultValue="&quot;x-dd-drop-nodrop&quot;">
          <Summary><![CDATA[The CSS class returned to the drag source when drop is not allowed (defaults to \"x-dd-drop-nodrop\").]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. DragSource&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;x-dd-drop-nodrop&quot;" />
            <Attribute Type="Description" RawValue="The CSS class returned to the drag source when drop is not allowed (defaults to \&quot;x-dd-drop-nodrop\&quot;)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AfterDragDrop" Type="JFunction" DefaultValue="null">
          <Summary><![CDATA[An empty function by default, but provided so that you can perform a custom action after a valid drag drop has occurred by providing an implementation.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;6. DragSource&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="An empty function by default, but provided so that you can perform a custom action after a valid drag drop has occurred by providing an implementation." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AfterDragEnter" Type="JFunction" DefaultValue="null">
          <Summary><![CDATA[An empty function by default, but provided so that you can perform a custom action when the dragged item enters the drop target by providing an implementation.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;6. DragSource&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="An empty function by default, but provided so that you can perform a custom action when the dragged item enters the drop target by providing an implementation." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AfterDragOut" Type="JFunction" DefaultValue="null">
          <Summary><![CDATA[An empty function by default, but provided so that you can perform a custom action after the dragged item is dragged out of the target without dropping.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;6. DragSource&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="An empty function by default, but provided so that you can perform a custom action after the dragged item is dragged out of the target without dropping." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AfterDragOver" Type="JFunction" DefaultValue="null">
          <Summary><![CDATA[An empty function by default, but provided so that you can perform a custom action while the dragged item is over the drop target by providing an implementation.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;6. DragSource&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="An empty function by default, but provided so that you can perform a custom action while the dragged item is over the drop target by providing an implementation." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AfterInvalidDrop" Type="JFunction" DefaultValue="null">
          <Summary><![CDATA[An empty function by default, but provided so that you can perform a custom action after an invalid drop has occurred by providing an implementation.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;6. DragSource&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="An empty function by default, but provided so that you can perform a custom action after an invalid drop has occurred by providing an implementation." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeDragDrop" Type="JFunction" DefaultValue="null">
          <Summary><![CDATA[An empty function by default, but provided so that you can perform a custom action before the dragged item is dropped onto the target and optionally cancel the onDragDrop.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;6. DragSource&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="An empty function by default, but provided so that you can perform a custom action before the dragged item is dropped onto the target and optionally cancel the onDragDrop." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeDragEnter" Type="JFunction" DefaultValue="null">
          <Summary><![CDATA[An empty function by default, but provided so that you can perform a custom action before the dragged item enters the drop target and optionally cancel the onDragEnter.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;6. DragSource&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="An empty function by default, but provided so that you can perform a custom action before the dragged item enters the drop target and optionally cancel the onDragEnter." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeDragOut" Type="JFunction" DefaultValue="null">
          <Summary><![CDATA[An empty function by default, but provided so that you can perform a custom action before the dragged item is dragged out of the target without dropping, and optionally cancel the onDragOut.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;6. DragSource&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="An empty function by default, but provided so that you can perform a custom action before the dragged item is dragged out of the target without dropping, and optionally cancel the onDragOut." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeDragOver" Type="JFunction" DefaultValue="null">
          <Summary><![CDATA[An empty function by default, but provided so that you can perform a custom action while the dragged item is over the drop target and optionally cancel the onDragOver.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;6. DragSource&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="An empty function by default, but provided so that you can perform a custom action while the dragged item is over the drop target and optionally cancel the onDragOver." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeInvalidDrop" Type="JFunction" DefaultValue="null">
          <Summary><![CDATA[An empty function by default, but provided so that you can perform a custom action after an invalid drop has occurred.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;6. DragSource&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="An empty function by default, but provided so that you can perform a custom action after an invalid drop has occurred." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="OnBeforeDrag" Type="JFunction" DefaultValue="null">
          <Summary><![CDATA[An empty function by default, but provided so that you can perform a custom action before the initial drag event begins and optionally cancel it.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;6. DragSource&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="An empty function by default, but provided so that you can perform a custom action before the initial drag event begins and optionally cancel it." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="OnStartDrag" Type="JFunction" DefaultValue="null">
          <Summary><![CDATA[An empty function by default, but provided so that you can perform a custom action once the initial drag event has begun. The drag cannot be canceled from this function.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;6. DragSource&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="An empty function by default, but provided so that you can perform a custom action once the initial drag event has begun. The drag cannot be canceled from this function." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="GetDragData" Type="JFunction" DefaultValue="null">
          <Summary><![CDATA[Returns the data object associated with this drag source.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;6. DragSource&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="Returns the data object associated with this drag source." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="DragTracker" Extends="Observable">
      <Attributes>
        <Attribute Type="ToolboxBitmap" RawValue="typeof(DragSource), &quot;Build.ToolboxIcons.DragDrop.bmp&quot;" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="ConfigIDProxy" Modifier="Override" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Ignore" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Tolerance" Type="int" DefaultValue="5">
          <Summary><![CDATA[Defaults to 5.]]></Summary>
          <Attributes>
            <Attribute Type="Category" RawValue="&quot;3. DragTracker&quot;" />
            <Attribute Type="DefaultValue" RawValue="5" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Description" RawValue="Defaults to 5." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AutoStart" Type="int" DefaultValue="0">
          <Summary><![CDATA[Defaults to 0. Specify a Number for the number of milliseconds to defer trigger start.]]></Summary>
          <Attributes>
            <Attribute Type="Category" RawValue="&quot;3. DragTracker&quot;" />
            <Attribute Type="DefaultValue" RawValue="0" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Description" RawValue="Defaults to 0. Specify a Number for the number of milliseconds to defer trigger start." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ProxyCls" Type="string" DefaultValue="&quot;x-view-selector&quot;">
          <Summary><![CDATA[Proxy class]]></Summary>
          <Attributes>
            <Attribute Type="Category" RawValue="&quot;3. DragDrop&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;x-view-selector&quot;" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Description" RawValue="Proxy class" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Target" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[ID of the element that is linked to this instance]]></Summary>
          <Attributes>
            <Attribute Type="Category" RawValue="&quot;3. DragDrop&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="ConfigOption" RawValue="&quot;el&quot;" />
            <Attribute Type="Description" RawValue="ID of the element that is linked to this instance" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="OnBeforeStart" Type="JFunction" DefaultValue="null">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;3. DragDrop&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="OnStart" Type="JFunction" DefaultValue="null">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;3. DragDrop&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="OnDrag" Type="JFunction" DefaultValue="null">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;3. DragDrop&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="OnEnd" Type="JFunction" DefaultValue="null">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;3. DragDrop&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Listeners" Type="DragTrackerListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="DragTrackerDirectEvents">
          <Summary><![CDATA[Server-side DirectEventHandlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Server-side DirectEventHandlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="DragTrackerDirectEvents" Extends="ComponentDirectEvents">
      <Attributes />
      <ConfigOptions>
        <ConfigOption Name="Drag" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Button), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object), &quot;Event object&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;drag&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DragEnd" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Button), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object), &quot;Event object&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;dragend&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DragStart" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Button), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object), &quot;Event object&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;dragstart&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MouseDown" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Button), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object), &quot;Event object&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;mousedown&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MouseMove" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Button), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object), &quot;Event object&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;mousemove&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MouseUp" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Button), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object), &quot;Event object&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;mouseup&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="DragTrackerListeners" Extends="ComponentListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Drag" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Button), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object), &quot;Event object&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;drag&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DragEnd" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Button), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object), &quot;Event object&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;dragend&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DragStart" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Button), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object), &quot;Event object&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;dragstart&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MouseDown" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Button), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object), &quot;Event object&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;mousedown&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MouseMove" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Button), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object), &quot;Event object&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;mousemove&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MouseUp" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Button), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object), &quot;Event object&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;mouseup&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="DragZone" Extends="DragSource">
      <Summary><![CDATA[This class provides a container DD instance that allows dragging of multiple child source nodes.]]></Summary>
      <Attributes>
        <Attribute Type="ToolboxItem" RawValue="true" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:DragZone runat=\&quot;server\&quot;&gt;&lt;/{0}:DragZone&gt;&quot;" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(DragZone), &quot;Build.ToolboxIcons.DragDrop.bmp&quot;" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="Description" RawValue="This class provides a container DD instance that allows dragging of multiple child source nodes." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="ContainerScroll" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to register this container with the Scrollmanager for auto scrolling during drag operations.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. DragZone&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to register this container with the Scrollmanager for auto scrolling during drag operations." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HighlightingColor" Type="string" DefaultValue="&quot;c3daf9&quot;">
          <Summary><![CDATA[The color to use when visually highlighting the drag source in the afterRepair method after a failed drop (defaults to \"c3daf9\" - light blue)]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;hlColor&quot;" />
            <Attribute Type="Category" RawValue="&quot;7. DragZone&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;c3daf9&quot;" />
            <Attribute Type="Description" RawValue="The color to use when visually highlighting the drag source in the afterRepair method after a failed drop (defaults to \&quot;c3daf9\&quot; - light blue)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AfterRepair" Type="JFunction" DefaultValue="null">
          <Summary><![CDATA[Called after a repair of an invalid drop. By default, highlights this.dragData.ddel]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;7. DragSource&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="Called after a repair of an invalid drop. By default, highlights this.dragData.ddel" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="GetRepairXY" Type="JFunction" DefaultValue="null">
          <Summary><![CDATA[Called before a repair of an invalid drop to get the XY to animate to. By default returns the XY of this.dragData.ddel]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;7. DragSource&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="Called before a repair of an invalid drop to get the XY to animate to. By default returns the XY of this.dragData.ddel" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="OnInitDrag" Type="JFunction" DefaultValue="null">
          <Summary><![CDATA[Called once drag threshold has been reached to initialize the proxy element. By default, it clones the this.dragData.ddel]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;7. DragSource&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="Called once drag threshold has been reached to initialize the proxy element. By default, it clones the this.dragData.ddel" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="DropDownField" Extends="DropDownFieldBase">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(TriggerField), &quot;Build.ToolboxIcons.TriggerField.bmp&quot;" />
        <Attribute Type="DefaultProperty" RawValue="&quot;Text&quot;" />
        <Attribute Type="ValidationProperty" RawValue="&quot;Text&quot;" />
        <Attribute Type="ControlValueProperty" RawValue="&quot;Text&quot;" />
        <Attribute Type="ParseChildren" RawValue="true" />
        <Attribute Type="PersistChildren" RawValue="false" />
        <Attribute Type="SupportsEventValidation" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Listeners" Type="DropDownFieldListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="DropDownFieldDirectEvents">
          <Summary><![CDATA[Server-side Ajax Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Server-side Ajax Event Handlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="DropDownFieldBase" Abstract="true" Extends="BaseTriggerField">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Text" Modifier="Override" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The Text value to initialize this field with.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Category" RawValue="&quot;8. DropDownField&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Bindable" RawValue="true, BindingDirection.TwoWay" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetValue&quot;" />
            <Attribute Type="Description" RawValue="The Text value to initialize this field with." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="UnderlyingValue" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The underlying value which mapping on the Text, similar the Value property but can be set declarative]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Category" RawValue="&quot;8. DropDownField&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Bindable" RawValue="true, BindingDirection.TwoWay" />
            <Attribute Type="Description" RawValue="The underlying value which mapping on the Text, similar the Value property but can be set declarative" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Mode" Type="DropDownMode" DefaultValue="DropDownMode.Text">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="Category" RawValue="&quot;8. DropDownField&quot;" />
            <Attribute Type="DefaultValue" RawValue="DropDownMode.Text" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AllowBlur" Type="bool" DefaultValue="false">
          <Summary><![CDATA[False to hide the component when the field is blurred. Defaults to false.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;8. DropDownField&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="False to hide the component when the field is blurred. Defaults to false." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="LazyInit" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to not initialize the list for this combo until the field is focused. (defaults to true).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;8. DropDownField&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="True to not initialize the list for this combo until the field is focused. (defaults to true)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ComponentAlign" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A valid anchor position value. See Ext.Element.alignTo for details on supported anchor positions (defaults to 'tl-bl').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;8. DropDownField&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="A valid anchor position value. See Ext.Element.alignTo for details on supported anchor positions (defaults to 'tl-bl')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Component" Type="ItemsCollection&lt;PanelBase&gt;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;8. DropDownField&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;component&quot;, typeof(ItemCollectionJsonConverter)" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ComponentRenderTo" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The id of the node, a DOM node or an existing Element that will be the content Container to render this component into.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;8. DropDownField&quot;" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The id of the node, a DOM node or an existing Element that will be the content Container to render this component into." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SyncValue" Type="JFunction" DefaultValue="null">
          <Summary><![CDATA[Function to syncronize value of the field and dropdown control]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;8. DropDownField&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="Function to syncronize value of the field and dropdown control" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="DropDownFieldDirectEvents" Extends="TriggerFieldDirectEvents">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Collapse" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Field), &quot;This field&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;collapse&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Expand" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Field), &quot;This field&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;expand&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="DropDownFieldListeners" Extends="TriggerFieldListeners">
      <Attributes />
      <ConfigOptions>
        <ConfigOption Name="Collapse" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Field), &quot;This field&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;collapse&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Expand" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Field), &quot;This field&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;expand&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="DropTarget" Extends="DDTarget">
      <Summary><![CDATA[This class provides a container DD instance that allows dragging of multiple child source nodes.]]></Summary>
      <Attributes>
        <Attribute Type="ToolboxItem" RawValue="true" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:DropTarget runat=\&quot;server\&quot;&gt;&lt;/{0}:DropTarget&gt;&quot;" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(DropTarget), &quot;Build.ToolboxIcons.DragDrop.bmp&quot;" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="Description" RawValue="This class provides a container DD instance that allows dragging of multiple child source nodes." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Group" Modifier="Override" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A named drag drop group to which this object belongs. If a group is specified, then this object will only interact with other drag drop objects in the same group (defaults to undefined).]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;ddGroup&quot;" />
            <Attribute Type="Category" RawValue="&quot;5. DropTarget&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="A named drag drop group to which this object belongs. If a group is specified, then this object will only interact with other drag drop objects in the same group (defaults to undefined)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DropAllowed" Type="string" DefaultValue="&quot;x-dd-drop-ok&quot;">
          <Summary><![CDATA[The CSS class returned to the drag source when drop is allowed (defaults to \"x-dd-drop-ok\").]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. DropTarget&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;x-dd-drop-ok&quot;" />
            <Attribute Type="Description" RawValue="The CSS class returned to the drag source when drop is allowed (defaults to \&quot;x-dd-drop-ok\&quot;)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DropNotAllowed" Type="string" DefaultValue="&quot;x-dd-drop-nodrop&quot;">
          <Summary><![CDATA[The CSS class returned to the drag source when drop is not allowed (defaults to \"x-dd-drop-nodrop\").]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. DropTarget&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;x-dd-drop-nodrop&quot;" />
            <Attribute Type="Description" RawValue="The CSS class returned to the drag source when drop is not allowed (defaults to \&quot;x-dd-drop-nodrop\&quot;)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="OverClass" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The CSS class applied to the drop target element while the drag source is over it (defaults to \"\").]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. DropTarget&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The CSS class applied to the drop target element while the drag source is over it (defaults to \&quot;\&quot;)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ContainerScroll" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to register this container with the Scrollmanager for auto scrolling during drag operations.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. DropTarget&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to register this container with the Scrollmanager for auto scrolling during drag operations." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="NotifyDrop" Type="JFunction" DefaultValue="null">
          <Summary><![CDATA[The function a Ext.dd.DragSource calls once to notify this drop target that the dragged item has been dropped on it. This method has no default implementation and returns false, so you must provide an implementation that does something to process the drop event and returns true so that the drag source's repair action does not run.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;5. DropTarget&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="The function a Ext.dd.DragSource calls once to notify this drop target that the dragged item has been dropped on it. This method has no default implementation and returns false, so you must provide an implementation that does something to process the drop event and returns true so that the drag source's repair action does not run." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="NotifyEnter" Type="JFunction" DefaultValue="null">
          <Summary><![CDATA[The function a Ext.dd.DragSource calls once to notify this drop target that the source is now over the target. This default implementation adds the CSS class specified by overClass (if any) to the drop element and returns the dropAllowed config value. This method should be overridden if drop validation is required.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;5. DropTarget&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="The function a Ext.dd.DragSource calls once to notify this drop target that the source is now over the target. This default implementation adds the CSS class specified by overClass (if any) to the drop element and returns the dropAllowed config value. This method should be overridden if drop validation is required." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="NotifyOut" Type="JFunction" DefaultValue="null">
          <Summary><![CDATA[The function a Ext.dd.DragSource calls once to notify this drop target that the source has been dragged out of the target without dropping. This default implementation simply removes the CSS class specified by overClass (if any) from the drop element.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;5. DropTarget&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="The function a Ext.dd.DragSource calls once to notify this drop target that the source has been dragged out of the target without dropping. This default implementation simply removes the CSS class specified by overClass (if any) from the drop element." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="NotifyOver" Type="JFunction" DefaultValue="null">
          <Summary><![CDATA[The function a Ext.dd.DragSource calls continuously while it is being dragged over the target. This method will be called on every mouse movement while the drag source is over the drop target. This default implementation simply returns the dropAllowed config value.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;5. DropTarget&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="The function a Ext.dd.DragSource calls continuously while it is being dragged over the target. This method will be called on every mouse movement while the drag source is over the drop target. This default implementation simply returns the dropAllowed config value." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="DropZone" Extends="DropTarget">
      <Summary><![CDATA[This class provides a container DD instance that allows dropping on multiple child target nodes.]]></Summary>
      <Attributes>
        <Attribute Type="ToolboxItem" RawValue="true" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:DropZone runat=\&quot;server\&quot;&gt;&lt;/{0}:DropZone&gt;&quot;" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(DropZone), &quot;Build.ToolboxIcons.DragDrop.bmp&quot;" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="Description" RawValue="This class provides a container DD instance that allows dropping on multiple child target nodes." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="GetTargetFromEvent" Type="JFunction" DefaultValue="null">
          <Summary><![CDATA[Returns a custom data object associated with the DOM node that is the target of the event. By default this looks up the event target in the Ext.dd.Registry, although you can override this method to provide your own custom lookup.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;6. DropZone&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="Returns a custom data object associated with the DOM node that is the target of the event. By default this looks up the event target in the Ext.dd.Registry, although you can override this method to provide your own custom lookup." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="OnContainerDrop" Type="JFunction" DefaultValue="null">
          <Summary><![CDATA[Called when the DropZone determines that a Ext.dd.DragSource has been dropped on it, but not on any of its registered drop nodes. The default implementation returns false, so it should be overridden to provide the appropriate processing of the drop event if you need the drop zone itself to be able to accept drops. It should return true when valid so that the drag source's repair action does not run.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;6. DropZone&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="Called when the DropZone determines that a Ext.dd.DragSource has been dropped on it, but not on any of its registered drop nodes. The default implementation returns false, so it should be overridden to provide the appropriate processing of the drop event if you need the drop zone itself to be able to accept drops. It should return true when valid so that the drag source's repair action does not run." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="OnContainerOver" Type="JFunction" DefaultValue="null">
          <Summary><![CDATA[Called while the DropZone determines that a Ext.dd.DragSource is being dragged over it, but not over any of its registered drop nodes. The default implementation returns this.dropNotAllowed, so it should be overridden to provide the proper feedback if necessary.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;6. DropZone&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="Called while the DropZone determines that a Ext.dd.DragSource is being dragged over it, but not over any of its registered drop nodes. The default implementation returns this.dropNotAllowed, so it should be overridden to provide the proper feedback if necessary." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="OnNodeDrop" Type="JFunction" DefaultValue="null">
          <Summary><![CDATA[Called when the DropZone determines that a Ext.dd.DragSource has been dropped onto the drop node. The default implementation returns false, so it should be overridden to provide the appropriate processing of the drop event and return true so that the drag source's repair action does not run.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;6. DropZone&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="Called when the DropZone determines that a Ext.dd.DragSource has been dropped onto the drop node. The default implementation returns false, so it should be overridden to provide the appropriate processing of the drop event and return true so that the drag source's repair action does not run." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="OnNodeEnter" Type="JFunction" DefaultValue="null">
          <Summary><![CDATA[Called when the DropZone determines that a Ext.dd.DragSource has entered a drop node that has either been registered or detected by a configured implementation of getTargetFromEvent. This method has no default implementation and should be overridden to provide node-specific processing if necessary.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;6. DropZone&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="Called when the DropZone determines that a Ext.dd.DragSource has entered a drop node that has either been registered or detected by a configured implementation of getTargetFromEvent. This method has no default implementation and should be overridden to provide node-specific processing if necessary." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="OnNodeOut" Type="JFunction" DefaultValue="null">
          <Summary><![CDATA[Called when the DropZone determines that a Ext.dd.DragSource has been dragged out of the drop node without dropping. This method has no default implementation and should be overridden to provide node-specific processing if necessary.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;6. DropZone&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="Called when the DropZone determines that a Ext.dd.DragSource has been dragged out of the drop node without dropping. This method has no default implementation and should be overridden to provide node-specific processing if necessary." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="OnNodeOver" Type="JFunction" DefaultValue="null">
          <Summary><![CDATA[Called while the DropZone determines that a Ext.dd.DragSource is over a drop node that has either been registered or detected by a configured implementation of getTargetFromEvent. The default implementation returns this.dropNotAllowed, so it should be overridden to provide the proper feedback.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;6. DropZone&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="Called while the DropZone determines that a Ext.dd.DragSource is over a drop node that has either been registered or detected by a configured implementation of getTargetFromEvent. The default implementation returns this.dropNotAllowed, so it should be overridden to provide the proper feedback." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="EditableGrid" Extends="Plugin">
      <Attributes />
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="Editor" Extends="Component">
      <Summary><![CDATA[A base editor field that handles displaying/hiding on demand and has some built-in sizing and event handling logic.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:Editor runat=\&quot;server\&quot; /&gt;&quot;" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(Editor), &quot;Build.ToolboxIcons.Editor.bmp&quot;" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="Description" RawValue="A base editor field that handles displaying/hiding on demand and has some built-in sizing and event handling logic." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="ActivateEvent" Type="string" DefaultValue="&quot;click&quot;">
          <Summary><![CDATA[Event name for activate the editor]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="Category" RawValue="&quot;4. Editor&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;click&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Event name for activate the editor" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Alignment" Type="EditorAlignmentConfig">
          <Summary><![CDATA[The position to align to (see Ext.Element.alignTo for more details, defaults to \"c-c?\").]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToString" />
            <Attribute Type="Category" RawValue="&quot;4. Editor&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="The position to align to (see Ext.Element.alignTo for more details, defaults to \&quot;c-c?\&quot;)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AutoSize" Type="EditorAutoSize" DefaultValue="EditorAutoSize.Disable">
          <Summary><![CDATA[Size for the editor to automatically adopt the size of the underlying field, Width to adopt the width only, or Height to adopt the height only (defaults to Disable)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;4. Editor&quot;" />
            <Attribute Type="DefaultValue" RawValue="EditorAutoSize.Disable" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Size for the editor to automatically adopt the size of the underlying field, Width to adopt the width only, or Height to adopt the height only (defaults to Disable)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AutoSizeProxy" Access="Protected" Type="string" DefaultValue="&quot;false&quot;">
          <Attributes>
            <Attribute Type="DefaultValue" RawValue="&quot;false&quot;" />
            <Attribute Type="ConfigOption" RawValue="&quot;autoSize&quot;, JsonMode.Raw" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ZIndex" Type="int" DefaultValue="0">
          <Summary><![CDATA[Editor z-index]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. Editor&quot;" />
            <Attribute Type="DefaultValue" RawValue="0" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Editor z-index" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AllowBlur" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to complete edit complete the editing process if in edit mode when the field is blurred. Defaults to true.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. Editor&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to complete edit complete the editing process if in edit mode when the field is blurred. Defaults to true." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CancelOnBlur" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to cancel the edit when the blur event is fired (defaults to false)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. Editor&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to cancel the edit when the blur event is fired (defaults to false)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CancelOnEsc" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to cancel the edit when the escape key is pressed (defaults to false)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. Editor&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to cancel the edit when the escape key is pressed (defaults to false)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CompleteOnEnter" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to complete the edit when the enter key is pressed (defaults to false)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. Editor&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to complete the edit when the enter key is pressed (defaults to false)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HideEl" Type="bool" DefaultValue="true">
          <Summary><![CDATA[False to keep the bound element visible while the editor is displayed (defaults to true)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. Editor&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="False to keep the bound element visible while the editor is displayed (defaults to true)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IgnoreNoChange" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to skip the edit completion process (no save, no events fired) if the user completes an edit and the value has not changed (defaults to false). Applies only to string values - edits for other data types will never be ignored.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. Editor&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to skip the edit completion process (no save, no events fired) if the user completes an edit and the value has not changed (defaults to false). Applies only to string values - edits for other data types will never be ignored." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RevertInvalid" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to automatically revert the field value and cancel the edit when the user completes an edit and the field validation fails (defaults to true)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. Editor&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to automatically revert the field value and cancel the edit when the user completes an edit and the field validation fails (defaults to true)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Shadow" Type="ShadowMode" DefaultValue="ShadowMode.Frame">
          <Summary><![CDATA[\"sides\" for sides/bottom only, \"frame\" for 4-way shadow, and \"drop\" for bottom-right shadow (defaults to \"frame\")]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="typeof(ShadowJsonConverter)" />
            <Attribute Type="Category" RawValue="&quot;4. Editor&quot;" />
            <Attribute Type="DefaultValue" RawValue="ShadowMode.Frame" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="\&quot;sides\&quot; for sides/bottom only, \&quot;frame\&quot; for 4-way shadow, and \&quot;drop\&quot; for bottom-right shadow (defaults to \&quot;frame\&quot;)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SwallowKeys" Type="bool" DefaultValue="true">
          <Summary><![CDATA[Handle the keydown/keypress events so they don't propagate (defaults to true)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. Editor&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Handle the keydown/keypress events so they don't propagate (defaults to true)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="UpdateEl" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to update the innerHTML of the bound element when the update completes (defaults to false)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. Editor&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to update the innerHTML of the bound element when the update completes (defaults to false)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Value" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The data value of the underlying field (defaults to \"\")]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetValueProxy&quot;" />
            <Attribute Type="Category" RawValue="&quot;4. Editor&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The data value of the underlying field (defaults to \&quot;\&quot;)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Field" Type="ItemsCollection&lt;Field&gt;">
          <Summary><![CDATA[The Field object (or descendant)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;field&quot;, typeof(ItemCollectionJsonConverter)" />
            <Attribute Type="Category" RawValue="&quot;4. Editor&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="The Field object (or descendant)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Offsets" Type="int[]" DefaultValue="null">
          <Summary><![CDATA[The offsets to use when aligning. Defaults to [0, 0].]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.AlwaysArray" />
            <Attribute Type="TypeConverter" RawValue="typeof(IntArrayConverter)" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="The offsets to use when aligning. Defaults to [0, 0]." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IsSeparate" Access="Protected" Type="bool" DefaultValue="false">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TargetControl" Type="Control">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Hidden" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Target" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The target id to associate with this tooltip.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;4. Editor&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The target id to associate with this tooltip." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TargetProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;target&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Listeners" Type="InlineEditorListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="InlineEditorDirectEvents">
          <Summary><![CDATA[Server-side DirectEventHandlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Server-side DirectEventHandlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods>
        <Method Name="CancelEdit" ParamsRaw="bool remainVisible">
          <Summary><![CDATA[Cancels the editing process and hides the editor without persisting any changes. The field value will be reverted to the original starting value.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Cancels the editing process and hides the editor without persisting any changes. The field value will be reverted to the original starting value." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="CancelEdit">
          <Summary><![CDATA[Cancels the editing process and hides the editor without persisting any changes. The field value will be reverted to the original starting value.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Cancels the editing process and hides the editor without persisting any changes. The field value will be reverted to the original starting value." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="CompleteEdit" ParamsRaw="bool remainVisible">
          <Summary><![CDATA[Cancels the editing process and hides the editor without persisting any changes. The field value will be reverted to the original starting value.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Cancels the editing process and hides the editor without persisting any changes. The field value will be reverted to the original starting value." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="CompleteEdit">
          <Summary><![CDATA[Cancels the editing process and hides the editor without persisting any changes. The field value will be reverted to the original starting value.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Cancels the editing process and hides the editor without persisting any changes. The field value will be reverted to the original starting value." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Realign">
          <Summary><![CDATA[Realigns the editor to the bound field based on the current alignment config value.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Realigns the editor to the bound field based on the current alignment config value." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SetSize" ParamsRaw="int width, int height">
          <Summary><![CDATA[Sets the height and width of this editor.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Sets the height and width of this editor." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="StartEdit" ParamsRaw="string el, string value">
          <Summary><![CDATA[Starts the editing process and shows the editor.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Starts the editing process and shows the editor." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="StartEdit" ParamsRaw="string el">
          <Summary><![CDATA[Starts the editing process and shows the editor.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Starts the editing process and shows the editor." />
          </Attributes>
          <Parameters />
        </Method>
      </Methods>
    </Class>
    <Class Name="EditorAlignmentConfig" Extends="StateManagedItem">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="EditorCollection" Extends="SingleItemCollection&lt;Field&gt;">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Editor" Type="Field">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Object" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="EditorDirectEvents" Extends="HtmlEditorDirectEvents">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="EditorListeners" Extends="HtmlEditorListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="Element" Extends="ScriptClass">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="ElementAnimationConfig" Extends="Dictionary&lt;string, ElementAnimationProperty&gt;">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="ElementAnimationProperty">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="ElementFxConfig" Extends="ExtObject">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Callback" Type="JFunction" DefaultValue="null">
          <Summary><![CDATA[A function called when the effect is finished. Note that effects are queued internally by the Fx class, so do not need to use the callback parameter to specify another effect -- effects can simply be chained together and called in sequence (e.g., el.slideIn().highlight();). The callback is intended for any additional code that should run once a particular effect has completed. The Element being operated upon is passed as the first parameter.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="A function called when the effect is finished. Note that effects are queued internally by the Fx class, so do not need to use the callback parameter to specify another effect -- effects can simply be chained together and called in sequence (e.g., el.slideIn().highlight();). The callback is intended for any additional code that should run once a particular effect has completed. The Element being operated upon is passed as the first parameter." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Duration" Type="double" DefaultValue="0.0">
          <Summary><![CDATA[The length of time (in seconds) that the effect should last]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="0.0" />
            <Attribute Type="Description" RawValue="The length of time (in seconds) that the effect should last" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Easing" Type="Easing" DefaultValue="Easing.EaseOut">
          <Summary><![CDATA[A valid Easing value for the effect]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToCamelLower" />
            <Attribute Type="DefaultValue" RawValue="Easing.EaseOut" />
            <Attribute Type="Description" RawValue="A valid Easing value for the effect" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Scope" Type="string" DefaultValue="&quot;this&quot;">
          <Summary><![CDATA[The scope of the effect function]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;this&quot;" />
            <Attribute Type="Description" RawValue="The scope of the effect function" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ElementListeners" Extends="ComponentListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="DOMActivate" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;, typeof(object), &quot;The Ext.EventObject encapsulating the DOM event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;t&quot;, typeof(object), &quot;HtmlElement. The target of the event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;o&quot;, typeof(object), &quot;The options configuration passed to the addListener call.&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;DOMActivate&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DOMAttrModified" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;, typeof(object), &quot;The Ext.EventObject encapsulating the DOM event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;t&quot;, typeof(object), &quot;HtmlElement. The target of the event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;o&quot;, typeof(object), &quot;The options configuration passed to the addListener call.&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;DOMAttrModified&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DOMCharacterDataModified" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;, typeof(object), &quot;The Ext.EventObject encapsulating the DOM event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;t&quot;, typeof(object), &quot;HtmlElement. The target of the event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;o&quot;, typeof(object), &quot;The options configuration passed to the addListener call.&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;DOMCharacterDataModified&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DOMFocusIn" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;, typeof(object), &quot;The Ext.EventObject encapsulating the DOM event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;t&quot;, typeof(object), &quot;HtmlElement. The target of the event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;o&quot;, typeof(object), &quot;The options configuration passed to the addListener call.&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;DOMFocusIn&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DOMFocusOut" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;, typeof(object), &quot;The Ext.EventObject encapsulating the DOM event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;t&quot;, typeof(object), &quot;HtmlElement. The target of the event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;o&quot;, typeof(object), &quot;The options configuration passed to the addListener call.&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;DOMFocusOut&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DOMNodeInserted" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;, typeof(object), &quot;The Ext.EventObject encapsulating the DOM event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;t&quot;, typeof(object), &quot;HtmlElement. The target of the event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;o&quot;, typeof(object), &quot;The options configuration passed to the addListener call.&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;DOMNodeInserted&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DOMNodeInsertedIntoDocument" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;, typeof(object), &quot;The Ext.EventObject encapsulating the DOM event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;t&quot;, typeof(object), &quot;HtmlElement. The target of the event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;o&quot;, typeof(object), &quot;The options configuration passed to the addListener call.&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;DOMNodeInsertedIntoDocument&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DOMNodeRemoved" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;, typeof(object), &quot;The Ext.EventObject encapsulating the DOM event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;t&quot;, typeof(object), &quot;HtmlElement. The target of the event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;o&quot;, typeof(object), &quot;The options configuration passed to the addListener call.&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;DOMNodeRemoved&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DOMNodeRemovedFromDocument" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;, typeof(object), &quot;The Ext.EventObject encapsulating the DOM event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;t&quot;, typeof(object), &quot;HtmlElement. The target of the event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;o&quot;, typeof(object), &quot;The options configuration passed to the addListener call.&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;DOMNodeRemovedFromDocument&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DOMSubtreeModified" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;, typeof(object), &quot;The Ext.EventObject encapsulating the DOM event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;t&quot;, typeof(object), &quot;HtmlElement. The target of the event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;o&quot;, typeof(object), &quot;The options configuration passed to the addListener call.&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;DOMSubtreeModified&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Abort" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;, typeof(object), &quot;The Ext.EventObject encapsulating the DOM event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;t&quot;, typeof(object), &quot;HtmlElement. The target of the event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;o&quot;, typeof(object), &quot;The options configuration passed to the addListener call.&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;abort&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Blur" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;, typeof(object), &quot;The Ext.EventObject encapsulating the DOM event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;t&quot;, typeof(object), &quot;HtmlElement. The target of the event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;o&quot;, typeof(object), &quot;The options configuration passed to the addListener call.&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;blur&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Change" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;, typeof(object), &quot;The Ext.EventObject encapsulating the DOM event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;t&quot;, typeof(object), &quot;HtmlElement. The target of the event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;o&quot;, typeof(object), &quot;The options configuration passed to the addListener call.&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;change&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Click" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;, typeof(object), &quot;The Ext.EventObject encapsulating the DOM event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;t&quot;, typeof(object), &quot;HtmlElement. The target of the event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;o&quot;, typeof(object), &quot;The options configuration passed to the addListener call.&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;click&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DblClick" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;, typeof(object), &quot;The Ext.EventObject encapsulating the DOM event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;t&quot;, typeof(object), &quot;HtmlElement. The target of the event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;o&quot;, typeof(object), &quot;The options configuration passed to the addListener call.&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;dblclick&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Error" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;, typeof(object), &quot;The Ext.EventObject encapsulating the DOM event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;t&quot;, typeof(object), &quot;HtmlElement. The target of the event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;o&quot;, typeof(object), &quot;The options configuration passed to the addListener call.&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;error&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Focus" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;, typeof(object), &quot;The Ext.EventObject encapsulating the DOM event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;t&quot;, typeof(object), &quot;HtmlElement. The target of the event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;o&quot;, typeof(object), &quot;The options configuration passed to the addListener call.&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;focus&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="KeyDown" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;, typeof(object), &quot;The Ext.EventObject encapsulating the DOM event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;t&quot;, typeof(object), &quot;HtmlElement. The target of the event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;o&quot;, typeof(object), &quot;The options configuration passed to the addListener call.&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;keydown&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="KeyPress" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;, typeof(object), &quot;The Ext.EventObject encapsulating the DOM event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;t&quot;, typeof(object), &quot;HtmlElement. The target of the event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;o&quot;, typeof(object), &quot;The options configuration passed to the addListener call.&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;keypress&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="KeyUp" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;, typeof(object), &quot;The Ext.EventObject encapsulating the DOM event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;t&quot;, typeof(object), &quot;HtmlElement. The target of the event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;o&quot;, typeof(object), &quot;The options configuration passed to the addListener call.&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;keyup&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Load" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;, typeof(object), &quot;The Ext.EventObject encapsulating the DOM event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;t&quot;, typeof(object), &quot;HtmlElement. The target of the event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;o&quot;, typeof(object), &quot;The options configuration passed to the addListener call.&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;load&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MouseDown" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;, typeof(object), &quot;The Ext.EventObject encapsulating the DOM event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;t&quot;, typeof(object), &quot;HtmlElement. The target of the event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;o&quot;, typeof(object), &quot;The options configuration passed to the addListener call.&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;mousedown&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MouseEnter" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;, typeof(object), &quot;The Ext.EventObject encapsulating the DOM event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;t&quot;, typeof(object), &quot;HtmlElement. The target of the event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;o&quot;, typeof(object), &quot;The options configuration passed to the addListener call.&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;mouseenter&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MouseLeave" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;, typeof(object), &quot;The Ext.EventObject encapsulating the DOM event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;t&quot;, typeof(object), &quot;HtmlElement. The target of the event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;o&quot;, typeof(object), &quot;The options configuration passed to the addListener call.&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;mouseleave&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MouseMove" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;, typeof(object), &quot;The Ext.EventObject encapsulating the DOM event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;t&quot;, typeof(object), &quot;HtmlElement. The target of the event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;o&quot;, typeof(object), &quot;The options configuration passed to the addListener call.&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;mousemove&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MouseOut" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;, typeof(object), &quot;The Ext.EventObject encapsulating the DOM event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;t&quot;, typeof(object), &quot;HtmlElement. The target of the event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;o&quot;, typeof(object), &quot;The options configuration passed to the addListener call.&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;mouseout&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MouseOver" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;, typeof(object), &quot;The Ext.EventObject encapsulating the DOM event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;t&quot;, typeof(object), &quot;HtmlElement. The target of the event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;o&quot;, typeof(object), &quot;The options configuration passed to the addListener call.&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;mouseover&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MouseUp" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;, typeof(object), &quot;The Ext.EventObject encapsulating the DOM event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;t&quot;, typeof(object), &quot;HtmlElement. The target of the event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;o&quot;, typeof(object), &quot;The options configuration passed to the addListener call.&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;mouseup&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Reset" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;, typeof(object), &quot;The Ext.EventObject encapsulating the DOM event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;t&quot;, typeof(object), &quot;HtmlElement. The target of the event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;o&quot;, typeof(object), &quot;The options configuration passed to the addListener call.&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;reset&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Resize" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;, typeof(object), &quot;The Ext.EventObject encapsulating the DOM event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;t&quot;, typeof(object), &quot;HtmlElement. The target of the event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;o&quot;, typeof(object), &quot;The options configuration passed to the addListener call.&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;resize&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Scroll" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;, typeof(object), &quot;The Ext.EventObject encapsulating the DOM event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;t&quot;, typeof(object), &quot;HtmlElement. The target of the event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;o&quot;, typeof(object), &quot;The options configuration passed to the addListener call.&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;scroll&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Select" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;, typeof(object), &quot;The Ext.EventObject encapsulating the DOM event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;t&quot;, typeof(object), &quot;HtmlElement. The target of the event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;o&quot;, typeof(object), &quot;The options configuration passed to the addListener call.&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;select&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Submit" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;, typeof(object), &quot;The Ext.EventObject encapsulating the DOM event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;t&quot;, typeof(object), &quot;HtmlElement. The target of the event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;o&quot;, typeof(object), &quot;The options configuration passed to the addListener call.&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;submit&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Unload" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;, typeof(object), &quot;The Ext.EventObject encapsulating the DOM event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;t&quot;, typeof(object), &quot;HtmlElement. The target of the event.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;o&quot;, typeof(object), &quot;The options configuration passed to the addListener call.&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;unload&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="EnumJsonConverter" Extends="ExtJsonConverter">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="Event">
      <Attributes />
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="EventCollection" Extends="List&lt;Event&gt;">
      <Attributes />
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="EventEditForm" Extends="EventEditFormBase">
      <Attributes>
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(DayView), &quot;Build.ToolboxIcons.CalendarPanel.bmp&quot;" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Listeners" Type="EventEditFormListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="EventEditFormDirectEvents">
          <Summary><![CDATA[Server-side Ajax Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Server-side Ajax Event Handlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="EventEditFormBase" Abstract="true" Extends="FormPanelBase">
      <Attributes />
      <ConfigOptions>
        <ConfigOption Name="TitleTextAdd" Type="string" DefaultValue="&quot;Add Event&quot;">
          <Summary><![CDATA[The title during event adding]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. EventEditForm&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;Add Event&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The title during event adding" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TitleTextEdit" Type="string" DefaultValue="&quot;Edit Event&quot;">
          <Summary><![CDATA[The title during event editing]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. EventEditForm&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;Edit Event&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The title during event editing" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="GroupStoreID" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The group store ID to use.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;calendarStore&quot;, JsonMode.ToClientID" />
            <Attribute Type="Category" RawValue="&quot;7. EventEditForm&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="IDReferenceProperty" RawValue="typeof(Store)" />
            <Attribute Type="Description" RawValue="The group store ID to use." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="EventEditFormDirectEvents" Extends="FormPanelDirectEvents">
      <Attributes />
      <ConfigOptions>
        <ConfigOption Name="EventAdd" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after a new event is added]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CalendarPanel), &quot;Ext.calendar.EventEditForm&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(DateTime), &quot;The new record that was added&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;eventadd&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after a new event is added" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EventCancel" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after an event add/edit operation is canceled by the user and no store update took place]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CalendarPanel), &quot;Ext.calendar.EventEditForm&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(DateTime), &quot;The new record that was canceled&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;eventcancel&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after an event add/edit operation is canceled by the user and no store update took place" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EventDelete" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after an event is deleted]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CalendarPanel), &quot;Ext.calendar.EventEditForm&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(DateTime), &quot;The new record that was deleted&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;eventdelete&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after an event is deleted" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EventUpdate" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after an existing event is updated]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CalendarPanel), &quot;Ext.calendar.EventEditForm&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(DateTime), &quot;The new record that was updated&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;eventupdate&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after an existing event is updated" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="EventEditFormListeners" Extends="FormPanelListeners">
      <Attributes />
      <ConfigOptions>
        <ConfigOption Name="EventAdd" Type="ComponentListener">
          <Summary><![CDATA[Fires after a new event is added]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CalendarPanel), &quot;Ext.calendar.EventEditForm&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(DateTime), &quot;The new record that was added&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;eventadd&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after a new event is added" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EventCancel" Type="ComponentListener">
          <Summary><![CDATA[Fires after an event add/edit operation is canceled by the user and no store update took place]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CalendarPanel), &quot;Ext.calendar.EventEditForm&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(DateTime), &quot;The new record that was canceled&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;eventcancel&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after an event add/edit operation is canceled by the user and no store update took place" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EventDelete" Type="ComponentListener">
          <Summary><![CDATA[Fires after an event is deleted]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CalendarPanel), &quot;Ext.calendar.EventEditForm&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(DateTime), &quot;The new record that was deleted&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;eventdelete&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after an event is deleted" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EventUpdate" Type="ComponentListener">
          <Summary><![CDATA[Fires after an existing event is updated]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CalendarPanel), &quot;Ext.calendar.EventEditForm&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(DateTime), &quot;The new record that was updated&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;eventupdate&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after an existing event is updated" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="EventEditWindow" Extends="EventEditWindowBase">
      <Attributes>
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(DayView), &quot;Build.ToolboxIcons.CalendarPanel.bmp&quot;" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Listeners" Type="EventEditWindowListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="EventEditWindowDirectEvents">
          <Summary><![CDATA[Server-side Ajax Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Server-side Ajax Event Handlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="EventEditWindowBase" Abstract="true" Extends="WindowBase">
      <Attributes />
      <ConfigOptions>
        <ConfigOption Name="TitleTextAdd" Type="string" DefaultValue="&quot;Add Event&quot;">
          <Summary><![CDATA[The title during event adding]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;8. EventEditWindow&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;Add Event&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The title during event adding" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TitleTextEdit" Type="string" DefaultValue="&quot;Edit Event&quot;">
          <Summary><![CDATA[The title during event editing]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;8. EventEditWindow&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;Edit Event&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The title during event editing" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SavingMessage" Type="string" DefaultValue="&quot;Saving changes...&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;8. EventEditWindow&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;Saving changes...&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DeletingMessage" Type="string" DefaultValue="&quot;Deleting event...&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;8. EventEditWindow&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;Deleting event...&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="GroupStoreID" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The group store ID to use.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;calendarStore&quot;, JsonMode.ToClientID" />
            <Attribute Type="Category" RawValue="&quot;8. EventEditWindow&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="IDReferenceProperty" RawValue="typeof(Store)" />
            <Attribute Type="Description" RawValue="The group store ID to use." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Width" Modifier="Override" Type="Unit" DefaultValue="typeof(Unit), &quot;&quot;">
          <Summary><![CDATA[The width of this component in pixels (defaults to auto).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetWidth&quot;" />
            <Attribute Type="Category" RawValue="&quot;7. Window&quot;" />
            <Attribute Type="DefaultValue" RawValue="typeof(Unit), &quot;&quot;" />
            <Attribute Type="Description" RawValue="The width of this component in pixels (defaults to auto)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Height" Modifier="Override" Type="Unit" DefaultValue="typeof(Unit), &quot;&quot;">
          <Summary><![CDATA[The height of this component in pixels (defaults to auto).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetHeight&quot;" />
            <Attribute Type="Category" RawValue="&quot;7. Window&quot;" />
            <Attribute Type="DefaultValue" RawValue="typeof(Unit), &quot;&quot;" />
            <Attribute Type="Description" RawValue="The height of this component in pixels (defaults to auto)." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="EventEditWindowDirectEvents" Extends="WindowDirectEvents">
      <Attributes />
      <ConfigOptions>
        <ConfigOption Name="EventAdd" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after a new event is added]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CalendarPanel), &quot;Ext.calendar.EventEditWindow&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(DateTime), &quot;The new record that was added&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;eventadd&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after a new event is added" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EventCancel" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after an event add/edit operation is canceled by the user and no store update took place]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CalendarPanel), &quot;Ext.calendar.EventEditWindow&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(DateTime), &quot;The new record that was canceled&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;eventcancel&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after an event add/edit operation is canceled by the user and no store update took place" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EventDelete" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after an event is deleted]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CalendarPanel), &quot;Ext.calendar.EventEditWindow&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(DateTime), &quot;The new record that was deleted&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;eventdelete&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after an event is deleted" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EventUpdate" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after an existing event is updated]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CalendarPanel), &quot;Ext.calendar.EventEditWindow&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(DateTime), &quot;The new record that was updated&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;eventupdate&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after an existing event is updated" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EditDetails" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when the user selects the option in this window to continue editing in the detailed edit form (by default, an instance of Ext.calendar.EventEditForm. Handling code should hide this window and transfer the current event record to the appropriate instance of the detailed form by showing it and calling loadRecord.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CalendarPanel), &quot;Ext.calendar.EventEditWindow&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(DateTime), &quot;The record that is currently being edited&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;editdetails&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the user selects the option in this window to continue editing in the detailed edit form (by default, an instance of Ext.calendar.EventEditForm. Handling code should hide this window and transfer the current event record to the appropriate instance of the detailed form by showing it and calling loadRecord." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="EventEditWindowListeners" Extends="WindowListeners">
      <Attributes />
      <ConfigOptions>
        <ConfigOption Name="EventAdd" Type="ComponentListener">
          <Summary><![CDATA[Fires after a new event is added]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CalendarPanel), &quot;Ext.calendar.EventEditWindow&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(DateTime), &quot;The new record that was added&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;eventadd&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after a new event is added" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EventCancel" Type="ComponentListener">
          <Summary><![CDATA[Fires after an event add/edit operation is canceled by the user and no store update took place]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CalendarPanel), &quot;Ext.calendar.EventEditWindow&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(DateTime), &quot;The new record that was canceled&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;eventcancel&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after an event add/edit operation is canceled by the user and no store update took place" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EventDelete" Type="ComponentListener">
          <Summary><![CDATA[Fires after an event is deleted]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CalendarPanel), &quot;Ext.calendar.EventEditWindow&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(DateTime), &quot;The new record that was deleted&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;eventdelete&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after an event is deleted" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EventUpdate" Type="ComponentListener">
          <Summary><![CDATA[Fires after an existing event is updated]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CalendarPanel), &quot;Ext.calendar.EventEditWindow&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(DateTime), &quot;The new record that was updated&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;eventupdate&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after an existing event is updated" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EditDetails" Type="ComponentListener">
          <Summary><![CDATA[Fires when the user selects the option in this window to continue editing in the detailed edit form (by default, an instance of Ext.calendar.EventEditForm. Handling code should hide this window and transfer the current event record to the appropriate instance of the detailed form by showing it and calling loadRecord.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(CalendarPanel), &quot;Ext.calendar.EventEditWindow&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(DateTime), &quot;The record that is currently being edited&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;editdetails&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the user selects the option in this window to continue editing in the detailed edit form (by default, an instance of Ext.calendar.EventEditForm. Handling code should hide this window and transfer the current event record to the appropriate instance of the detailed form by showing it and calling loadRecord." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="EventMask" Extends="LoadMask">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Msg" Modifier="Override" Type="string" DefaultValue="&quot;Working...&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="DefaultValue" RawValue="&quot;Working...&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Target" Type="MaskTarget" DefaultValue="MaskTarget.Page">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="DefaultValue" RawValue="MaskTarget.Page" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CustomTarget" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MinDelay" Type="int" DefaultValue="0">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="0" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="EventStore" Extends="Store">
      <Attributes />
      <ConfigOptions>
        <ConfigOption Name="DateFormat" Type="string" DefaultValue="null">
          <Summary><![CDATA[The default date format string which can be overriden for localization support. The format must be valid according to Date.parseDate (defaults to 'd').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;3. EventStore&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="The default date format string which can be overriden for localization support. The format must be valid according to Date.parseDate (defaults to 'd')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MemoryProxy" Modifier="Override" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;proxy&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ExcessItemsException" Extends="Exception">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="ExtJsonConverter" Abstract="true" Extends="JsonConverter">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="FadeIn" Extends="Fx">
      <Summary><![CDATA[Fade an element in (from transparent to opaque). The ending opacity can be specified using the 'endOpacity' config option. ]]></Summary>
      <Attributes>
        <Attribute Type="Description" RawValue="Fade an element in (from transparent to opaque). The ending opacity can be specified using the 'endOpacity' config option. " />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="FxName" Modifier="Override" Type="string">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="FadeInConfig" Extends="FxConfig">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="EndOpacity" Type="float" DefaultValue="1">
          <Summary><![CDATA[The ending opacity]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="1" />
            <Attribute Type="Description" RawValue="The ending opacity" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="FadeOut" Extends="Fx">
      <Summary><![CDATA[Fade an element out (from opaque to transparent). The ending opacity can be specified using the 'endOpacit' config option. Note that IE may require useDisplay:true in order to redisplay correctly. ]]></Summary>
      <Attributes>
        <Attribute Type="Description" RawValue="Fade an element out (from opaque to transparent). The ending opacity can be specified using the 'endOpacit' config option. Note that IE may require useDisplay:true in order to redisplay correctly. " />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="FxName" Modifier="Override" Type="string">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="FadeOutConfig" Extends="FxConfig">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="EndOpacity" Type="float" DefaultValue="0">
          <Summary><![CDATA[The ending opacity]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="0" />
            <Attribute Type="Description" RawValue="The ending opacity" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="Field" Abstract="true" Extends="BoxComponentBase" Inherits="IAutoPostBack,IXPostBackDataHandler,IPostBackEventHandler,IToolbarItem,IField,IIcon,IAjaxPostBackEventHandler">
      <Summary><![CDATA[Base Class for Form Fields that provides default event handling, sizing, value handling and other functionality.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" RawValue="Base Class for Form Fields that provides default event handling, sizing, value handling and other functionality." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="AutoPostBack" Type="bool" DefaultValue="false">
          <Summary><![CDATA[TextBox_AutoPostBack]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="TextBox_AutoPostBack" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CausesValidation" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Gets or sets a value indicating whether validation is performed when the control is set to validate when a postback occurs.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="Gets or sets a value indicating whether validation is performed when the control is set to validate when a postback occurs." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DataIndex" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[(optional) The name of the field in the grid's Ext.data.Store's Ext.data.Record definition from which to draw the column's value.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="(optional) The name of the field in the grid's Ext.data.Store's Ext.data.Record definition from which to draw the column's value." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ValidationGroup" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[Gets or Sets the Controls ValidationGroup]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="Gets or Sets the Controls ValidationGroup" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Name" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The field's HTML name attribute (defaults to ''). Note: this property must be set if this field is to be automatically included with form submit().]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The field's HTML name attribute (defaults to ''). Note: this property must be set if this field is to be automatically included with form submit()." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AutoCreate" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A DomHelper element spec (defaults to {tag: 'input', type: 'text', size: '20', autocomplete: 'off'}).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="A DomHelper element spec (defaults to {tag: 'input', type: 'text', size: '20', autocomplete: 'off'})." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="FieldClass" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The default CSS class for the field (defaults to 'x-form-field').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The default CSS class for the field (defaults to 'x-form-field')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="FocusClass" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The CSS class to use when the field receives focus (defaults to 'x-form-focus').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The CSS class to use when the field receives focus (defaults to 'x-form-focus')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HideWithLabel" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to hide the label when the field hide]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="True to hide the label when the field hide" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="InvalidClass" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The CSS class to use when marking a field invalid (defaults to 'x-form-invalid').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The CSS class to use when marking a field invalid (defaults to 'x-form-invalid')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="InvalidText" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The error text to use when marking a field invalid and no message is provided (defaults to 'The value in this field is invalid').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Description" RawValue="The error text to use when marking a field invalid and no message is provided (defaults to 'The value in this field is invalid')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MsgFx" Type="string" DefaultValue="&quot;normal&quot;">
          <Summary><![CDATA[EXPERIMENTAL The effect used when displaying a validation message under the field (defaults to 'normal').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;normal&quot;" />
            <Attribute Type="Description" RawValue="EXPERIMENTAL The effect used when displaying a validation message under the field (defaults to 'normal')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MsgTarget" Type="MessageTarget" DefaultValue="MessageTarget.Qtip">
          <Summary><![CDATA[The location where error text should display. (defaults to 'Qtip').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(MessageTarget)" />
            <Attribute Type="DefaultValue" RawValue="MessageTarget.Qtip" />
            <Attribute Type="Description" RawValue="The location where error text should display. (defaults to 'Qtip')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ReadOnly" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to mark the field as readOnly in HTML (defaults to false) -- Note: this only sets the element's readOnly DOM attribute.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetReadOnly&quot;" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="Bindable" RawValue="true" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to mark the field as readOnly in HTML (defaults to false) -- Note: this only sets the element's readOnly DOM attribute." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="PreventMark" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to disable marking the field invalid]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to disable marking the field invalid" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TabIndex" Modifier="Override" Type="short" DefaultValue="(short)0">
          <Summary><![CDATA[The tabIndex for this field. Note this only applies to fields that are rendered, not those which are built via applyTo (defaults to undefined).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="DefaultValue" RawValue="(short)0" />
            <Attribute Type="Description" RawValue="The tabIndex for this field. Note this only applies to fields that are rendered, not those which are built via applyTo (defaults to undefined)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ValidateOnBlur" Type="bool" DefaultValue="true">
          <Summary><![CDATA[Whether the field should validate when it loses focus (defaults to true).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="Whether the field should validate when it loses focus (defaults to true)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ValidateDelay" Type="int" DefaultValue="250">
          <Summary><![CDATA[The length of time in milliseconds after user input begins until validation is initiated (defaults to 250).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="DefaultValue" RawValue="250" />
            <Attribute Type="Description" RawValue="The length of time in milliseconds after user input begins until validation is initiated (defaults to 250)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ValidationEvent" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The event that should initiate field validation. Set to false to disable automatic validation (defaults to 'keyup').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The event that should initiate field validation. Set to false to disable automatic validation (defaults to 'keyup')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ValidateOnEvent" Type="bool" DefaultValue="true">
          <Summary><![CDATA[Set to false to disable automatic validation]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;validationEvent&quot;" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="Set to false to disable automatic validation" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IndicatorText" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The indicator text.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetIndicatorText&quot;" />
            <Attribute Type="Description" RawValue="The indicator text." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IndicatorCls" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The indicator css class.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetIndicatorCls&quot;" />
            <Attribute Type="Description" RawValue="The indicator css class." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IndicatorIconCls" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The indicator icon class.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetIndicatorIconCls&quot;" />
            <Attribute Type="Description" RawValue="The indicator icon class." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IndicatorIcon" Type="Icon" DefaultValue="Icon.None">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="DefaultValue" RawValue="Icon.None" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetIndicatorIconCls&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IndicatorIconClsProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;indicatorIconCls&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IndicatorTip" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The indicator tip.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetIndicatorTip&quot;" />
            <Attribute Type="Description" RawValue="The indicator tip." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Note" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The note.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetNote&quot;" />
            <Attribute Type="Description" RawValue="The note." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="NoteCls" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The note css class.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetNoteCls&quot;" />
            <Attribute Type="Description" RawValue="The note css class." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="NoteAlign" Type="NoteAlign" DefaultValue="NoteAlign.Down">
          <Summary><![CDATA[Note align]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="DefaultValue" RawValue="NoteAlign.Down" />
            <Attribute Type="Description" RawValue="Note align" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="NoteEncode" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to encode note text]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to encode note text" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SubmitValue" Type="bool" DefaultValue="true">
          <Summary><![CDATA[False to clear the name attribute on the field so that it is not submitted during a form post. If a hiddenName is specified, setting this to true will cause both the hidden field and the element to be submitted. Defaults to undefined.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="False to clear the name attribute on the field so that it is not submitted during a form post. If a hiddenName is specified, setting this to true will cause both the hidden field and the element to be submitted. Defaults to undefined." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Value" Type="object" DefaultValue="null">
          <Summary><![CDATA[A value to initialize this field with.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetValueProxy&quot;" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="A value to initialize this field with." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ValueProxy" Access="ProtectedInternal" Type="object" DefaultValue="null">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;value&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RawValue" Type="object" DefaultValue="null">
          <Summary><![CDATA[The raw data value which may or may not be a valid, defined value. To return a normalized value see Value property.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetRawValueProxy&quot;" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="The raw data value which may or may not be a valid, defined value. To return a normalized value see Value property." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EmptyValue" Type="object" DefaultValue="null">
          <Summary><![CDATA[The fields null value.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="The fields null value." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IsRemoteValidation" Type="bool" DefaultValue="false">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RemoteValidation" Type="RemoteValidationDirectEvent">
          <Attributes>
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="ConfigOption" RawValue="&quot;remoteValidationOptions&quot;, JsonMode.Object" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="GetErrors" Type="JFunction">
          <Summary><![CDATA[Runs this field's validators and returns an array of error messages for any validation failures.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="Runs this field's validators and returns an array of error messages for any validation failures." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods>
        <Method Name="Clear">
          <Summary><![CDATA[Clears the Field value.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Clears the Field value." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="ClearInvalid">
          <Summary><![CDATA[Clear any invalid styles/messages for this field]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Clear any invalid styles/messages for this field" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="MarkInvalid">
          <Summary><![CDATA[Mark this field as invalid, using msgTarget to determine how to display the error and applying invalidClass to the field's element.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Mark this field as invalid, using msgTarget to determine how to display the error and applying invalidClass to the field's element." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="MarkInvalid" ParamsRaw="string msg">
          <Summary><![CDATA[Mark this field as invalid, using msgTarget to determine how to display the error and applying invalidClass to the field's element.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Mark this field as invalid, using msgTarget to determine how to display the error and applying invalidClass to the field's element." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Reset">
          <Summary><![CDATA[Resets the current field value to the originally loaded value and clears any validation messages]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Resets the current field value to the originally loaded value and clears any validation messages" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SetRawValue" ParamsRaw="object value">
          <Summary><![CDATA[Sets the underlying DOM field's value directly, bypassing validation. To set the value with validation see setValue.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Sets the underlying DOM field's value directly, bypassing validation. To set the value with validation see setValue." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SetNote" ParamsRaw="string note, bool encode">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="ShowNote">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="HideNote">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="ShowIndicator">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="HideIndicator">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="ClearIndicator">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="AlignIndicator">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="MarkAsValid">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="MarkAsValid" ParamsRaw="bool abortRequest">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" />
          </Attributes>
          <Parameters />
        </Method>
      </Methods>
    </Class>
    <Class Name="FieldDirectEvents" Extends="BoxComponentDirectEvents">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Blur" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when this field loses input focus.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Field), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;blur&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when this field loses input focus." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Change" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires just before the field blurs if the field value has changed.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Field), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;newValue&quot;, typeof(object), &quot;The new value&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;oldValue&quot;, typeof(object), &quot;The original value&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;change&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires just before the field blurs if the field value has changed." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Focus" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when this field receives input focus.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Field), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;focus&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when this field receives input focus." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Invalid" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after the field has been marked as invalid.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Field), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;msg&quot;, typeof(string), &quot;the validation message&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;invalid&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the field has been marked as invalid." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SpecialKey" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when any key related to navigation (arrows, tab, enter, esc, etc.) is pressed.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Field), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object), &quot;The event object&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;specialkey&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when any key related to navigation (arrows, tab, enter, esc, etc.) is pressed." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Valid" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after the field has been validated with no errors.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Field), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;valid&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the field has been validated with no errors." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RemoteValidationFailure" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Field), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;response&quot;, typeof(object), &quot;&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;e&quot;, typeof(Field), &quot;&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;o&quot;, typeof(Field), &quot;&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;remotevalidationfailure&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RemoteValidationValid" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Field), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;response&quot;, typeof(object), &quot;&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;responseObject&quot;, typeof(object), &quot;&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;result&quot;, typeof(object), &quot;&quot;" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;o&quot;, typeof(Field), &quot;&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;remotevalidationvalid&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RemoteValidationInvalid" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Field), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;response&quot;, typeof(object), &quot;&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;responseObject&quot;, typeof(object), &quot;&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;result&quot;, typeof(object), &quot;&quot;" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;o&quot;, typeof(Field), &quot;&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;remotevalidationinvalid&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeRemoteValidation" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Field), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;options&quot;, typeof(object), &quot;&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeremotevalidation&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="FieldListeners" Extends="BoxComponentListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Blur" Type="ComponentListener">
          <Summary><![CDATA[Fires when this field loses input focus.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Field), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;blur&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when this field loses input focus." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Change" Type="ComponentListener">
          <Summary><![CDATA[Fires just before the field blurs if the field value has changed.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Field), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;newValue&quot;, typeof(object), &quot;The new value&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;oldValue&quot;, typeof(object), &quot;The original value&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;change&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires just before the field blurs if the field value has changed." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Focus" Type="ComponentListener">
          <Summary><![CDATA[Fires when this field receives input focus.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Field), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;focus&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when this field receives input focus." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Invalid" Type="ComponentListener">
          <Summary><![CDATA[Fires after the field has been marked as invalid.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Field), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;msg&quot;, typeof(string), &quot;the validation message&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;invalid&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the field has been marked as invalid." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SpecialKey" Type="ComponentListener">
          <Summary><![CDATA[Fires when any key related to navigation (arrows, tab, enter, esc, etc.) is pressed.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Field), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object), &quot;The event object&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;specialkey&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when any key related to navigation (arrows, tab, enter, esc, etc.) is pressed." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Valid" Type="ComponentListener">
          <Summary><![CDATA[Fires after the field has been validated with no errors.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Field), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;valid&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the field has been validated with no errors." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RemoteValidationFailure" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Field), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;response&quot;, typeof(object), &quot;&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;e&quot;, typeof(Field), &quot;&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;o&quot;, typeof(Field), &quot;&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;remotevalidationfailure&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RemoteValidationValid" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Field), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;response&quot;, typeof(object), &quot;&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;responseObject&quot;, typeof(object), &quot;&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;result&quot;, typeof(object), &quot;&quot;" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;o&quot;, typeof(Field), &quot;&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;remotevalidationvalid&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RemoteValidationInvalid" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Field), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;response&quot;, typeof(object), &quot;&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;responseObject&quot;, typeof(object), &quot;&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;result&quot;, typeof(object), &quot;&quot;" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;o&quot;, typeof(Field), &quot;&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;remotevalidationinvalid&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeRemoteValidation" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Field), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;options&quot;, typeof(object), &quot;&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeremotevalidation&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="FieldReplicator" Extends="Plugin" Inherits="ICustomConfigSerialization">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(FieldReplicator), &quot;Build.ToolboxIcons.Plugin.bmp&quot;" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:FieldReplicator runat=\&quot;server\&quot; /&gt;&quot;" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="FieldSet" Extends="Panel">
      <Summary><![CDATA[Standard content Container used for grouping form fields.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:FieldSet runat=\&quot;server\&quot;&gt;&lt;Items&gt;&lt;/Items&gt;&lt;/{0}:FieldSet&gt;&quot;" />
        <Attribute Type="DefaultEvent" RawValue="&quot;Width&quot;" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(FieldSet), &quot;Build.ToolboxIcons.FieldSet.bmp&quot;" />
        <Attribute Type="Designer" RawValue="typeof(FieldSetDesigner)" />
        <Attribute Type="Description" RawValue="Standard content Container used for grouping form fields." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="AnimCollapse" Modifier="Override" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to render a checkbox into the fieldset frame just in front of the legend (defaults to false). The fieldset will be expanded or collapsed when the checkbox is toggled.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. FieldSet&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to render a checkbox into the fieldset frame just in front of the legend (defaults to false). The fieldset will be expanded or collapsed when the checkbox is toggled." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CheckboxName" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[True to render a checkbox into the fieldset frame just in front of the legend (defaults to false). The fieldset will be expanded or collapsed when the checkbox is toggled.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. FieldSet&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="True to render a checkbox into the fieldset frame just in front of the legend (defaults to false). The fieldset will be expanded or collapsed when the checkbox is toggled." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CheckboxToggle" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to render a checkbox into the fieldset frame just in front of the legend (defaults to false). The fieldset will be expanded or collapsed when the checkbox is toggled.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. FieldSet&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to render a checkbox into the fieldset frame just in front of the legend (defaults to false). The fieldset will be expanded or collapsed when the checkbox is toggled." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ItemCls" Modifier="Override" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A css class to apply to the x-form-items of fields. This property cascades to child containers.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. FieldSet&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="A css class to apply to the x-form-items of fields. This property cascades to child containers." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="LabelWidth" Modifier="Override" Type="int" DefaultValue="75">
          <Summary><![CDATA[The width of labels. This property cascades to child containers.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. FieldSet&quot;" />
            <Attribute Type="DefaultValue" RawValue="75" />
            <Attribute Type="Description" RawValue="The width of labels. This property cascades to child containers." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="FieldSetDirectEvents" Extends="PanelDirectEvents">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="FieldSetListeners" Extends="PanelListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="FieldTrigerCollection" Extends="StateManagedCollection&lt;FieldTrigger&gt;">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="FieldTrigger" Extends="StateManagedItem">
      <Attributes>
        <Attribute Type="Meta" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Tag" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A trigger tag]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="A trigger tag" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HideTrigger" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to hide the trigger element and display only the base text field (defaults to false).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to hide the trigger element and display only the base text field (defaults to false)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TriggerCls" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A CSS class to apply to the trigger.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="A CSS class to apply to the trigger." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Icon" Type="TriggerIcon" DefaultValue="TriggerIcon.Combo">
          <Summary><![CDATA[The icon to use in the trigger. See also, IconCls to set an icon with a custom Css class.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="TriggerIcon.Combo" />
            <Attribute Type="Description" RawValue="The icon to use in the trigger. See also, IconCls to set an icon with a custom Css class." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IconCls" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A css class which sets a background image to be used as the icon for this button.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="A css class which sets a background image to be used as the icon for this button." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IconClsProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;iconCls&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Qtip" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[Quick tip.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Quick tip." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="FileUploadField" Extends="TextFieldBase" Inherits="IIcon">
      <Summary><![CDATA[File upload field]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ControlValueProperty" RawValue="&quot;FileBytes&quot;" />
        <Attribute Type="ValidationProperty" RawValue="&quot;FileName&quot;" />
        <Attribute Type="AspNetHostingPermission" RawValue="SecurityAction.LinkDemand, Level = AspNetHostingPermissionLevel.Minimal, Unrestricted = false" />
        <Attribute Type="AspNetHostingPermissionAttribute" RawValue="SecurityAction.InheritanceDemand, Level = AspNetHostingPermissionLevel.Minimal, Unrestricted = false" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:FileUploadField runat=\&quot;server\&quot; /&gt;&quot;" />
        <Attribute Type="DefaultEvent" RawValue="&quot;FileSelected&quot;" />
        <Attribute Type="ParseChildren" RawValue="true" />
        <Attribute Type="PersistChildren" RawValue="false" />
        <Attribute Type="SupportsEventValidation" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(FileUploadField), &quot;Build.ToolboxIcons.FileUploadField.bmp&quot;" />
        <Attribute Type="Description" RawValue="File upload field" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Text" Modifier="Override" Type="string" DefaultValue="null">
          <Summary><![CDATA[The Text value to initialize this field with.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetText&quot;" />
            <Attribute Type="Category" RawValue="&quot;7. FileUploadField&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Bindable" RawValue="true, BindingDirection.TwoWay" />
            <Attribute Type="Description" RawValue="The Text value to initialize this field with." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ButtonText" Type="string" DefaultValue="&quot;Browse...&quot;">
          <Summary><![CDATA[The button text to display on the upload button (defaults to 'Browse...'). Note that if you supply a value for ButtonCfg, the ButtonCfg.Text value will be used instead if available.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetButtonText&quot;" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;Browse...&quot;" />
            <Attribute Type="Category" RawValue="&quot;7. FileUploadField&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Description" RawValue="The button text to display on the upload button (defaults to 'Browse...'). Note that if you supply a value for ButtonCfg, the ButtonCfg.Text value will be used instead if available." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ButtonOnly" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to display the file upload field as a button with no visible text field (defaults to false).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. FileUploadField&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to display the file upload field as a button with no visible text field (defaults to false)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ButtonOffset" Type="int" DefaultValue="3">
          <Summary><![CDATA[The number of pixels of space reserved between the button and the text field (defaults to 3).  Note that this only applies if ButtonOnly=false.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. FileUploadField&quot;" />
            <Attribute Type="DefaultValue" RawValue="3" />
            <Attribute Type="Description" RawValue="The number of pixels of space reserved between the button and the text field (defaults to 3).  Note that this only applies if ButtonOnly=false." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ReadOnly" Modifier="Override" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to mark the field as readOnly in HTML (defaults to false) -- Note: this only sets the element's readOnly DOM attribute.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetReadOnly&quot;" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. FileUploadField&quot;" />
            <Attribute Type="Bindable" RawValue="true" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="True to mark the field as readOnly in HTML (defaults to false) -- Note: this only sets the element's readOnly DOM attribute." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Icon" Modifier="Override" Type="Icon" DefaultValue="Icon.None">
          <Summary><![CDATA[The icon to use in the Button. See also, IconCls to set an icon with a custom Css class.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;7. FileUploadField&quot;" />
            <Attribute Type="DefaultValue" RawValue="Icon.None" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetIconClass&quot;" />
            <Attribute Type="Description" RawValue="The icon to use in the Button. See also, IconCls to set an icon with a custom Css class." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IconClsProxy" Modifier="Override" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;iconCls&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IconCls" Modifier="Override" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A css class which sets a background image to be used as the icon for this button.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetIconClass&quot;" />
            <Attribute Type="Category" RawValue="&quot;7. FileUploadField&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="A css class which sets a background image to be used as the icon for this button." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Listeners" Type="FileUploadFieldListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="FileUploadFieldDirectEvents">
          <Summary><![CDATA[Server-side Ajax Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="Description" RawValue="Server-side Ajax Event Handlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="FileUploadFieldDirectEvents" Extends="TextFieldDirectEvents">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="FileSelected" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when the underlying file input field's value has changed from the user selecting a new file from the system file selection dialog.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Field), &quot;This file upload field&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;value&quot;, typeof(int), &quot;The file value returned by the underlying file input field&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;fileselected&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the underlying file input field's value has changed from the user selecting a new file from the system file selection dialog." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="FileUploadFieldListeners" Extends="TextFieldListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="FileSelected" Type="ComponentListener">
          <Summary><![CDATA[Fires when the underlying file input field's value has changed from the user selecting a new file from the system file selection dialog.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Field), &quot;This file upload field&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;value&quot;, typeof(int), &quot;The file value returned by the underlying file input field&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;fileselected&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the underlying file input field's value has changed from the user selecting a new file from the system file selection dialog." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="FilterCondition">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="FilterConditionCollection" Extends="List&lt;FilterCondition&gt;">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="FilterConditions">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="FitLayout" Extends="ContainerLayout">
      <Summary><![CDATA[This is a base class for layouts that contain a single items that automatically expands to fill the layout's content Container. This class is intended to be extended or created via the layout:'fit' Ext.Container.layout config, and should generally not need to be created directly via the new keyword. FitLayout does not have any direct config options (other than inherited ones). To fit a panel to a content Container using FitLayout, simply set layout:'fit' on the content Container and add a single panel to it. If the content Container has multiple panels, only the first one will be displayed.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:FitLayout runat=\&quot;server\&quot;&gt;&lt;Items&gt;&lt;{0}:Panel runat=\&quot;server\&quot; Title=\&quot;Title\&quot;&gt;&lt;Items&gt;&lt;/Items&gt;&lt;/{0}:Panel&gt;&lt;/Items&gt;&lt;/{0}:FitLayout&gt;&quot;" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(FitLayout), &quot;Build.ToolboxIcons.Layout.bmp&quot;" />
        <Attribute Type="Description" RawValue="This is a base class for layouts that contain a single items that automatically expands to fill the layout's content Container. This class is intended to be extended or created via the layout:'fit' Ext.Container.layout config, and should generally not need to be created directly via the new keyword. FitLayout does not have any direct config options (other than inherited ones). To fit a panel to a content Container using FitLayout, simply set layout:'fit' on the content Container and add a single panel to it. If the content Container has multiple panels, only the first one will be displayed." />
        <Attribute Type="Designer" RawValue="typeof(FitLayoutDesigner)" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="FlashComponent" Extends="BoxComponentBase">
      <Summary><![CDATA[A Flash Component]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxItem" RawValue="true" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(FlashComponent), &quot;Build.ToolboxIcons.FlashComponent.bmp&quot;" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:FlashComponent runat=\&quot;server\&quot;&gt;&lt;/{0}:FlashComponent&gt;&quot;" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="Description" RawValue="A Flash Component" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="BackgroundColor" Type="string" DefaultValue="&quot;#ffffff&quot;">
          <Summary><![CDATA[The background color. Defaults to '#ffffff' (white).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;5. FlashComponent&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;#ffffff&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The background color. Defaults to '#ffffff' (white)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ExpressInstall" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to prompt the user to install flash if not installed. Note that this uses Ext.FlashComponent.EXPRESS_INSTALL_URL, which should be set to the local resource. Defaults to false.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. FlashComponent&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to prompt the user to install flash if not installed. Note that this uses Ext.FlashComponent.EXPRESS_INSTALL_URL, which should be set to the local resource. Defaults to false." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="FlashVersion" Type="string" DefaultValue="&quot;9.0.45&quot;">
          <Summary><![CDATA[Indicates the version the flash content was published for. Defaults to '9.0.45'.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;5. FlashComponent&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;9.0.45&quot;" />
            <Attribute Type="Description" RawValue="Indicates the version the flash content was published for. Defaults to '9.0.45'." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Url" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The URL of the swf object to include. Defaults to undefined.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Ignore" />
            <Attribute Type="Category" RawValue="&quot;5. FlashComponent&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The URL of the swf object to include. Defaults to undefined." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="UrlProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;url&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="FlashVars" Type="ParameterCollection">
          <Summary><![CDATA[A set of key value pairs to be passed to the flash object as flash variables.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;5. FlashComponent&quot;" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ArrayToObject" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="A set of key value pairs to be passed to the flash object as flash variables." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="FlashParams" Type="ParameterCollection">
          <Summary><![CDATA[A set of key value pairs to be passed to the flash object as parameters.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;5. FlashComponent&quot;" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ArrayToObject" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="A set of key value pairs to be passed to the flash object as parameters." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Listeners" Type="FlashComponentListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="FlashComponentDirectEvents">
          <Summary><![CDATA[Server-side Ajax Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Server-side Ajax Event Handlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="FlashComponentDirectEvents" Extends="BoxComponentDirectEvents">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Initialize" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after the flash is initialized.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Component), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;initialize&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the flash is initialized." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="FlashComponentListeners" Extends="BoxComponentListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Initialize" Type="ComponentListener">
          <Summary><![CDATA[Fires after the flash is initialized.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Component), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;initialize&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the flash is initialized." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="FormLayout" Extends="AnchorLayout">
      <Summary><![CDATA[This is a layout specifically designed for creating forms.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:FormLayout runat=\&quot;server\&quot;&gt;&lt;Anchors&gt;&lt;{0}:Anchor&gt;&lt;{0}:TextField runat=\&quot;server\&quot; FieldLabel=\&quot;Field1\&quot; /&gt;&lt;/{0}:Anchor&gt;&lt;/Anchors&gt;&lt;/{0}:FormLayout&gt;&quot;" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(FormLayout), &quot;Build.ToolboxIcons.Layout.bmp&quot;" />
        <Attribute Type="Description" RawValue="This is a layout specifically designed for creating forms." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="TrackLabels" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to show/hide the field label when the field is hidden. Defaults to true.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="True to show/hide the field label when the field is hidden. Defaults to true." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="LayoutConfig" Modifier="Override" Access="ProtectedInternal" Type="LayoutConfig" DefaultValue="null">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Object" />
            <Attribute Type="Browsable" RawValue="false" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HideLabels" Modifier="Override" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to hide field labels by default (defaults to false).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. FormLayout&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to hide field labels by default (defaults to false)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ItemCls" Modifier="Override" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A CSS class to add to the div wrapper that contains each field label and field element (the default class is 'x-form-item' and itemCls will be added to that)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. FormLayout&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="A CSS class to add to the div wrapper that contains each field label and field element (the default class is 'x-form-item' and itemCls will be added to that)" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="FormLayoutConfig" Extends="LayoutConfig">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="TrackLabels" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to show/hide the field label when the field is hidden. Defaults to true.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="True to show/hide the field label when the field is hidden. Defaults to true." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ElementStyle" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="LabelSeparator" Type="string" DefaultValue="&quot;:&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;:&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="LabelStyle" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="FormPanel" Extends="FormPanelBase">
      <Summary><![CDATA[Standard form container.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:FormPanel runat=\&quot;server\&quot; Title=\&quot;Title\&quot; Padding=\&quot;5\&quot; ButtonAlign=\&quot;Right\&quot; Height=\&quot;185\&quot; Width=\&quot;300\&quot;&gt;&lt;Items&gt;&lt;{0}:TextField runat=\&quot;server\&quot; FieldLabel=\&quot;Label\&quot; AnchorHorizontal=\&quot;100%\&quot; /&gt;&lt;/Items&gt;&lt;Buttons&gt;&lt;{0}:Button runat=\&quot;server\&quot; Icon=\&quot;Disk\&quot; Text=\&quot;Submit\&quot; /&gt;&lt;/Buttons&gt;&lt;/ext:FormPanel&gt;&quot;" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(FormPanel), &quot;Build.ToolboxIcons.FormPanel.bmp&quot;" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="Description" RawValue="Standard form container." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Listeners" Type="FormPanelListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="FormPanelDirectEvents">
          <Summary><![CDATA[Server-side Ajax Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Server-side Ajax Event Handlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="FormPanelBase" Abstract="true" Extends="PanelBase">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="FormID" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[(optional) The id of the FORM tag (defaults to an auto-generated id).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;formId&quot;" />
            <Attribute Type="Category" RawValue="&quot;6. FormPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="(optional) The id of the FORM tag (defaults to an auto-generated id)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ItemCls" Modifier="Override" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A css class to apply to the x-form-item of fields. This property cascades to child containers.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. FormPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="A css class to apply to the x-form-item of fields. This property cascades to child containers." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MonitorPoll" Type="int" DefaultValue="200">
          <Summary><![CDATA[The milliseconds to poll valid state, ignored if monitorValid is not true (defaults to 200)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. FormPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="200" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The milliseconds to poll valid state, ignored if monitorValid is not true (defaults to 200)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MonitorValid" Type="bool" DefaultValue="false">
          <Summary><![CDATA[If true the form monitors its valid state client-side and fires a looping event with that state. This is required to bind buttons to the valid state using the config value formBind:true on the button.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. FormPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="If true the form monitors its valid state client-side and fires a looping event with that state. This is required to bind buttons to the valid state using the config value formBind:true on the button." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RenderFormElement" Type="bool" DefaultValue="true">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;renderFormElement&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BaseParams" Type="ParameterCollection">
          <Summary><![CDATA[Parameters to pass with all requests. e.g. baseParams: {id: '123', foo: 'bar'}.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;6. FormPanel&quot;" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="Parameters to pass with all requests. e.g. baseParams: {id: '123', foo: 'bar'}." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ErrorReader" Type="ReaderCollection">
          <Summary><![CDATA[An Ext.data.DataReader (e.g. Ext.data.XmlReader) to be used to read data when reading validation errors on \"submit\" actions. This is completely optional as there is built-in support for processing JSON.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;reader&gt;Reader&quot;" />
            <Attribute Type="Category" RawValue="&quot;6. FormPanel&quot;" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="An Ext.data.DataReader (e.g. Ext.data.XmlReader) to be used to read data when reading validation errors on \&quot;submit\&quot; actions. This is completely optional as there is built-in support for processing JSON." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="FileUpload" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Set to true if this form is a file upload.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Set to true if this form is a file upload." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Method" Type="HttpMethod" DefaultValue="HttpMethod.Default">
          <Summary><![CDATA[The HTTP method to use. Defaults to POST if params are present, or GET if not.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="HttpMethod.Default" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The HTTP method to use. Defaults to POST if params are present, or GET if not." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MethodProxy" Access="Protected" Type="HttpMethod" DefaultValue="HttpMethod.Default">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;method&quot;" />
            <Attribute Type="DefaultValue" RawValue="HttpMethod.Default" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Reader" Type="ReaderCollection">
          <Summary><![CDATA[An Ext.data.DataReader (e.g. Ext.data.XmlReader) to be used to read data when executing \"load\" actions. This is optional as there is built-in support for processing JSON.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;reader&gt;Reader&quot;" />
            <Attribute Type="Category" RawValue="&quot;6. FormPanel&quot;" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="An Ext.data.DataReader (e.g. Ext.data.XmlReader) to be used to read data when executing \&quot;load\&quot; actions. This is optional as there is built-in support for processing JSON." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="StandardSubmit" Type="bool" DefaultValue="false">
          <Summary><![CDATA[If set to true, standard HTML form submits are used instead of XHR (Ajax) style form submissions. (defaults to false).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. FormPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="If set to true, standard HTML form submits are used instead of XHR (Ajax) style form submissions. (defaults to false)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Timeout" Type="int" DefaultValue="30">
          <Summary><![CDATA[Timeout for form actions in seconds (default is 30 seconds).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="DefaultValue" RawValue="30" />
            <Attribute Type="Description" RawValue="Timeout for form actions in seconds (default is 30 seconds)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TrackResetOnLoad" Type="bool" DefaultValue="false">
          <Summary><![CDATA[If set to true, form.reset() resets to the last loaded or setValues() data instead of when the form was first created.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. FormPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="If set to true, form.reset() resets to the last loaded or setValues() data instead of when the form was first created." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Url" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The URL to use for form actions if one isn't supplied in the action options.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;6. FormPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The URL to use for form actions if one isn't supplied in the action options." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="UrlProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;url&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ElementStyle" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A CSS style specification string to add to each field element in this layout (defaults to '').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="A CSS style specification string to add to each field element in this layout (defaults to '')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TrackLabels" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to show/hide the field label when the field is hidden. Defaults to true.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="True to show/hide the field label when the field is hidden. Defaults to true." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="LayoutConfigProxy" Access="ProtectedInternal" Type="FormLayoutConfig" DefaultValue="null">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Object" />
            <Attribute Type="Browsable" RawValue="false" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Layout" Modifier="Override" Type="string" DefaultValue="&quot;form&quot;">
          <Summary><![CDATA[The layout type to be used in this container.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;5. Container&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;form&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(LayoutConverter)" />
            <Attribute Type="Description" RawValue="The layout type to be used in this container." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods>
        <Method Name="ClearInvalid">
          <Summary><![CDATA[Clears all invalid messages in this form.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Clears all invalid messages in this form." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="MarkInvalid" ParamsRaw="object errors">
          <Summary><![CDATA[Mark fields in this form invalid in bulk.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Mark fields in this form invalid in bulk." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Reset">
          <Summary><![CDATA[Resets this form.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Resets this form." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SetValues" ParamsRaw="object values">
          <Summary><![CDATA[Set values for fields in this form in bulk.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Set values for fields in this form in bulk." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="ApplyToFields" ParamsRaw="object values">
          <Summary><![CDATA[Calls Ext.apply for all fields in this form with the passed object.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Calls Ext.apply for all fields in this form with the passed object." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="ApplyIfToFields" ParamsRaw="object values">
          <Summary><![CDATA[Calls Ext.applyIf for all fields in this form with the passed object.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Calls Ext.applyIf for all fields in this form with the passed object." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="CallFieldMethod" ParamsRaw="string fnName, object[] args">
          <Summary><![CDATA[Calls required method for all fields in this form with the passed args.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Calls required method for all fields in this form with the passed args." />
          </Attributes>
          <Parameters />
        </Method>
      </Methods>
    </Class>
    <Class Name="FormPanelDirectEvents" Extends="PanelDirectEvents">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="ClientValidation" Type="ComponentDirectEvent">
          <Summary><![CDATA[If the monitorValid config option is true, this event fires repetitively to notify of valid state]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(FormPanel)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;valid&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;clientvalidation&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="If the monitorValid config option is true, this event fires repetitively to notify of valid state" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ActionComplete" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when an action is completed.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(FormPanel)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;action&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;actioncomplete&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when an action is completed." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ActionFailed" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when an action fails.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(FormPanel)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;action&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;actionfailed&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when an action fails." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeAction" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before any action is performed. Return false to cancel the action.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(FormPanel)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;action&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeaction&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before any action is performed. Return false to cancel the action." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="FormPanelListeners" Extends="PanelListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="ClientValidation" Type="ComponentListener">
          <Summary><![CDATA[If the monitorValid config option is true, this event fires repetitively to notify of valid state]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(FormPanel)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;valid&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;clientvalidation&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="If the monitorValid config option is true, this event fires repetitively to notify of valid state" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ActionComplete" Type="ComponentListener">
          <Summary><![CDATA[Fires when an action is completed.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(FormPanel)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;action&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;actioncomplete&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when an action is completed." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ActionFailed" Type="ComponentListener">
          <Summary><![CDATA[Fires when an action fails.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(FormPanel)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;action&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;actionfailed&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when an action fails." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeAction" Type="ComponentListener">
          <Summary><![CDATA[Fires before any action is performed. Return false to cancel the action.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(FormPanel)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;action&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeaction&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before any action is performed. Return false to cancel the action." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="Frame" Extends="Fx">
      <Summary><![CDATA[Shows a ripple of exploding, attenuating borders to draw attention to an Element]]></Summary>
      <Attributes>
        <Attribute Type="Description" RawValue="Shows a ripple of exploding, attenuating borders to draw attention to an Element" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="FxName" Modifier="Override" Type="string">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="FunctionJsonConverter" Extends="ExtJsonConverter">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="Fx" Abstract="true" Extends="ExtObject">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="FxName" Abstract="true" Type="string">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ArgumentsArray" Access="ProtectedInternal" Type="string">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;args&quot;, JsonMode.Raw" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="FxConfig" Extends="ElementFxConfig">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="AfterCls" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A css class to apply after the effect]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="A css class to apply after the effect" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AfterStyle" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A style specification string, e.g. 'width:100px', that will be applied to the Element after the effect finishes]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="A style specification string, e.g. 'width:100px', that will be applied to the Element after the effect finishes" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Block" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Whether the effect should block other effects from queueing while it runs]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="Whether the effect should block other effects from queueing while it runs" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Concurrent" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Whether to allow subsequently-queued effects to run at the same time as the current effect, or to ensure that they run in sequence]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="Whether to allow subsequently-queued effects to run at the same time as the current effect, or to ensure that they run in sequence" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Remove" Type="bool" DefaultValue="false">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="StopFx" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Whether subsequent effects should be stopped and removed after the current effect finishes]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="Whether subsequent effects should be stopped and removed after the current effect finishes" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="UseDisplay" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Whether to use the display CSS property instead of visibility when hiding Elements (only applies to effects that end with the element being visually hidden, ignored otherwise)]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="Whether to use the display CSS property instead of visibility when hiding Elements (only applies to effects that end with the element being visually hidden, ignored otherwise)" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="GenericComponent&lt;T&gt;" Extends="Component" Inherits="new()">
      <Summary><![CDATA[A generic Component.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:GenericComponent runat=\&quot;server\&quot; /&gt;&quot;" />
        <Attribute Type="Description" RawValue="A generic Component." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Component" Type="T" DefaultValue="null">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.UnrollObject" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="GenericConverter" Extends="ExpandableObjectConverter">
      <Attributes>
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="GenericPlugin" Extends="Plugin">
      <Summary><![CDATA[A generic Plugin.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:GenericPlugin runat=\&quot;server\&quot; /&gt;&quot;" />
        <Attribute Type="Description" RawValue="A generic Plugin." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="InstanceName" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The JavaScript class name. Used to create a 'new' instance of the object.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;3. GenericPlugin&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The JavaScript class name. Used to create a 'new' instance of the object." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Path" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The file path to the required JavaScript file.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;3. GenericPlugin&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The file path to the required JavaScript file." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="Ghost" Extends="Fx">
      <Summary><![CDATA[Slides the element while fading it out of view. An anchor point can be optionally passed to set the ending point of the effect. ]]></Summary>
      <Attributes>
        <Attribute Type="Description" RawValue="Slides the element while fading it out of view. An anchor point can be optionally passed to set the ending point of the effect. " />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="FxName" Modifier="Override" Type="string">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="GlobalConfig" Extends="ConfigurationSection">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="GridCommand" Extends="GridCommandBase">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="XType" Access="ProtectedInternal" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;xtype&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CommandName" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;command&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ToolTip" Type="SimpleToolTip">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;tooltip&quot;, JsonMode.Object" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Content" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Icon" Type="Icon" DefaultValue="Icon.None">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="Icon.None" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IconCls" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Text" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="StandOut" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to enable stand out by default (defaults to false).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;3. GridCommand&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Description" RawValue="True to enable stand out by default (defaults to false)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Cls" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. GridCommand&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CtCls" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. GridCommand&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Disabled" Type="bool" DefaultValue="false">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. GridCommand&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DisabledClass" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. GridCommand&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Hidden" Type="bool" DefaultValue="false">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. GridCommand&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="OverCls" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. GridCommand&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Menu" Type="CommandMenu">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;menu&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;3. GridCommand&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HideMode" Type="HideMode" DefaultValue="HideMode.Display">
          <Summary><![CDATA[How this component should be hidden. Supported values are 'visibility' (css visibility), 'offsets' (negative offset position) and 'display' (css display) - defaults to 'display'.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="Category" RawValue="&quot;3. GridCommand&quot;" />
            <Attribute Type="DefaultValue" RawValue="HideMode.Display" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="How this component should be hidden. Supported values are 'visibility' (css visibility), 'offsets' (negative offset position) and 'display' (css display) - defaults to 'display'." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MinWidth" Type="Unit" DefaultValue="typeof(Unit), &quot;16&quot;">
          <Summary><![CDATA[The minimum width for this button (used to give a set of buttons a common width).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. GridCommand&quot;" />
            <Attribute Type="DefaultValue" RawValue="typeof(Unit), &quot;16&quot;" />
            <Attribute Type="Description" RawValue="The minimum width for this button (used to give a set of buttons a common width)." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="GridCommandBase" Abstract="true" Extends="StateManagedItem">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="GridCommandCollection" Extends="StateManagedCollection&lt;GridCommandBase&gt;">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="GridEditorOptions" Extends="StateManagedItem">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Listeners" Type="InlineEditorListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ZIndex" Type="int" DefaultValue="0">
          <Summary><![CDATA[Editor z-index]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. Editor&quot;" />
            <Attribute Type="DefaultValue" RawValue="0" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Editor z-index" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Alignment" Type="string" DefaultValue="&quot;tl-tl&quot;">
          <Summary><![CDATA[The position to align to (see Ext.Element.alignTo for more details, defaults to \"tl-tl\").]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;2. GridEditorOptions&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;tl-tl&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="The position to align to (see Ext.Element.alignTo for more details, defaults to \&quot;tl-tl\&quot;)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AutoSize" Type="EditorAutoSize" DefaultValue="EditorAutoSize.Width">
          <Summary><![CDATA[Size for the editor to automatically adopt the size of the underlying field, Width to adopt the width only, or Height to adopt the height only (defaults to Width)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. GridEditorOptions&quot;" />
            <Attribute Type="DefaultValue" RawValue="EditorAutoSize.Width" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Size for the editor to automatically adopt the size of the underlying field, Width to adopt the width only, or Height to adopt the height only (defaults to Width)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AutoSizeProxy" Access="Protected" Type="string" DefaultValue="&quot;\&quot;width\&quot;&quot;">
          <Attributes>
            <Attribute Type="DefaultValue" RawValue="&quot;\&quot;width\&quot;&quot;" />
            <Attribute Type="ConfigOption" RawValue="&quot;autoSize&quot;, JsonMode.Raw" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AllowBlur" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to complete edit complete the editing process if in edit mode when the field is blurred. Defaults to true.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;2. GridEditorOptions&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to complete edit complete the editing process if in edit mode when the field is blurred. Defaults to true." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CancelOnEsc" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to cancel the edit when the escape key is pressed (defaults to false)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;2. GridEditorOptions&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to cancel the edit when the escape key is pressed (defaults to false)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CompleteOnEnter" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to complete the edit when the enter key is pressed (defaults to false)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;2. GridEditorOptions&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to complete the edit when the enter key is pressed (defaults to false)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CancelOnBlur" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to cancel the edit when the blur event is fired (defaults to false)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;2. GridEditorOptions&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to cancel the edit when the blur event is fired (defaults to false)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IgnoreNoChange" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to skip the edit completion process (no save, no events fired) if the user completes an edit and the value has not changed (defaults to false). Applies only to string values - edits for other data types will never be ignored.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;2. GridEditorOptions&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to skip the edit completion process (no save, no events fired) if the user completes an edit and the value has not changed (defaults to false). Applies only to string values - edits for other data types will never be ignored." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RevertInvalid" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to automatically revert the field value and cancel the edit when the user completes an edit and the field validation fails (defaults to true)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. Editor&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to automatically revert the field value and cancel the edit when the user completes an edit and the field validation fails (defaults to true)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Shadow" Type="ShadowMode" DefaultValue="ShadowMode.None">
          <Summary><![CDATA[\"sides\" for sides/bottom only, \"frame\" for 4-way shadow, and \"drop\" for bottom-right shadow (defaults to \"frame\")]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="typeof(ShadowJsonConverter)" />
            <Attribute Type="Category" RawValue="&quot;4. Editor&quot;" />
            <Attribute Type="DefaultValue" RawValue="ShadowMode.None" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="\&quot;sides\&quot; for sides/bottom only, \&quot;frame\&quot; for 4-way shadow, and \&quot;drop\&quot; for bottom-right shadow (defaults to \&quot;frame\&quot;)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SwallowKeys" Type="bool" DefaultValue="true">
          <Summary><![CDATA[Handle the keydown/keypress events so they don't propagate (defaults to true)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. Editor&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Handle the keydown/keypress events so they don't propagate (defaults to true)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Offsets" Type="int[]" DefaultValue="null">
          <Summary><![CDATA[The offsets to use when aligning. Defaults to [0, 0].]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.AlwaysArray" />
            <Attribute Type="Category" RawValue="&quot;2. GridEditorOptions&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(IntArrayConverter)" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="The offsets to use when aligning. Defaults to [0, 0]." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="GridFilter" Abstract="true" Extends="StateManagedItem">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Active" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Indicates the initial status of the filter (defaults to false).]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;2. GridFilter&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="Indicates the initial status of the filter (defaults to false)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DataIndex" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The Store data index of the field this filter represents. The dataIndex does not actually have to exist in the store.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;2. GridFilter&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The Store data index of the field this filter represents. The dataIndex does not actually have to exist in the store." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="GetValue" Type="JFunction" DefaultValue="null">
          <Summary><![CDATA[Template method to be implemented by all subclasses that is to get and return the value of the filter.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;2. GridFilter&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="Template method to be implemented by all subclasses that is to get and return the value of the filter." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SetValue" Type="JFunction" DefaultValue="null">
          <Summary><![CDATA[Template method to be implemented by all subclasses that is to set the value of the filter and fire the 'update' event.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;2. GridFilter&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="Template method to be implemented by all subclasses that is to set the value of the filter and fire the 'update' event." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="GetSerialArgs" Type="JFunction" DefaultValue="null">
          <Summary><![CDATA[Template method to be implemented by all subclasses that is to get and return serialized filter data for transmission to the server.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;2. GridFilter&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="Template method to be implemented by all subclasses that is to get and return serialized filter data for transmission to the server." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ValidateRecord" Type="JFunction" DefaultValue="null">
          <Summary><![CDATA[Template method to be implemented by all subclasses that is to validates the provided Ext.data.Record against the filters configuration.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;2. GridFilter&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="Template method to be implemented by all subclasses that is to validates the provided Ext.data.Record against the filters configuration." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Listeners" Type="GridFilterListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="GridFilterCollection" Extends="StateManagedCollection&lt;GridFilter&gt;">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="GridFilterListeners" Extends="ComponentListeners">
      <Attributes>
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="TypeConverter" RawValue="typeof(ListenersConverter)" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Activate" Type="ComponentListener">
          <Summary><![CDATA[Fires when an inactive filter becomes active]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;filter&quot;, typeof(object), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;activate&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when an inactive filter becomes active" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Deactivate" Type="ComponentListener">
          <Summary><![CDATA[Fires when an active filter becomes inactive]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;filter&quot;, typeof(object), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;deactivate&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when an active filter becomes inactive" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Serialize" Type="ComponentListener">
          <Summary><![CDATA[Fires after the serialization process. Use this to attach additional parameters to serialization data before it is encoded and sent to the server.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;data&quot;, typeof(object), &quot;A map or collection of maps representing the current filter configuration.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;filter&quot;, typeof(object), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;serialize&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the serialization process. Use this to attach additional parameters to serialization data before it is encoded and sent to the server." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Update" Type="ComponentListener">
          <Summary><![CDATA[Fires when a filter configuration has changed]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;filter&quot;, typeof(object), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;update&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a filter configuration has changed" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="GridFilters" Extends="Plugin">
      <Summary><![CDATA[GridFilters plugin used for filter by columns]]></Summary>
      <Attributes>
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(GridFilters), &quot;Build.ToolboxIcons.GridFilters.bmp&quot;" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:GridFilters runat=\&quot;server\&quot; /&gt;&quot;" />
        <Attribute Type="Description" RawValue="GridFilters plugin used for filter by columns" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="UpdateBuffer" Type="int" DefaultValue="500">
          <Summary><![CDATA[Number of milisecond to defer store updates since the last filter change.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="500" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Number of milisecond to defer store updates since the last filter change." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ParamPrefix" Type="string" DefaultValue="&quot;gridfilters&quot;">
          <Summary><![CDATA[The url parameter prefix for the filters.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;gridfilters&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The url parameter prefix for the filters." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="FilterCls" Type="string" DefaultValue="&quot;ux-filtered-column&quot;">
          <Summary><![CDATA[The css class to be applied to column headers that active filters. Defaults to 'ux-filterd-column'.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;ux-filtered-column&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The css class to be applied to column headers that active filters. Defaults to 'ux-filterd-column'." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Local" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to use Ext.data.Store filter functions instead of server side filtering.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to use Ext.data.Store filter functions instead of server side filtering." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AutoReload" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to automagicly reload the datasource when a filter change happens.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to automagicly reload the datasource when a filter change happens." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ShowMenu" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to show the filter menus.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to show the filter menus." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="FiltersText" Type="string" DefaultValue="&quot;Filters&quot;">
          <Summary><![CDATA[The text displayed for the 'Filters' menu item.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;menuFilterText&quot;" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;Filters&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The text displayed for the 'Filters' menu item." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Filters" Type="GridFilterCollection" DefaultValue="null">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;filters&quot;, JsonMode.AlwaysArray" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Listeners" Type="GridFiltersListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="GridFiltersDirectEvents">
          <Summary><![CDATA[Server-side Ajax Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Server-side Ajax Event Handlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="GridFiltersDirectEvents" Extends="ComponentDirectEvents">
      <Attributes>
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="TypeConverter" RawValue="typeof(DirectEventsConverter)" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="FilterUpdate" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(object), &quot;plugin&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;filter&quot;, typeof(object), &quot;filter&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;filterupdate&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="GridFiltersListeners" Extends="ComponentListeners">
      <Attributes>
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="TypeConverter" RawValue="typeof(ListenersConverter)" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="FilterUpdate" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(object), &quot;plugin&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;filter&quot;, typeof(object), &quot;filter&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;filterupdate&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="GridPanel" Extends="GridPanelBase">
      <Summary><![CDATA[This class represents the primary interface of a component based grid control.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:GridPanel runat=\&quot;server\&quot; Title=\&quot;Title\&quot; Height=\&quot;300\&quot;&gt;&lt;/{0}:GridPanel&gt;&quot;" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(GridPanel), &quot;Build.ToolboxIcons.GridPanel.bmp&quot;" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="Description" RawValue="This class represents the primary interface of a component based grid control." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Listeners" Type="GridPanelListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="GridPanelDirectEvents">
          <Summary><![CDATA[Server-side Ajax Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Server-side Ajax Event Handlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="GridPanelBase" Abstract="true" Extends="PanelBase" Inherits="IStore,INoneContentable">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="AutoExpandColumn" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The id of a column in this grid that should expand to fill unused space. This id can not be 0.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. GridPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The id of a column in this grid that should expand to fill unused space. This id can not be 0." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AutoExpandMax" Type="int" DefaultValue="1000">
          <Summary><![CDATA[The maximum width the autoExpandColumn can have (if enabled). Defaults to 1000.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. GridPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="1000" />
            <Attribute Type="Description" RawValue="The maximum width the autoExpandColumn can have (if enabled). Defaults to 1000." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AutoExpandMin" Type="int" DefaultValue="50">
          <Summary><![CDATA[The minimum width the autoExpandColumn can have (if enabled). defaults to 50.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. GridPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="50" />
            <Attribute Type="Description" RawValue="The minimum width the autoExpandColumn can have (if enabled). defaults to 50." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ClearEditorFilter" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to clear editor filter before start editing. Default is true.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. GridPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="True to clear editor filter before start editing. Default is true." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ColumnLines" Type="bool" DefaultValue="false">
          <Summary><![CDATA[true to add css for column separation lines. Default is false.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. GridPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="true to add css for column separation lines. Default is false." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DDGroup" Type="string" DefaultValue="&quot;GridDD&quot;">
          <Summary><![CDATA[The DD group this GridPanel belongs to. Defaults to 'GridDD' if not specified.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;ddGroup&quot;" />
            <Attribute Type="Category" RawValue="&quot;7. GridPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;GridDD&quot;" />
            <Attribute Type="Description" RawValue="The DD group this GridPanel belongs to. Defaults to 'GridDD' if not specified." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DDText" Type="string" DefaultValue="&quot;{0} selected row{1}&quot;">
          <Summary><![CDATA[Configures the text in the drag proxy. Defaults to: '{0} selected row{1}' {0} is replaced with the number of selected rows.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;ddText&quot;" />
            <Attribute Type="Category" RawValue="&quot;7. GridPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;{0} selected row{1}&quot;" />
            <Attribute Type="Description" RawValue="Configures the text in the drag proxy. Defaults to: '{0} selected row{1}' {0} is replaced with the number of selected rows." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DeferRowRender" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to enable deferred row rendering. Default is true.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. GridPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="True to enable deferred row rendering. Default is true." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DisableSelection" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to disable selections in the grid (defaults to false). - ignored a SelectionModel is specified.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. GridPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to disable selections in the grid (defaults to false). - ignored a SelectionModel is specified." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EnableColumnHide" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to enable hiding of columns with the header context menu.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. GridPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="True to enable hiding of columns with the header context menu." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EnableColumnMove" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to enable drag and drop reorder of columns.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. GridPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="True to enable drag and drop reorder of columns." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EnableColumnResize" Type="bool" DefaultValue="true">
          <Summary><![CDATA[False to turn off column resizing for the whole grid (defaults to true).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. GridPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="False to turn off column resizing for the whole grid (defaults to true)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EnableDragDrop" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to enable drag and drop of rows.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. GridPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to enable drag and drop of rows." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EnableHdMenu" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to enable the drop down button for menu in the headers.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. GridPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="True to enable the drop down button for menu in the headers." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HideHeaders" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to hide the grid's header (defaults to false).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetHideHeaders&quot;" />
            <Attribute Type="Category" RawValue="&quot;7. GridPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to hide the grid's header (defaults to false)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="LoadMask" Modifier="Override" Type="LoadMask">
          <Summary><![CDATA[An Ext.LoadMask to mask the grid while loading (defaults to false).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;loadMask&quot;, typeof(LoadMaskJsonConverter)" />
            <Attribute Type="Category" RawValue="&quot;7. GridPanel&quot;" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="An Ext.LoadMask to mask the grid while loading (defaults to false)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SaveMask" Type="SaveMask">
          <Summary><![CDATA[An Ext.SaveMask to mask the grid while saving (defaults to false).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;saveMask&quot;, typeof(LoadMaskJsonConverter)" />
            <Attribute Type="Category" RawValue="&quot;7. GridPanel&quot;" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="An Ext.SaveMask to mask the grid while saving (defaults to false)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MaxHeight" Modifier="Override" Type="Unit" DefaultValue="typeof(Unit), &quot;400&quot;">
          <Summary><![CDATA[Sets the maximum height of the grid - ignored if autoHeight is not on.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. GridPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="typeof(Unit), &quot;400&quot;" />
            <Attribute Type="Description" RawValue="Sets the maximum height of the grid - ignored if autoHeight is not on." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MinColumnWidth" Type="Unit" DefaultValue="typeof(Unit), &quot;25&quot;">
          <Summary><![CDATA[The minimum width a column can be resized to. Defaults to 25.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. GridPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="typeof(Unit), &quot;25&quot;" />
            <Attribute Type="Description" RawValue="The minimum width a column can be resized to. Defaults to 25." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MonitorWindowResize" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to autoSize the grid when the window resizes. Defaults to true.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. GridPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="True to autoSize the grid when the window resizes. Defaults to true." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SelectionModel" Type="SelectionModelCollection">
          <Summary><![CDATA[Any subclass of AbstractSelectionModel that will provide the selection model for the grid (defaults to Ext.grid.RowSelectionModel if not specified).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;sm&gt;Primary&quot;" />
            <Attribute Type="Category" RawValue="&quot;7. GridPanel&quot;" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="Any subclass of AbstractSelectionModel that will provide the selection model for the grid (defaults to Ext.grid.RowSelectionModel if not specified)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="StoreID" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The data store to use.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;store&quot;, JsonMode.ToClientID" />
            <Attribute Type="Category" RawValue="&quot;7. GridPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="IDReferenceProperty" RawValue="typeof(Store)" />
            <Attribute Type="Description" RawValue="The data store to use." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Store" Type="StoreCollection">
          <Summary><![CDATA[The Ext.Net.Store the grid should use as its data source (required).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;store&gt;Primary&quot;, 1" />
            <Attribute Type="Category" RawValue="&quot;7. GridPanel&quot;" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="The Ext.Net.Store the grid should use as its data source (required)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="StripeRows" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to stripe the rows. Default is false.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. GridPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to stripe the rows. Default is false." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TrackMouseOver" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to highlight rows when the mouse is over. Default is true.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. GridPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to highlight rows when the mouse is over. Default is true." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="View" Type="GridViewCollection">
          <Summary><![CDATA[The Ext.grid.GridView used by the grid. This can be set before a call to render().]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;view&gt;View&quot;" />
            <Attribute Type="Category" RawValue="&quot;7. GridPanel&quot;" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="The Ext.grid.GridView used by the grid. This can be set before a call to render()." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AutoEncode" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to automatically HTML encode and decode values pre and post edit (defaults to false).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. GridPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to automatically HTML encode and decode values pre and post edit (defaults to false)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ClicksToEdit" Type="int" DefaultValue="2">
          <Summary><![CDATA[The number of clicks on a cell required to display the cell's editor (defaults to 2).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;7. GridPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="2" />
            <Attribute Type="Description" RawValue="The number of clicks on a cell required to display the cell's editor (defaults to 2)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ClicksToEditProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;clicksToEdit&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="FireSelectOnLoad" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Set init selection without event firing]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. GridPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="Set init selection without event firing" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ForceValidation" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to force validation even if the value is unmodified (defaults to false)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. GridPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to force validation even if the value is unmodified (defaults to false)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SelectionSavingBuffer" Type="int" DefaultValue="0">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. GridPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="0" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SelectionMemory" Type="SelectionMemoryMode" DefaultValue="SelectionMemoryMode.Auto">
          <Summary><![CDATA[True to enable saving selection during paging. Default is true.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;7. GridPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="SelectionMemoryMode.Auto" />
            <Attribute Type="Description" RawValue="True to enable saving selection during paging. Default is true." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SelectionMemoryProxy" Access="Protected" Type="bool" DefaultValue="true">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;selectionMemory&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MemoryIDField" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. GridPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="GetDragDropText" Type="JFunction">
          <Summary><![CDATA[Called to get grid's drag proxy text, by default returns this.ddText.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;7. GridPanel&quot;" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="Called to get grid's drag proxy text, by default returns this.ddText." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ColumnModel" Type="ColumnModel">
          <Summary><![CDATA[The Ext.grid.ColumnModel to use when rendering the grid (required).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;cm&quot;, typeof(LazyControlJsonConverter)" />
            <Attribute Type="Category" RawValue="&quot;7. GridPanel&quot;" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="The Ext.grid.ColumnModel to use when rendering the grid (required)." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods>
        <Method Name="AddColumn" ParamsRaw="ColumnBase column">
          <Summary><![CDATA[Add new column to the end.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Add new column to the end." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="InsertColumn" ParamsRaw="int index, ColumnBase column">
          <Summary><![CDATA[Insert new column.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Insert new column." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="RemoveColumn" ParamsRaw="int index">
          <Summary><![CDATA[Remove column.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Remove column." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Reconfigure">
          <Summary><![CDATA[Reconfigure columns.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Reconfigure columns." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="InsertRecord" ParamsRaw="int index, object values">
          <Summary><![CDATA[Insert record]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Insert record" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="InsertRecord" ParamsRaw="int index, object values, bool commit">
          <Summary><![CDATA[Insert record]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Insert record" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="AddRecord" ParamsRaw="object values">
          <Summary><![CDATA[Add record]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Add record" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="AddRecord" ParamsRaw="object values, bool commit">
          <Summary><![CDATA[Add record]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Add record" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="DeleteSelected">
          <Summary><![CDATA[Delete selected records]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Delete selected records" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="RefreshView">
          <Summary><![CDATA[Refresh view]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Refresh view" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="StartEditing" ParamsRaw="int rowIndex, int colIndex">
          <Summary><![CDATA[Starts editing the specified for the specified row/column]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Starts editing the specified for the specified row/column" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="StopEditing" ParamsRaw="bool cancel">
          <Summary><![CDATA[Stops any active editing]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Stops any active editing" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="StopEditing">
          <Summary><![CDATA[Stops any active editing]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Stops any active editing" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="UpdateCell" ParamsRaw="int rowIndex, string dataIndex, object value">
          <Summary><![CDATA[Update cell content]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Update cell content" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="UpdateCell" ParamsRaw="object id, string dataIndex, object value">
          <Summary><![CDATA[Update cell content]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Update cell content" />
          </Attributes>
          <Parameters />
        </Method>
      </Methods>
    </Class>
    <Class Name="GridPanelDirectEvents" Extends="PanelDirectEvents">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="BodyScroll" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when the body element is scrolled.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;scrollLeft&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;scrollTop&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;bodyscroll&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the body element is scrolled." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CellClick" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when a cell is clicked. The data for the cell is drawn from the Record for this row.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(GridPanel)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;rowIndex&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;columnIndex&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;cellclick&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a cell is clicked. The data for the cell is drawn from the Record for this row." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CellContextMenu" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when a cell is right clicked.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(GridPanel)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;rowIndex&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;cellIndex&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;cellcontextmenu&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a cell is right clicked." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CellDblClick" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when a cell is double clicked.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(GridPanel)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;rowIndex&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;columnIndex&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;celldblclick&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a cell is double clicked." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CellMouseDown" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before a cell is clicked.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(GridPanel)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;rowIndex&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;columnIndex&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;cellMouseDown&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before a cell is clicked." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Click" Type="ComponentDirectEvent">
          <Summary><![CDATA[The raw click event for the entire grid.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;click&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The raw click event for the entire grid." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ColumnMove" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when the user moves a column.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;oldIndex&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;newIndex&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;columnmove&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the user moves a column." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ColumnResize" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when the user resizes a column.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;columnIndex&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;newSize&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;columnresize&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the user resizes a column." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ContainerClick" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when the container is clicked. The container consists of any part of the grid body that is not covered by a row.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;el&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;containerclick&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the container is clicked. The container consists of any part of the grid body that is not covered by a row." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ContainerContextMenu" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when the container is right clicked. The container consists of any part of the grid body that is not covered by a row.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;el&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;containercontextmenu&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the container is right clicked. The container consists of any part of the grid body that is not covered by a row." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ContainerDblClick" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when the container is double clicked. The container consists of any part of the grid body that is not covered by a row.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;el&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;containerdblclick&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the container is double clicked. The container consists of any part of the grid body that is not covered by a row." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ContainerMouseDown" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before the container is clicked. The container consists of any part of the grid body that is not covered by a row.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;el&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;containermousedown&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the container is clicked. The container consists of any part of the grid body that is not covered by a row." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ContextMenu" Type="ComponentDirectEvent">
          <Summary><![CDATA[The raw contextmenu event for the entire grid.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;contextmenu&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The raw contextmenu event for the entire grid." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DblClick" Type="ComponentDirectEvent">
          <Summary><![CDATA[The raw dblclick event for the entire grid.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;dblclick&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The raw dblclick event for the entire grid." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="GroupChange" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when the grid's grouping changes (only applies for grids with a GroupingView)]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(GridPanel)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;groupField&quot;, typeof(string), &quot;A string with the grouping field, null if the store is not grouped.&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;groupchange&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the grid's grouping changes (only applies for grids with a GroupingView)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="GroupClick" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when group header is clicked. Only applies for grids with a GroupingView.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(GridPanel)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;groupField&quot;, typeof(string), &quot;A string with the grouping field, null if the store is not grouped.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;groupValue&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;groupclick&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when group header is clicked. Only applies for grids with a GroupingView." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="GroupContextMenu" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when group header is clicked. Only applies for grids with a GroupingView.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(GridPanel)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;groupField&quot;, typeof(string), &quot;A string with the grouping field, null if the store is not grouped.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;groupValue&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;groupcontextmenu&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when group header is clicked. Only applies for grids with a GroupingView." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="GroupDblClick" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when group header is double clicked. Only applies for grids with a GroupingView.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(GridPanel)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;groupField&quot;, typeof(string), &quot;A string with the grouping field, null if the store is not grouped.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;groupValue&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;groupdblclick&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when group header is double clicked. Only applies for grids with a GroupingView." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="GroupMouseDown" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before a group header is clicked. Only applies for grids with a GroupingView.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(GridPanel)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;groupField&quot;, typeof(string), &quot;A string with the grouping field, null if the store is not grouped.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;groupValue&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;groupmousedown&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before a group header is clicked. Only applies for grids with a GroupingView." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HeaderClick" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when a header is clicked.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(GridPanel)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;columnIndex&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;headerclick&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a header is clicked." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HeaderContextMenu" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when a header is right clicked.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(GridPanel)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;columnIndex&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;headercontextmenu&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a header is right clicked." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HeaderDblClick" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when a header cell is double clicked.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(GridPanel)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;columnIndex&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;headerdblclick&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a header cell is double clicked." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HeaderMouseDown" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before a header is clicked.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(GridPanel)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;columnIndex&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;headermousedown&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before a header is clicked." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="KeyDown" Type="ComponentDirectEvent">
          <Summary><![CDATA[The raw keydown event for the entire grid.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;keydown&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The raw keydown event for the entire grid." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="KeyPress" Type="ComponentDirectEvent" DefaultValue="null">
          <Summary><![CDATA[The raw keypress event for the entire grid.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;keypress&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="The raw keypress event for the entire grid." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MouseDown" Type="ComponentDirectEvent">
          <Summary><![CDATA[The raw mousedown event for the entire grid.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;mousedown&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The raw mousedown event for the entire grid." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MouseOut" Type="ComponentDirectEvent">
          <Summary><![CDATA[The raw mouseout event for the entire grid.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;mouseout&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The raw mouseout event for the entire grid." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MouseOver" Type="ComponentDirectEvent">
          <Summary><![CDATA[The raw mouseover event for the entire grid.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;mouseover&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The raw mouseover event for the entire grid." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MouseUp" Type="ComponentDirectEvent">
          <Summary><![CDATA[The raw mouseup event for the entire grid.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;mouseup&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The raw mouseup event for the entire grid." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Reconfigure" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when the grid is reconfigured with a new store and/or column model.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;el&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;store&quot;, typeof(Store), &quot;The new Store&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;el&quot;, typeof(ColumnModel), &quot;The new ColumnModel&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;reconfigure&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the grid is reconfigured with a new store and/or column model." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RowBodyClick" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when the row body is clicked. <b>Only applies for grids with {@link Ext.grid.GridView#enableRowBody enableRowBody} configured.</b>]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(GridPanel)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;rowIndex&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;rowbodyclick&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the row body is clicked. &lt;b&gt;Only applies for grids with {@link Ext.grid.GridView#enableRowBody enableRowBody} configured.&lt;/b&gt;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RowBodyContextMenu" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when the row body is right clicked. <b>Only applies for grids with {@link Ext.grid.GridView#enableRowBody enableRowBody} configured.</b>]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(GridPanel)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;rowIndex&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;rowbodycontextmenu&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the row body is right clicked. &lt;b&gt;Only applies for grids with {@link Ext.grid.GridView#enableRowBody enableRowBody} configured.&lt;/b&gt;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RowBodyDblClick" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when the row body is double clicked. <b>Only applies for grids with {@link Ext.grid.GridView#enableRowBody enableRowBody} configured.</b>]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(GridPanel)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;rowIndex&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;rowbodydblclick&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the row body is double clicked. &lt;b&gt;Only applies for grids with {@link Ext.grid.GridView#enableRowBody enableRowBody} configured.&lt;/b&gt;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RowBodyMouseDown" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before the row body is clicked. <b>Only applies for grids with {@link Ext.grid.GridView#enableRowBody enableRowBody} configured.</b>]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(GridPanel)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;rowIndex&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;rowbodymousedown&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the row body is clicked. &lt;b&gt;Only applies for grids with {@link Ext.grid.GridView#enableRowBody enableRowBody} configured.&lt;/b&gt;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RowClick" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when a row is clicked.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(GridPanel)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;rowIndex&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;rowclick&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a row is clicked." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RowContextMenu" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when a row is right clicked.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(GridPanel)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;rowIndex&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;rowcontextmenu&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a row is right clicked." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RowDblClick" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when a row is double clicked.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(GridPanel)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;rowIndex&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;rowdblclick&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a row is double clicked." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RowMouseDown" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before a row is clicked.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(GridPanel)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;rowIndex&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;rowmousedown&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before a row is clicked." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SortChange" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when the grid's store sort changes.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(GridPanel)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;sortInfo&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;sortchange&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the grid's store sort changes." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ViewReady" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when the grid view is available (use this for selecting a default row).]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;el&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;viewready&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the grid view is available (use this for selecting a default row)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AfterEdit" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after a cell is edited.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;afteredit&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after a cell is edited." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeEdit" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before cell editing is triggered.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeedit&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before cell editing is triggered." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ValidateEdit" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after a cell is edited, but before the value is set in the record. Return false to cancel the change.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;validateedit&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after a cell is edited, but before the value is set in the record. Return false to cancel the change." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Command" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when the command is clicked.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;command&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;rowIndex&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;colIndex&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;command&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the command is clicked." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="GroupCommand" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when the group command is clicked.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;command&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;groupId&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;records&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;groupcommand&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the group command is clicked." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="FilterUpdate" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when the grid's filter is updated.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;filtersPlugin&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;filter&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;filterupdate&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the grid's filter is updated." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="GridPanelListeners" Extends="PanelListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="BodyScroll" Type="ComponentListener">
          <Summary><![CDATA[Fires when the body element is scrolled.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;scrollLeft&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;scrollTop&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;bodyscroll&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the body element is scrolled." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CellClick" Type="ComponentListener">
          <Summary><![CDATA[Fires when a cell is clicked. The data for the cell is drawn from the Record for this row.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;,typeof(GridPanel)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;rowIndex&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;columnIndex&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;cellclick&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a cell is clicked. The data for the cell is drawn from the Record for this row." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CellContextMenu" Type="ComponentListener">
          <Summary><![CDATA[Fires when a cell is right clicked.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(GridPanel)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;rowIndex&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;cellIndex&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;cellcontextmenu&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a cell is right clicked." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CellDblClick" Type="ComponentListener">
          <Summary><![CDATA[Fires when a cell is double clicked.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(GridPanel)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;rowIndex&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;columnIndex&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;celldblclick&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a cell is double clicked." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CellMouseDown" Type="ComponentListener">
          <Summary><![CDATA[Fires before a cell is clicked.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(GridPanel)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;rowIndex&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;columnIndex&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;cellMouseDown&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before a cell is clicked." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Click" Type="ComponentListener">
          <Summary><![CDATA[The raw click event for the entire grid.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;click&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The raw click event for the entire grid." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ColumnMove" Type="ComponentListener">
          <Summary><![CDATA[Fires when the user moves a column.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;oldIndex&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;newIndex&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;columnmove&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the user moves a column." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ColumnResize" Type="ComponentListener">
          <Summary><![CDATA[Fires when the user resizes a column.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;columnIndex&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;newSize&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;columnresize&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the user resizes a column." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ContainerClick" Type="ComponentListener">
          <Summary><![CDATA[Fires when the container is clicked. The container consists of any part of the grid body that is not covered by a row.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;el&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;containerclick&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the container is clicked. The container consists of any part of the grid body that is not covered by a row." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ContainerContextMenu" Type="ComponentListener">
          <Summary><![CDATA[Fires when the container is right clicked. The container consists of any part of the grid body that is not covered by a row.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;el&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;containercontextmenu&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the container is right clicked. The container consists of any part of the grid body that is not covered by a row." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ContainerDblClick" Type="ComponentListener">
          <Summary><![CDATA[Fires when the container is double clicked. The container consists of any part of the grid body that is not covered by a row.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;el&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;containerdblclick&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the container is double clicked. The container consists of any part of the grid body that is not covered by a row." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ContainerMouseDown" Type="ComponentListener">
          <Summary><![CDATA[Fires before the container is clicked. The container consists of any part of the grid body that is not covered by a row.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;el&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;containermousedown&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the container is clicked. The container consists of any part of the grid body that is not covered by a row." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ContextMenu" Type="ComponentListener">
          <Summary><![CDATA[The raw contextmenu event for the entire grid.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;contextmenu&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The raw contextmenu event for the entire grid." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DblClick" Type="ComponentListener">
          <Summary><![CDATA[The raw dblclick event for the entire grid.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;dblclick&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The raw dblclick event for the entire grid." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="GroupChange" Type="ComponentListener">
          <Summary><![CDATA[Fires when the grid's grouping changes (only applies for grids with a GroupingView)]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(GridPanel)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;groupField&quot;, typeof(string), &quot;A string with the grouping field, null if the store is not grouped.&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;groupchange&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the grid's grouping changes (only applies for grids with a GroupingView)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="GroupClick" Type="ComponentListener">
          <Summary><![CDATA[Fires when group header is clicked. Only applies for grids with a GroupingView.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(GridPanel)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;groupField&quot;, typeof(string), &quot;A string with the grouping field, null if the store is not grouped.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;groupValue&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;groupclick&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when group header is clicked. Only applies for grids with a GroupingView." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="GroupContextMenu" Type="ComponentListener">
          <Summary><![CDATA[Fires when group header is right clicked. Only applies for grids with a GroupingView.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(GridPanel)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;groupField&quot;, typeof(string), &quot;A string with the grouping field, null if the store is not grouped.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;groupValue&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;groupcontextmenu&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when group header is right clicked. Only applies for grids with a GroupingView." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="GroupDblClick" Type="ComponentListener">
          <Summary><![CDATA[Fires when group header is double clicked. Only applies for grids with a GroupingView.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(GridPanel)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;groupField&quot;, typeof(string), &quot;A string with the grouping field, null if the store is not grouped.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;groupValue&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;groupdblclick&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when group header is double clicked. Only applies for grids with a GroupingView." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="GroupMouseDown" Type="ComponentListener">
          <Summary><![CDATA[Fires before a group header is clicked. Only applies for grids with a GroupingView.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(GridPanel)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;groupField&quot;, typeof(string), &quot;A string with the grouping field, null if the store is not grouped.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;groupValue&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;groupmousedown&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before a group header is clicked. Only applies for grids with a GroupingView." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HeaderClick" Type="ComponentListener">
          <Summary><![CDATA[Fires when a header is clicked.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(GridPanel)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;columnIndex&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;headerclick&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a header is clicked." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HeaderContextMenu" Type="ComponentListener">
          <Summary><![CDATA[Fires when a header is right clicked.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(GridPanel)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;columnIndex&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;headercontextmenu&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a header is right clicked." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HeaderDblClick" Type="ComponentListener">
          <Summary><![CDATA[Fires when a header cell is double clicked.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(GridPanel)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;columnIndex&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;headerdblclick&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a header cell is double clicked." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HeaderMouseDown" Type="ComponentListener">
          <Summary><![CDATA[Fires before a header is clicked.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(GridPanel)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;columnIndex&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;headermousedown&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before a header is clicked." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="KeyDown" Type="ComponentListener">
          <Summary><![CDATA[The raw keydown event for the entire grid.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;keydown&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The raw keydown event for the entire grid." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="KeyPress" Type="ComponentListener" DefaultValue="null">
          <Summary><![CDATA[The raw keypress event for the entire grid.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;keypress&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="The raw keypress event for the entire grid." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MouseDown" Type="ComponentListener">
          <Summary><![CDATA[The raw mousedown event for the entire grid.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;mousedown&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The raw mousedown event for the entire grid." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MouseOut" Type="ComponentListener">
          <Summary><![CDATA[The raw mouseout event for the entire grid.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;mouseout&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The raw mouseout event for the entire grid." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MouseOver" Type="ComponentListener">
          <Summary><![CDATA[The raw mouseover event for the entire grid.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;mouseover&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The raw mouseover event for the entire grid." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MouseUp" Type="ComponentListener">
          <Summary><![CDATA[The raw mouseup event for the entire grid.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;mouseup&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The raw mouseup event for the entire grid." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Reconfigure" Type="ComponentListener">
          <Summary><![CDATA[Fires when the grid is reconfigured with a new store and/or column model.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;el&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;store&quot;, typeof(Store), &quot;The new Store&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;el&quot;, typeof(ColumnModel), &quot;The new ColumnModel&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;reconfigure&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the grid is reconfigured with a new store and/or column model." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RowBodyClick" Type="ComponentListener">
          <Summary><![CDATA[Fires when the row body is clicked. <b>Only applies for grids with {@link Ext.grid.GridView#enableRowBody enableRowBody} configured.</b>]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(GridPanel)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;rowIndex&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;rowbodyclick&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the row body is clicked. &lt;b&gt;Only applies for grids with {@link Ext.grid.GridView#enableRowBody enableRowBody} configured.&lt;/b&gt;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RowBodyContextMenu" Type="ComponentListener">
          <Summary><![CDATA[Fires when the row body is right clicked. <b>Only applies for grids with {@link Ext.grid.GridView#enableRowBody enableRowBody} configured.</b>]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(GridPanel)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;rowIndex&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;rowbodycontextmenu&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the row body is right clicked. &lt;b&gt;Only applies for grids with {@link Ext.grid.GridView#enableRowBody enableRowBody} configured.&lt;/b&gt;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RowBodyDblClick" Type="ComponentListener">
          <Summary><![CDATA[Fires when the row body is double clicked. <b>Only applies for grids with {@link Ext.grid.GridView#enableRowBody enableRowBody} configured.</b>]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(GridPanel)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;rowIndex&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;rowbodydblclick&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the row body is double clicked. &lt;b&gt;Only applies for grids with {@link Ext.grid.GridView#enableRowBody enableRowBody} configured.&lt;/b&gt;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RowBodyMouseDown" Type="ComponentListener">
          <Summary><![CDATA[Fires before the row body is clicked. <b>Only applies for grids with {@link Ext.grid.GridView#enableRowBody enableRowBody} configured.</b>]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(GridPanel)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;rowIndex&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;rowbodymousedown&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the row body is clicked. &lt;b&gt;Only applies for grids with {@link Ext.grid.GridView#enableRowBody enableRowBody} configured.&lt;/b&gt;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RowClick" Type="ComponentListener">
          <Summary><![CDATA[Fires when a row is clicked.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(GridPanel)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;rowIndex&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;rowclick&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a row is clicked." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RowContextMenu" Type="ComponentListener">
          <Summary><![CDATA[Fires when a row is right clicked.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(GridPanel)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;rowIndex&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;rowcontextmenu&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a row is right clicked." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RowDblClick" Type="ComponentListener">
          <Summary><![CDATA[Fires when a row is double clicked.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(GridPanel)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;rowIndex&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;rowdblclick&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a row is double clicked." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RowMouseDown" Type="ComponentListener">
          <Summary><![CDATA[Fires before a row is clicked.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(GridPanel)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;rowIndex&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;rowmousedown&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before a row is clicked." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SortChange" Type="ComponentListener">
          <Summary><![CDATA[Fires when the grid's store sort changes.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(GridPanel)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;sortInfo&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;sortchange&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the grid's store sort changes." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ViewReady" Type="ComponentListener">
          <Summary><![CDATA[Fires when the grid view is available (use this for selecting a default row).]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;el&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;viewready&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the grid view is available (use this for selecting a default row)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AfterEdit" Type="ComponentListener">
          <Summary><![CDATA[Fires after a cell is edited.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;afteredit&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after a cell is edited." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeEdit" Type="ComponentListener">
          <Summary><![CDATA[Fires before cell editing is triggered.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeedit&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before cell editing is triggered." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ValidateEdit" Type="ComponentListener">
          <Summary><![CDATA[Fires after a cell is edited, but before the value is set in the record. Return false to cancel the change.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;validateedit&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after a cell is edited, but before the value is set in the record. Return false to cancel the change." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Command" Type="ComponentListener">
          <Summary><![CDATA[Fires when the command is clicked.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;command&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;rowIndex&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;colIndex&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;command&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the command is clicked." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="GroupCommand" Type="ComponentListener">
          <Summary><![CDATA[Fires when the group command is clicked.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;command&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;groupId&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;records&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;groupcommand&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the group command is clicked." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="FilterUpdate" Type="ComponentListener">
          <Summary><![CDATA[Fires when the grid's filter is updated.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;filtersPlugin&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;filter&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;filterupdate&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the grid's filter is updated." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="GridPanelMaintainScrollPositionOnRefresh" Extends="Plugin">
      <Attributes>
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(GridPanelMaintainScrollPositionOnRefresh), &quot;Build.ToolboxIcons.Plugin.bmp&quot;" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:GridPanelMaintainScrollPositionOnRefresh runat=\&quot;server\&quot; /&gt;&quot;" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="RestoreDelay" Type="int" DefaultValue="20">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. GridPanelMaintainScrollPositionOnRefresh&quot;" />
            <Attribute Type="DefaultValue" RawValue="20" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="GridView" Extends="LazyObservable">
      <Summary><![CDATA[This class encapsulates the user interface of an Ext.grid.GridPanel. Methods of this class may be used to access user interface elements to enable special display effects. Do not change the DOM structure of the user interface.This class does not provide ways to manipulate the underlying data. The data model of a Grid is held in an Ext.data.Store.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="Description" RawValue="This class encapsulates the user interface of an Ext.grid.GridPanel. Methods of this class may be used to access user interface elements to enable special display effects. Do not change the DOM structure of the user interface.This class does not provide ways to manipulate the underlying data. The data model of a Grid is held in an Ext.data.Store." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="AutoFill" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to auto expand the columns to fit the grid when the grid is created.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. GridView&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to auto expand the columns to fit the grid when the grid is created." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ColumnsText" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The text displayed in the \"Columns\" menu item]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Category" RawValue="&quot;3. GridView&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The text displayed in the \&quot;Columns\&quot; menu item" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CellSelector" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The selector used to find cells internally]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Category" RawValue="&quot;3. GridView&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The selector used to find cells internally" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CellSelectorDepth" Type="int" DefaultValue="4">
          <Summary><![CDATA[The number of levels to search for cells in event delegation (defaults to 4)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Category" RawValue="&quot;3. GridView&quot;" />
            <Attribute Type="DefaultValue" RawValue="4" />
            <Attribute Type="Description" RawValue="The number of levels to search for cells in event delegation (defaults to 4)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DeferEmptyText" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to defer emptyText being applied until the store's first load]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. GridView&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="True to defer emptyText being applied until the store's first load" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EmptyText" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[Default text to display in the grid body when no rows are available (defaults to '').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Category" RawValue="&quot;3. GridView&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="Default text to display in the grid body when no rows are available (defaults to '')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EnableRowBody" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to add a second TR element per row that can be used to provide a row body that spans beneath the data row. Use the getRowClass method's rowParams config to customize the row body.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. GridView&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to add a second TR element per row that can be used to provide a row body that spans beneath the data row. Use the getRowClass method's rowParams config to customize the row body." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ForceFit" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to auto expand/contract the size of the columns to fit the grid width and prevent horizontal scrolling.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. GridView&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to auto expand/contract the size of the columns to fit the grid width and prevent horizontal scrolling." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HeadersDisabled" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to disable the grid column headers (defaults to false).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. GridView&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to disable the grid column headers (defaults to false)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HeaderMenuOpenCls" Type="string" DefaultValue="&quot;x-grid3-hd-menu-open&quot;">
          <Summary><![CDATA[The CSS class to add to the header cell when its menu is visible. Defaults to 'x-grid3-hd-menu-open']]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Category" RawValue="&quot;3. GridView&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;x-grid3-hd-menu-open&quot;" />
            <Attribute Type="Description" RawValue="The CSS class to add to the header cell when its menu is visible. Defaults to 'x-grid3-hd-menu-open'" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RowOverCls" Type="string" DefaultValue="&quot;x-grid3-row-over&quot;">
          <Summary><![CDATA[The CSS class added to each row when it is hovered over. Defaults to 'x-grid3-row-over']]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Category" RawValue="&quot;3. GridView&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;x-grid3-row-over&quot;" />
            <Attribute Type="Description" RawValue="The CSS class added to each row when it is hovered over. Defaults to 'x-grid3-row-over'" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RowSelector" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The selector used to find rows internally]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Category" RawValue="&quot;3. GridView&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The selector used to find rows internally" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RowSelectorDepth" Type="int" DefaultValue="10">
          <Summary><![CDATA[The number of levels to search for rows in event delegation (defaults to 10)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Category" RawValue="&quot;3. GridView&quot;" />
            <Attribute Type="DefaultValue" RawValue="10" />
            <Attribute Type="Description" RawValue="The number of levels to search for rows in event delegation (defaults to 10)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RowBodySelector" Type="string" DefaultValue="&quot;div.x-grid3-row-body&quot;">
          <Summary><![CDATA[The selector used to find row bodies internally (defaults to <tt>'div.x-grid3-row'</tt>)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Category" RawValue="&quot;3. GridView&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;div.x-grid3-row-body&quot;" />
            <Attribute Type="Description" RawValue="The selector used to find row bodies internally (defaults to &lt;tt&gt;'div.x-grid3-row'&lt;/tt&gt;)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RowBodySelectorDepth" Type="int" DefaultValue="10">
          <Summary><![CDATA[The number of levels to search for row bodies in event delegation (defaults to <tt>10</tt>)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Category" RawValue="&quot;3. GridView&quot;" />
            <Attribute Type="DefaultValue" RawValue="10" />
            <Attribute Type="Description" RawValue="The number of levels to search for row bodies in event delegation (defaults to &lt;tt&gt;10&lt;/tt&gt;)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ScrollOffset" Type="int" DefaultValue="19">
          <Summary><![CDATA[The amount of space to reserve for the scrollbar (defaults to 19 pixels)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Category" RawValue="&quot;3. GridView&quot;" />
            <Attribute Type="DefaultValue" RawValue="19" />
            <Attribute Type="Description" RawValue="The amount of space to reserve for the scrollbar (defaults to 19 pixels)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SortAscText" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The text displayed in the \"Sort Ascending\" menu item]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Category" RawValue="&quot;3. GridView&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The text displayed in the \&quot;Sort Ascending\&quot; menu item" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SortDescText" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The text displayed in the \"Sort Descending\" menu item]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Category" RawValue="&quot;3. GridView&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The text displayed in the \&quot;Sort Descending\&quot; menu item" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SelectedRowClass" Type="string" DefaultValue="&quot;x-grid3-row-selected&quot;">
          <Summary><![CDATA[The CSS class applied to a selected row (defaults to \"x-grid3-row-selected\").]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Category" RawValue="&quot;3. GridView&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;x-grid3-row-selected&quot;" />
            <Attribute Type="Description" RawValue="The CSS class applied to a selected row (defaults to \&quot;x-grid3-row-selected\&quot;)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SortAscClass" Type="string" DefaultValue="&quot;sort-asc&quot;">
          <Summary><![CDATA[The CSS class applied to a header when it is asc sorted.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;3. GridView&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;sort-asc&quot;" />
            <Attribute Type="Description" RawValue="The CSS class applied to a header when it is asc sorted." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SortDescClass" Type="string" DefaultValue="&quot;sort-desc&quot;">
          <Summary><![CDATA[The CSS class applied to a header when it is desc sorted.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;3. GridView&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;sort-desc&quot;" />
            <Attribute Type="Description" RawValue="The CSS class applied to a header when it is desc sorted." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SortClasses" Access="ProtectedInternal" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MarkDirty" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to show the dirty cell indicator when a cell has been modified. Defaults to true.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. GridView&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="True to show the dirty cell indicator when a cell has been modified. Defaults to true." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="GetRowClass" Type="JFunction">
          <Summary><![CDATA[Override this function to apply custom CSS classes to rows during rendering.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;3. GridView&quot;" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="Override this function to apply custom CSS classes to rows during rendering." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Listeners" Type="GridViewListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="GridViewDirectEvents">
          <Summary><![CDATA[Server-side Ajax Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="Description" RawValue="Server-side Ajax Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="StandardHeaderRow" Type="bool" DefaultValue="true">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. GridView&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SplitHandleWidth" Type="int" DefaultValue="5">
          <Summary><![CDATA[The width of the column header splitter target area.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. GridView&quot;" />
            <Attribute Type="DefaultValue" RawValue="5" />
            <Attribute Type="Description" RawValue="The width of the column header splitter target area." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HeaderGroupRows" Type="HeaderGroupRows">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="headerGroupRowsProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="ConfigOption" RawValue="&quot;headerGroupRows&quot;, JsonMode.Raw" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HeaderRows" Type="HeaderRowCollection">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HeaderRowsProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="ConfigOption" RawValue="&quot;headerRows&quot;, JsonMode.Raw" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Templates" Type="GridViewTemplates">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;templates&quot;, JsonMode.Object" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods>
        <Method Name="FocusCell" ParamsRaw="int row, int col">
          <Summary><![CDATA[Focuses the specified cell.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Focuses the specified cell." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="FocusRow" ParamsRaw="int row">
          <Summary><![CDATA[Focuses the specified row.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Focuses the specified row." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Refresh" ParamsRaw="bool headersToo">
          <Summary><![CDATA[Refreshs the grid UI]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Refreshs the grid UI" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Refresh">
          <Summary><![CDATA[Refreshs the grid UI]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Refreshs the grid UI" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="ScrollToTop">
          <Summary><![CDATA[Scrolls the grid to the top]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Scrolls the grid to the top" />
          </Attributes>
          <Parameters />
        </Method>
      </Methods>
    </Class>
    <Class Name="GridViewCollection" Extends="SingleItemCollection&lt;GridView&gt;">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="View" Type="GridView">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="typeof(LazyControlJsonConverter)" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="GridViewCollectionEditor" Extends="CollectionEditor">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="GridViewDirectEvents" Extends="ComponentBaseDirectEvents">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="BeforeRefresh" Type="ComponentDirectEvent">
          <Summary><![CDATA[Internal UI Event. Fired before the view is refreshed.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(GridView)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforerefresh&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Internal UI Event. Fired before the view is refreshed." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeRowRemoved" Type="ComponentDirectEvent">
          <Summary><![CDATA[Internal UI Event. Fired before a row is removed.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(GridView)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;rowIndex&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;record&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforerowremoved&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Internal UI Event. Fired before a row is removed." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeRowsInserted" Type="ComponentDirectEvent">
          <Summary><![CDATA[Internal UI Event. Fired before rows are inserted.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(GridView)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;firstRow&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;lastRow&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforerowsinserted&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Internal UI Event. Fired before rows are inserted." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Refresh" Type="ComponentDirectEvent">
          <Summary><![CDATA[Internal UI Event. Fired after the GridView's body has been refreshed.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(GridView)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;refresh&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Internal UI Event. Fired after the GridView's body has been refreshed." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RowRemoved" Type="ComponentDirectEvent">
          <Summary><![CDATA[Internal UI Event. Fired after a row is removed.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(GridView)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;rowIndex&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;record&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;rowremoved&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Internal UI Event. Fired after a row is removed." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RowsInserted" Type="ComponentDirectEvent">
          <Summary><![CDATA[Internal UI Event. Fired after rows are inserted.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(GridView)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;firstRow&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;lastRow&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;rowsinserted&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Internal UI Event. Fired after rows are inserted." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RowUpdated" Type="ComponentDirectEvent">
          <Summary><![CDATA[Internal UI Event. Fired after a row has been updated.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(GridView)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;rowIndex&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;record&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;rowupdated&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Internal UI Event. Fired after a row has been updated." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="GridViewListeners" Extends="ComponentBaseListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="BeforeRefresh" Type="ComponentListener">
          <Summary><![CDATA[Internal UI Event. Fired before the view is refreshed.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(GridView)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforerefresh&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Internal UI Event. Fired before the view is refreshed." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeRowRemoved" Type="ComponentListener">
          <Summary><![CDATA[Internal UI Event. Fired before a row is removed.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(GridView)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;rowIndex&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;record&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforerowremoved&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Internal UI Event. Fired before a row is removed." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeRowsInserted" Type="ComponentListener">
          <Summary><![CDATA[Internal UI Event. Fired before rows are inserted.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(GridView)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;firstRow&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;lastRow&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforerowsinserted&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Internal UI Event. Fired before rows are inserted." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Refresh" Type="ComponentListener">
          <Summary><![CDATA[Internal UI Event. Fired after the GridView's body has been refreshed.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(GridView)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;refresh&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Internal UI Event. Fired after the GridView's body has been refreshed." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RowRemoved" Type="ComponentListener">
          <Summary><![CDATA[Internal UI Event. Fired after a row is removed.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(GridView)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;rowIndex&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;record&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;rowremoved&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Internal UI Event. Fired after a row is removed." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RowsInserted" Type="ComponentListener">
          <Summary><![CDATA[Internal UI Event. Fired after rows are inserted.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(GridView)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;firstRow&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;lastRow&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;rowsinserted&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Internal UI Event. Fired after rows are inserted." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RowUpdated" Type="ComponentListener">
          <Summary><![CDATA[Internal UI Event. Fired after a row has been updated.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(GridView)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;rowIndex&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;record&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;rowupdated&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Internal UI Event. Fired after a row has been updated." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="GridViewTemplates" Extends="StateManagedItem">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Header" Type="XTemplate">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;header&quot;, typeof(LazyControlJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="Group">
      <Attributes />
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="GroupCollection" Extends="List&lt;Group&gt;">
      <Attributes />
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="GroupImageCommand" Extends="ImageCommandBase">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="RightAlign" Type="bool" DefaultValue="false">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="GroupImageCommandCollection" Extends="StateManagedCollection&lt;GroupImageCommand&gt;">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="GroupingSummary" Extends="Plugin">
      <Summary><![CDATA[Grouping summary plugin for GridPanel]]></Summary>
      <Attributes>
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(GroupingSummary), &quot;Build.ToolboxIcons.Plugin.bmp&quot;" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:GroupingSummary runat=\&quot;server\&quot; /&gt;&quot;" />
        <Attribute Type="Description" RawValue="Grouping summary plugin for GridPanel" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="GroupingSummaryColumn" Extends="Column">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="SummaryType" Type="SummaryType" DefaultValue="SummaryType.None">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="Category" RawValue="&quot;3. GroupingSummaryColumn&quot;" />
            <Attribute Type="DefaultValue" RawValue="SummaryType.None" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CustomSummaryType" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;summaryType&quot;" />
            <Attribute Type="Category" RawValue="&quot;3. GroupingSummaryColumn&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SummaryRenderer" Type="Renderer" DefaultValue="null">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="typeof(RendererJsonConverter)" />
            <Attribute Type="Category" RawValue="&quot;3. GroupingSummaryColumn&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="GroupingView" Extends="GridView">
      <Summary><![CDATA[Adds the ability for single level grouping to the grid.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" RawValue="Adds the ability for single level grouping to the grid." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="EmptyGroupText" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The text to display when there is an empty group value.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Category" RawValue="&quot;4. GroupingView&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The text to display when there is an empty group value." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EnableGrouping" Type="bool" DefaultValue="true">
          <Summary><![CDATA[False to disable grouping functionality (defaults to true).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. GroupingView&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="False to disable grouping functionality (defaults to true)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EnableGroupingMenu" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to enable the grouping control in the column menu.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. GroupingView&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="True to enable the grouping control in the column menu." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EnableNoGroups" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to allow the user to turn off grouping.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. GroupingView&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="True to allow the user to turn off grouping." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="GroupByText" Type="string" DefaultValue="&quot;Group By This Field&quot;">
          <Summary><![CDATA[Text displayed in the grid header menu for grouping by a column (defaults to 'Group By This Field').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Category" RawValue="&quot;4. GroupingView&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;Group By This Field&quot;" />
            <Attribute Type="Description" RawValue="Text displayed in the grid header menu for grouping by a column (defaults to 'Group By This Field')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="GroupTextTpl" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The template used to render the group header. See Ext.XTemplate for information on how to format data using a template.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. GroupingView&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The template used to render the group header. See Ext.XTemplate for information on how to format data using a template." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Header" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The text with which to prefix the group field value in the group header line.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Category" RawValue="&quot;4. GroupingView&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The text with which to prefix the group field value in the group header line." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HideGroupedColumn" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to hide the column that is currently grouped.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. GroupingView&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to hide the column that is currently grouped." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IgnoreAdd" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to skip refreshing the view when new rows are added (defaults to false).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. GroupingView&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to skip refreshing the view when new rows are added (defaults to false)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ShowGroupName" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to display the name for each set of grouped rows (defaults to true).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. GroupingView&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="True to display the name for each set of grouped rows (defaults to true)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ShowGroupsText" Type="string" DefaultValue="&quot;Show in Groups&quot;">
          <Summary><![CDATA[Text displayed in the grid header for enabling/disabling grouping (defaults to 'Show in Groups').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Category" RawValue="&quot;4. GroupingView&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;Show in Groups&quot;" />
            <Attribute Type="Description" RawValue="Text displayed in the grid header for enabling/disabling grouping (defaults to 'Show in Groups')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="StartCollapsed" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to start all groups collapsed.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. GroupingView&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to start all groups collapsed." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods>
        <Method Name="CollapseAllGroups">
          <Summary><![CDATA[Collapses all grouped rows.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Collapses all grouped rows." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="ExpandAllGroups">
          <Summary><![CDATA[Expands all grouped rows.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Expands all grouped rows." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="ToggleAllGroups" ParamsRaw="bool expanded">
          <Summary><![CDATA[Toggles all groups if no value is passed, otherwise sets the expanded state of all groups to the value passed.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Toggles all groups if no value is passed, otherwise sets the expanded state of all groups to the value passed." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="ToggleAllGroups">
          <Summary><![CDATA[Toggles all groups]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Toggles all groups" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="ToggleGroup" ParamsRaw="string groupId, bool expanded">
          <Summary><![CDATA[Toggles the specified group if no value is passed, otherwise sets the expanded state of the group to the value passed.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Toggles the specified group if no value is passed, otherwise sets the expanded state of the group to the value passed." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="ToggleGroup" ParamsRaw="string groupId">
          <Summary><![CDATA[Toggles the specified group]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Toggles the specified group" />
          </Attributes>
          <Parameters />
        </Method>
      </Methods>
    </Class>
    <Class Name="GroupStore" Extends="Store">
      <Attributes />
      <ConfigOptions>
        <ConfigOption Name="MemoryProxy" Modifier="Override" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;proxy&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="GroupTab" Extends="ContainerBase" Inherits="IPostBackDataHandler">
      <Summary><![CDATA[GroupTab]]></Summary>
      <Attributes>
        <Attribute Type="ToolboxBitmap" RawValue="typeof(GroupTab), &quot;Build.ToolboxIcons.GroupTab.bmp&quot;" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:GroupTab runat=\&quot;server\&quot; Title=\&quot;GroupTab\&quot; /&gt;&quot;" />
        <Attribute Type="Description" RawValue="GroupTab" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Listeners" Type="GroupTabListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="TabPanelDirectEvents">
          <Summary><![CDATA[Server-side Ajax Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Server-side Ajax Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MainItem" Type="int" DefaultValue="0">
          <Summary><![CDATA[The main item.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. GroupTab&quot;" />
            <Attribute Type="DefaultValue" RawValue="0" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetMainItem&quot;" />
            <Attribute Type="Description" RawValue="The main item." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Expanded" Type="bool" DefaultValue="true">
          <Summary><![CDATA[Expand the group.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. GroupTab&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Expand the group." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DeferredRender" Type="bool" DefaultValue="true">
          <Summary><![CDATA[Deferred Render]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. GroupTab&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Deferred Render" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ActiveTabIndex" Type="int" DefaultValue="-1">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;6. GroupTab&quot;" />
            <Attribute Type="DefaultValue" RawValue="-1" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetActiveTab&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ActiveTabProxy" Access="ProtectedInternal" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;activeTab&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IdDelimiter" Type="string" DefaultValue="&quot;__&quot;">
          <Summary><![CDATA[Id Delimiter]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. GroupTab&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;__&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Id Delimiter" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HeaderAsText" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Header as Text]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. GroupTab&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Header as Text" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Frame" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Frame]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. GroupTab&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Frame" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HideBorders" Modifier="Override" Type="bool" DefaultValue="true">
          <Summary><![CDATA[Hide borders]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. GroupTab&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Hide borders" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="GroupTabDirectEvents" Extends="ContainerDirectEvents">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Activate" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after tab is activated.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Component), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;activate&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after tab is activated." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Deactivate" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after tab is deactivated.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Component), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;deactivate&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after tab is deactivated." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ChangeMainItem" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after main item is changed.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Component), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;newItem&quot;, typeof(Component), &quot;newItem&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;oldItem&quot;, typeof(Component), &quot;oldItem&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;changemainitem&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after main item is changed." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeTabChange" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before tab is changed.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Component), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;newTab&quot;, typeof(Component), &quot;newTab&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;tab&quot;, typeof(Component), &quot;tab&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforetabchange&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before tab is changed." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TabChange" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after tab is changed.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Component), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;tab&quot;, typeof(Component), &quot;tab&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;tabchange&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after tab is changed." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="GroupTabListeners" Extends="ContainerListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Activate" Type="ComponentListener">
          <Summary><![CDATA[Fires after tab is activated.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Component), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;activate&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after tab is activated." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Deactivate" Type="ComponentListener">
          <Summary><![CDATA[Fires after tab is deactivated.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Component), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;deactivate&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after tab is deactivated." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ChangeMainItem" Type="ComponentListener">
          <Summary><![CDATA[Fires after main item is changed.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Component), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;newItem&quot;, typeof(Component), &quot;newItem&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;oldItem&quot;, typeof(Component), &quot;oldItem&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;changemainitem&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after main item is changed." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeTabChange" Type="ComponentListener">
          <Summary><![CDATA[Fires before tab is changed.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Component), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;newTab&quot;, typeof(Component), &quot;newTab&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;tab&quot;, typeof(Component), &quot;tab&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforetabchange&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before tab is changed." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TabChange" Type="ComponentListener">
          <Summary><![CDATA[Fires after tab is changed.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Component), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;tab&quot;, typeof(Component), &quot;tab&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;tabchange&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after tab is changed." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="GroupTabPanel" Extends="PanelBase" Inherits="IItems,IPostBackEventHandler">
      <Attributes>
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(GroupTabPanel), &quot;Build.ToolboxIcons.GroupTabPanel.bmp&quot;" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:GroupTabPanel runat=\&quot;server\&quot; Title=\&quot;GroupTabPanel\&quot;&gt;&lt;Items&gt;&lt;/Items&gt;&lt;/{0}:GroupTabPanel&gt;&quot;" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="DeferredRender" Type="bool" DefaultValue="true">
          <Summary><![CDATA[Deferred Render]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. GroupTabPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Deferred Render" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ActiveGroupIndex" Type="int" DefaultValue="-1">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;7. GroupTabPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="-1" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetActiveGroup&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ActiveGroupProxy" Access="ProtectedInternal" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;activeGroup&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Groups" Type="ItemsCollection&lt;GroupTab&gt;" DefaultValue="null">
          <Summary><![CDATA[Groups Collection]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;items&quot;, typeof(ItemCollectionJsonConverter)" />
            <Attribute Type="Category" RawValue="&quot;7. GroupTabPanel&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="Groups Collection" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TabPosition" Type="TabAlign" DefaultValue="TabAlign.Left">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="Category" RawValue="&quot;7. GroupTabPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="TabAlign.Left" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TabWidth" Type="Unit" DefaultValue="typeof(Unit), &quot;120&quot;">
          <Summary><![CDATA[The initial width in pixels of each new tab (defaults to 120).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. GroupTabPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="typeof(Unit), &quot;120&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The initial width in pixels of each new tab (defaults to 120)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Listeners" Type="GroupTabPanelListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="GroupTabPanelDirectEvents">
          <Summary><![CDATA[Server-side Ajax Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Server-side Ajax Event Handlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="GroupTabPanelDirectEvents" Extends="ContainerDirectEvents">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="BeforeGroupChange" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before the active group changes. Handlers can return false to cancel the tab change.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(GroupTabPanel), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;newGroup&quot;, typeof(GroupTab), &quot;The group being activated&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;currentGroup&quot;, typeof(GroupTab), &quot;The current active group&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforegroupchange&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the active group changes. Handlers can return false to cancel the tab change." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="GroupChange" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after the active group has changed.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(GroupTabPanel), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;group&quot;, typeof(GroupTab), &quot;The new active group&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;groupchange&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the active group has changed." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="GroupTabPanelListeners" Extends="ContainerListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="BeforeGroupChange" Type="ComponentListener">
          <Summary><![CDATA[Fires before the active group changes. Handlers can return false to cancel the tab change.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(GroupTabPanel), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;newGroup&quot;, typeof(GroupTab), &quot;The group being activated&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;currentGroup&quot;, typeof(GroupTab), &quot;The current active group&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforegroupchange&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the active group changes. Handlers can return false to cancel the tab change." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="GroupChange" Type="ComponentListener">
          <Summary><![CDATA[Fires after the active group has changed.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(GroupTabPanel), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;group&quot;, typeof(GroupTab), &quot;The new active group&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;groupchange&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the active group has changed." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="GuidJsonConverter" Extends="ExtJsonConverter">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="HandlerConfig" Extends="ExtObject">
      <Attributes>
        <Attribute Type="ToolboxItem" RawValue="false" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Scope" Type="string" DefaultValue="&quot;this&quot;">
          <Summary><![CDATA[The scope in which to execute the handler function. The handler function's 'this' context.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;this&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The scope in which to execute the handler function. The handler function's 'this' context." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Delegate" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A simple selector to filter the target or look for a descendant of the target.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="A simple selector to filter the target or look for a descendant of the target." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="StopEvent" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to stop the event. That is stop propagation, and prevent the default action.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to stop the event. That is stop propagation, and prevent the default action." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="PreventDefault" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to prevent the default action.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to prevent the default action." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="StopPropagation" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to prevent event propagation.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to prevent event propagation." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Normalized" Type="bool" DefaultValue="false">
          <Summary><![CDATA[False to pass a browser event to the handler function instead of an Ext.EventObject.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="False to pass a browser event to the handler function instead of an Ext.EventObject." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Delay" Type="int" DefaultValue="0">
          <Summary><![CDATA[The number of milliseconds to delay the invocation of the handler after the event fires.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="0" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The number of milliseconds to delay the invocation of the handler after the event fires." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Single" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to add a handler to handle just the next firing of the event, and then remove itself.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to add a handler to handle just the next firing of the event, and then remove itself." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Buffer" Type="int" DefaultValue="0">
          <Summary><![CDATA[Causes the handler to be scheduled to run in an Ext.util.DelayedTask delayed by the specified number of milliseconds. If the event fires again within that time, the original handler is not invoked, but the new handler is scheduled in its place.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="0" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Causes the handler to be scheduled to run in an Ext.util.DelayedTask delayed by the specified number of milliseconds. If the event fires again within that time, the original handler is not invoked, but the new handler is scheduled in its place." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TargetProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;taget&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="HBoxLayout" Extends="BoxLayout">
      <Summary><![CDATA[A layout that arranges items horizontally]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:HBoxLayout runat=\&quot;server\&quot;&gt;&lt;/{0}:HBoxLayout&gt;&quot;" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(HBoxLayout), &quot;Build.ToolboxIcons.Layout.bmp&quot;" />
        <Attribute Type="Description" RawValue="A layout that arranges items horizontally" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="LayoutConfig" Modifier="Override" Access="ProtectedInternal" Type="LayoutConfig">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Object" />
            <Attribute Type="Browsable" RawValue="false" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Align" Type="HBoxAlign" DefaultValue="HBoxAlign.Top">
          <Summary><![CDATA[Controls how the child items of the container are aligned.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;7. HBoxLayout&quot;" />
            <Attribute Type="DefaultValue" RawValue="HBoxAlign.Top" />
            <Attribute Type="Description" RawValue="Controls how the child items of the container are aligned." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="HBoxLayoutConfig" Extends="BoxLayoutConfig">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Align" Type="HBoxAlign" DefaultValue="HBoxAlign.Top">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="DefaultValue" RawValue="HBoxAlign.Top" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="HeaderColumn" Extends="StateManagedItem">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="TargetProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;target&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Target" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The target element which will be placed to the header.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;3. GridView&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The target element which will be placed to the header." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AutoWidthElement" Type="bool" DefaultValue="true">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;autoWidth&quot;" />
            <Attribute Type="Category" RawValue="&quot;3. GridView&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AutoWidthCorrection" Type="int" DefaultValue="3">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;correction&quot;" />
            <Attribute Type="Category" RawValue="&quot;3. GridView&quot;" />
            <Attribute Type="DefaultValue" RawValue="3" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Cls" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Component" Type="ItemsCollection&lt;Component&gt;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;3. GridView&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;component&quot;, typeof(ItemCollectionJsonConverter)" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="HeaderColumnCollection" Extends="StateManagedCollection&lt;HeaderColumn&gt;">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="HeaderGroupColumn" Extends="StateManagedItem">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Align" Type="Alignment" DefaultValue="Alignment.Left">
          <Summary><![CDATA[(optional) Set the CSS text-align property of the column. Defaults to undefined.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="Category" RawValue="&quot;2. HeaderGroupColumn&quot;" />
            <Attribute Type="DefaultValue" RawValue="Alignment.Left" />
            <Attribute Type="Description" RawValue="(optional) Set the CSS text-align property of the column. Defaults to undefined." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ColSpan" Type="int" DefaultValue="1">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;colspan&quot;" />
            <Attribute Type="Category" RawValue="&quot;2. HeaderGroupColumn&quot;" />
            <Attribute Type="DefaultValue" RawValue="1" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="GroupId" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;dataIndex&quot;" />
            <Attribute Type="Category" RawValue="&quot;2. HeaderGroupColumn&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Tooltip" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;2. HeaderGroupColumn&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Header" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;2. HeaderGroupColumn&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="HeaderGroupColumns" Extends="StateManagedCollection&lt;HeaderGroupColumn&gt;">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="HeaderGroupRow" Extends="StateManagedItem">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Columns" Type="HeaderGroupColumns">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="HeaderGroupRows" Extends="StateManagedCollection&lt;HeaderGroupRow&gt;">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="HeaderRow" Extends="StateManagedItem">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Columns" Type="HeaderColumnCollection">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Cls" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="HeaderRowCollection" Extends="StateManagedCollection&lt;HeaderRow&gt;">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="Hidden" Extends="Field">
      <Summary><![CDATA[A basic hidden field for storing hidden values in forms that need to be passed in the form submit. Can be used as a direct replacement for the traditional &lt;asp:Hidden> Web Control.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:Hidden runat=\&quot;server\&quot; /&gt;&quot;" />
        <Attribute Type="DefaultProperty" RawValue="&quot;Text&quot;" />
        <Attribute Type="DefaultEvent" RawValue="&quot;ValueChanged&quot;" />
        <Attribute Type="ValidationProperty" RawValue="&quot;Text&quot;" />
        <Attribute Type="ControlValueProperty" RawValue="&quot;Text&quot;" />
        <Attribute Type="ParseChildren" RawValue="true" />
        <Attribute Type="PersistChildren" RawValue="false" />
        <Attribute Type="SupportsEventValidation" />
        <Attribute Type="NonVisualControl" />
        <Attribute Type="Designer" RawValue="typeof(HiddenFieldDesigner)" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(Hidden), &quot;Build.ToolboxIcons.Hidden.bmp&quot;" />
        <Attribute Type="Description" RawValue="A basic hidden field for storing hidden values in forms that need to be passed in the form submit. Can be used as a direct replacement for the traditional &amp;lt;asp:Hidden&gt; Web Control." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Text" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The Text value to initialize this field with.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Bindable" RawValue="true, BindingDirection.TwoWay" />
            <Attribute Type="Description" RawValue="The Text value to initialize this field with." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EmptyValue" Modifier="Override" Type="object" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The fields null value.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The fields null value." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Listeners" Type="FieldListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="FieldDirectEvents">
          <Summary><![CDATA[Server-side Ajax Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Server-side Ajax Event Handlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="Highlight" Extends="Fx">
      <Summary><![CDATA[Highlights the Element by setting a color (applies to the background-color by default, but can be changed using the 'attr' config option) and then fading back to the original color. If no original color is available, you should provide the 'endColor' config option which will be cleared after the animation. ]]></Summary>
      <Attributes>
        <Attribute Type="Description" RawValue="Highlights the Element by setting a color (applies to the background-color by default, but can be changed using the 'attr' config option) and then fading back to the original color. If no original color is available, you should provide the 'endColor' config option which will be cleared after the animation. " />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="FxName" Modifier="Override" Type="string">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="HighlightConfig" Extends="FxConfig">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Attr" Type="string" DefaultValue="&quot;background-color&quot;">
          <Summary><![CDATA[Can be any valid CSS property (attribute) that supports a color value]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;background-color&quot;" />
            <Attribute Type="Description" RawValue="Can be any valid CSS property (attribute) that supports a color value" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EndColor" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[End fading color]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="End fading color" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="History" Extends="Observable" Inherits="ICustomConfigSerialization,IVirtual">
      <Summary><![CDATA[History management component that allows you to register arbitrary tokens that signify application history state on navigation actions.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:History runat=\&quot;server\&quot;&gt;&lt;/{0}:History&gt;&quot;" />
        <Attribute Type="ParseChildren" RawValue="true" />
        <Attribute Type="PersistChildren" RawValue="false" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(History), &quot;Build.ToolboxIcons.History.bmp&quot;" />
        <Attribute Type="Description" RawValue="History management component that allows you to register arbitrary tokens that signify application history state on navigation actions." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="RenderForm" Type="bool" DefaultValue="true">
          <Summary><![CDATA[False to don't render form tags. By default check ASP.NET form and if it is absent then render form.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. History&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="False to don't render form tags. By default check ASP.NET form and if it is absent then render form." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Listeners" Type="HistoryListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="HistoryDirectEvents">
          <Summary><![CDATA[Server-side DirectEventHandlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Server-side DirectEventHandlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods>
        <Method Name="CallHistory" ParamsRaw="string name, params object[] args">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Add" ParamsRaw="string token, bool preventDuplicate">
          <Summary><![CDATA[Add a new token to the history stack. This can be any arbitrary value, although it would commonly be the concatenation of a component id and another id marking the specifc history state of that component.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Add a new token to the history stack. This can be any arbitrary value, although it would commonly be the concatenation of a component id and another id marking the specifc history state of that component." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Add" ParamsRaw="string token">
          <Summary><![CDATA[Add a new token to the history stack. This can be any arbitrary value, although it would commonly be the concatenation of a component id and another id marking the specifc history state of that component.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Add a new token to the history stack. This can be any arbitrary value, although it would commonly be the concatenation of a component id and another id marking the specifc history state of that component." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Back">
          <Summary><![CDATA[Programmatically steps back one step in browser history (equivalent to the user pressing the Back button).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Programmatically steps back one step in browser history (equivalent to the user pressing the Back button)." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Forward">
          <Summary><![CDATA[Programmatically steps forward one step in browser history (equivalent to the user pressing the Forward button).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Programmatically steps forward one step in browser history (equivalent to the user pressing the Forward button)." />
          </Attributes>
          <Parameters />
        </Method>
      </Methods>
    </Class>
    <Class Name="HistoryDirectEvents" Extends="ComponentDirectEvents">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Change" Type="ComponentDirectEvent">
          <Summary><![CDATA[Handle this change event in order to restore the UI to the appropriate history state]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;token&quot;, typeof(string)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;change&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Handle this change event in order to restore the UI to the appropriate history state" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="HistoryListeners" Extends="ComponentListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Change" Type="ComponentListener">
          <Summary><![CDATA[Handle this change event in order to restore the UI to the appropriate history state]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;token&quot;, typeof(string)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;change&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Handle this change event in order to restore the UI to the appropriate history state" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="HtmlEditor" Extends="Field" Inherits="IEditableTextControl,ITextControl,IPostBackEventHandler">
      <Summary><![CDATA[Provides a lightweight HTML Editor component. NOTE: HtmlEditor can not be hidden on initial page load. If placing within a TabPanel, please ensure the correct .ActiveTabIndex is set. If placing within a Window, please ensure InitHidden is 'false'.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:HtmlEditor runat=\&quot;server\&quot; /&gt;&quot;" />
        <Attribute Type="DefaultProperty" RawValue="&quot;Text&quot;" />
        <Attribute Type="DefaultEvent" RawValue="&quot;TextChanged&quot;" />
        <Attribute Type="ValidationProperty" RawValue="&quot;Text&quot;" />
        <Attribute Type="ControlValueProperty" RawValue="&quot;Text&quot;" />
        <Attribute Type="ParseChildren" RawValue="true" />
        <Attribute Type="PersistChildren" RawValue="false" />
        <Attribute Type="SupportsEventValidation" />
        <Attribute Type="Designer" RawValue="typeof(HtmlEditorDesigner)" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(HtmlEditor), &quot;Build.ToolboxIcons.HtmlEditor.bmp&quot;" />
        <Attribute Type="Description" RawValue="Provides a lightweight HTML Editor component. NOTE: HtmlEditor can not be hidden on initial page load. If placing within a TabPanel, please ensure the correct .ActiveTabIndex is set. If placing within a Window, please ensure InitHidden is 'false'." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Text" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The Text value to initialize this field with.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetValueProxy&quot;" />
            <Attribute Type="Category" RawValue="&quot;Appearance&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Bindable" RawValue="true, BindingDirection.TwoWay" />
            <Attribute Type="Description" RawValue="The Text value to initialize this field with." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Listeners" Type="EditorListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="EditorDirectEvents">
          <Summary><![CDATA[Server-side Ajax Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Server-side Ajax Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CreateLinkText" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The default text for the create link prompt.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. HtmlEditor&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Description" RawValue="The default text for the create link prompt." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DefaultLinkValue" Type="string" DefaultValue="&quot;http://&quot;">
          <Summary><![CDATA[The default value for the create link prompt (defaults to http://).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. HtmlEditor&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;http://&quot;" />
            <Attribute Type="Description" RawValue="The default value for the create link prompt (defaults to http://)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EnableAlignments" Type="bool" DefaultValue="true">
          <Summary><![CDATA[Enable the left, center, right alignment buttons (defaults to true).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. HtmlEditor&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="Enable the left, center, right alignment buttons (defaults to true)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EnableColors" Type="bool" DefaultValue="true">
          <Summary><![CDATA[Enable the fore/highlight color buttons (defaults to true).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. HtmlEditor&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="Enable the fore/highlight color buttons (defaults to true)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EnableFont" Type="bool" DefaultValue="true">
          <Summary><![CDATA[Enable font selection. Not available in Safari. (defaults to true).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. HtmlEditor&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="Enable font selection. Not available in Safari. (defaults to true)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EnableFontSize" Type="bool" DefaultValue="true">
          <Summary><![CDATA[Enable the increase/decrease font size buttons (defaults to true).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. HtmlEditor&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="Enable the increase/decrease font size buttons (defaults to true)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EnableFormat" Type="bool" DefaultValue="true">
          <Summary><![CDATA[Enable the bold, italic and underline buttons (defaults to true).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. HtmlEditor&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="Enable the bold, italic and underline buttons (defaults to true)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EnableLinks" Type="bool" DefaultValue="true">
          <Summary><![CDATA[Enable the create link button. Not available in Safari. (defaults to true).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. HtmlEditor&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="Enable the create link button. Not available in Safari. (defaults to true)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EnableLists" Type="bool" DefaultValue="true">
          <Summary><![CDATA[Enable the bullet and numbered list buttons. Not available in Safari. (defaults to true).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. HtmlEditor&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="Enable the bullet and numbered list buttons. Not available in Safari. (defaults to true)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EnableSourceEdit" Type="bool" DefaultValue="true">
          <Summary><![CDATA[Enable the switch to source edit button. Not available in Safari. (defaults to true).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. HtmlEditor&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="Enable the switch to source edit button. Not available in Safari. (defaults to true)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EscapeValue" Type="bool" DefaultValue="true">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. HtmlEditor&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="FontFamilies" Type="string[]" DefaultValue="null">
          <Summary><![CDATA[An array of available font families.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="typeof(StringArrayJsonConverter)" />
            <Attribute Type="TypeConverter" RawValue="typeof(StringArrayConverter)" />
            <Attribute Type="Category" RawValue="&quot;6. HtmlEditor&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="An array of available font families." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods>
        <Method Name="CleanHtml" ParamsRaw="string html">
          <Summary><![CDATA[Protected method that will not generally be called directly. If you need/want custom HTML cleanup, this is the method you should override.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Protected method that will not generally be called directly. If you need/want custom HTML cleanup, this is the method you should override." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="ExecCmd" ParamsRaw="string cmd, string value">
          <Summary><![CDATA[Executes a Midas editor command directly on the editor document. For visual commands, you should use relayCmd instead. This should only be called after the editor is initialized.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Executes a Midas editor command directly on the editor document. For visual commands, you should use relayCmd instead. This should only be called after the editor is initialized." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="ExecCmd" ParamsRaw="string cmd, bool value">
          <Summary><![CDATA[Executes a Midas editor command directly on the editor document. For visual commands, you should use relayCmd instead. This should only be called after the editor is initialized.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Executes a Midas editor command directly on the editor document. For visual commands, you should use relayCmd instead. This should only be called after the editor is initialized." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="InsertAtCursor" ParamsRaw="string text">
          <Summary><![CDATA[Executes a Midas editor command directly on the editor document. For visual commands, you should use relayCmd instead. This should only be called after the editor is initialized.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Executes a Midas editor command directly on the editor document. For visual commands, you should use relayCmd instead. This should only be called after the editor is initialized." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="PushValue">
          <Summary><![CDATA[Protected method that will not generally be called directly. Pushes the value of the textarea into the iframe editor.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Protected method that will not generally be called directly. Pushes the value of the textarea into the iframe editor." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="RelayCmd" ParamsRaw="string cmd, string value">
          <Summary><![CDATA[Executes a Midas editor command on the editor document and performs necessary focus and toolbar updates. This should only be called after the editor is initialized.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Executes a Midas editor command on the editor document and performs necessary focus and toolbar updates. This should only be called after the editor is initialized." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="RelayCmd" ParamsRaw="string cmd, bool value">
          <Summary><![CDATA[Executes a Midas editor command on the editor document and performs necessary focus and toolbar updates. This should only be called after the editor is initialized.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Executes a Midas editor command on the editor document and performs necessary focus and toolbar updates. This should only be called after the editor is initialized." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SyncValue">
          <Summary><![CDATA[Protected method that will not generally be called directly. Syncs the contents of the editor iframe with the textarea.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Protected method that will not generally be called directly. Syncs the contents of the editor iframe with the textarea." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="ToggleSourceEdit">
          <Summary><![CDATA[Toggles the editor between standard and source edit mode.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Toggles the editor between standard and source edit mode." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="ToggleSourceEdit" ParamsRaw="bool sourceEdit">
          <Summary><![CDATA[Toggles the editor between standard and source edit mode.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Toggles the editor between standard and source edit mode." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="UpdateToolbar">
          <Summary><![CDATA[Protected method that will not generally be called directly. It triggers a toolbar update by reading the markup state of the current selection in the editor.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Protected method that will not generally be called directly. It triggers a toolbar update by reading the markup state of the current selection in the editor." />
          </Attributes>
          <Parameters />
        </Method>
      </Methods>
    </Class>
    <Class Name="HtmlEditorDirectEvents" Extends="FieldDirectEvents">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Activate" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when the editor is first receives the focus. Any insertion must wait until after this event.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(HtmlEditor), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;activate&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the editor is first receives the focus. Any insertion must wait until after this event." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforePush" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before the iframe editor is updated with content from the textarea. Return false to cancel the push.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(HtmlEditor), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;html&quot;, typeof(string), &quot;Html&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforepush&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the iframe editor is updated with content from the textarea. Return false to cancel the push." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeSync" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before the textarea is updated with content from the editor iframe. Return false to cancel the sync.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(HtmlEditor), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;html&quot;, typeof(string), &quot;Html&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforesync&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the textarea is updated with content from the editor iframe. Return false to cancel the sync." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EditModeChange" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when the editor switches edit modes.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(HtmlEditor), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;sourceEdit&quot;, typeof(bool), &quot;True if source edit, false if standard editing.&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;editmodechange&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the editor switches edit modes." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Initialize" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when the editor is fully initialized (including the iframe).]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(HtmlEditor), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;initialize&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the editor is fully initialized (including the iframe)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Push" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when the iframe editor is updated with content from the textarea.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(HtmlEditor), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;html&quot;, typeof(string), &quot;Html&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;push&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the iframe editor is updated with content from the textarea." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Sync" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when the textarea is updated with content from the editor iframe.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(HtmlEditor), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;html&quot;, typeof(string), &quot;Html&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;sync&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the textarea is updated with content from the editor iframe." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="HtmlEditorListeners" Extends="FieldListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Activate" Type="ComponentListener">
          <Summary><![CDATA[Fires when the editor is first receives the focus. Any insertion must wait until after this event.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(HtmlEditor), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;activate&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the editor is first receives the focus. Any insertion must wait until after this event." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforePush" Type="ComponentListener">
          <Summary><![CDATA[Fires before the iframe editor is updated with content from the textarea. Return false to cancel the push.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(HtmlEditor), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;html&quot;, typeof(string), &quot;Html&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforepush&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the iframe editor is updated with content from the textarea. Return false to cancel the push." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeSync" Type="ComponentListener">
          <Summary><![CDATA[Fires before the textarea is updated with content from the editor iframe. Return false to cancel the sync.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(HtmlEditor), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;html&quot;, typeof(string), &quot;Html&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforesync&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the textarea is updated with content from the editor iframe. Return false to cancel the sync." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EditModeChange" Type="ComponentListener">
          <Summary><![CDATA[Fires when the editor switches edit modes.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(HtmlEditor), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;sourceEdit&quot;, typeof(bool), &quot;True if source edit, false if standard editing.&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;editmodechange&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the editor switches edit modes." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Initialize" Type="ComponentListener">
          <Summary><![CDATA[Fires when the editor is fully initialized (including the iframe).]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(HtmlEditor), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;initialize&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the editor is fully initialized (including the iframe)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Push" Type="ComponentListener">
          <Summary><![CDATA[Fires when the iframe editor is updated with content from the textarea.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(HtmlEditor), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;html&quot;, typeof(string), &quot;Html&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;push&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the iframe editor is updated with content from the textarea." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Sync" Type="ComponentListener">
          <Summary><![CDATA[Fires when the textarea is updated with content from the editor iframe.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(HtmlEditor), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;html&quot;, typeof(string), &quot;Html&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;sync&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the textarea is updated with content from the editor iframe." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="HttpProxy" Extends="DataProxy">
      <Summary><![CDATA[An implementation of DataProxy that reads a data object from a object configured to reference a certain URL.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
        <Attribute Type="Description" RawValue="An implementation of DataProxy that reads a data object from a object configured to reference a certain URL." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="AutoAbort" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Whether a new request should abort any pending requests. (defaults to false)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Whether a new request should abort any pending requests. (defaults to false)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Headers" Type="ParameterCollection">
          <Summary><![CDATA[An object containing request headers which are added to each request made by this object.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ArrayToObject" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="An object containing request headers which are added to each request made by this object." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DisableCaching" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to add a unique cache-buster param to GET requests. (defaults to true)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to add a unique cache-buster param to GET requests. (defaults to true)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Method" Type="HttpMethod" DefaultValue="HttpMethod.Default">
          <Summary><![CDATA[The default HTTP method to be used for requests.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="HttpMethod.Default" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The default HTTP method to be used for requests." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Timeout" Type="int" DefaultValue="30000">
          <Summary><![CDATA[The timeout in milliseconds to be used for requests. (defaults to 30000)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="30000" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The timeout in milliseconds to be used for requests. (defaults to 30000)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Url" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The default URL to be used for requests to the server.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Editor" RawValue="typeof(System.Web.UI.Design.UrlEditor), typeof(System.Drawing.Design.UITypeEditor)" />
            <Attribute Type="Description" RawValue="The default URL to be used for requests to the server." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="UrlProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;url&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Json" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Send params as JSON object]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Send params as JSON object" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="HttpWriteProxy" Extends="HttpProxy">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="HandleSaveResponseAsXml" Type="bool" DefaultValue="false">
          <Summary><![CDATA[If save handler is web service then response will be xml. This option specifies how to handle response.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="If save handler is web service then response will be xml. This option specifies how to handle response." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="HybridSummary" Extends="GroupingSummary">
      <Summary><![CDATA[Adds capability to specify the summary data for the group via json]]></Summary>
      <Attributes>
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(GroupingSummary), &quot;Build.ToolboxIcons.Plugin.bmp&quot;" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:HybridSummary runat=\&quot;server\&quot; /&gt;&quot;" />
        <Attribute Type="Description" RawValue="Adds capability to specify the summary data for the group via json" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="HyperLink" Extends="Label">
      <Summary><![CDATA[Basic hyperlink field.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:HyperLink runat=\&quot;server\&quot; Text=\&quot;HyperLink\&quot; /&gt;&quot;" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(HyperLink), &quot;Build.ToolboxIcons.HyperLink.bmp&quot;" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="Description" RawValue="Basic hyperlink field." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="ImageUrl" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Ignore" />
            <Attribute Type="Category" RawValue="&quot;6. Hyperlink&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetImageUrl&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ImageUrlProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;imageUrl&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="NavigateUrl" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Ignore" />
            <Attribute Type="Category" RawValue="&quot;6. Hyperlink&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetNavigateUrl&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="NavigateUrlProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;url&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Target" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="TypeConverter" RawValue="typeof(TargetConverter)" />
            <Attribute Type="Category" RawValue="&quot;6. Hyperlink&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetTarget&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="Image" Extends="ImageBase">
      <Summary><![CDATA[Basic image field.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:Image runat=\&quot;server\&quot; /&gt;&quot;" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(Image), &quot;Build.ToolboxIcons.Image.bmp&quot;" />
        <Attribute Type="Description" RawValue="Basic image field." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Listeners" Type="ImageListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="ImageDirectEvents">
          <Summary><![CDATA[Server-side Ajax Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="Description" RawValue="Server-side Ajax Event Handlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ImageBase" Abstract="true" Extends="BoxComponentBase">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Height" Modifier="Override" Type="Unit" DefaultValue="typeof(Unit), &quot;&quot;">
          <Summary><![CDATA[The height of this component in pixels (defaults to auto).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetHeight&quot;" />
            <Attribute Type="Category" RawValue="&quot;4. BoxComponent&quot;" />
            <Attribute Type="DefaultValue" RawValue="typeof(Unit), &quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The height of this component in pixels (defaults to auto)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Width" Modifier="Override" Type="Unit" DefaultValue="typeof(Unit), &quot;&quot;">
          <Summary><![CDATA[The width of this component in pixels (defaults to auto).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetWidth&quot;" />
            <Attribute Type="Category" RawValue="&quot;4. BoxComponent&quot;" />
            <Attribute Type="DefaultValue" RawValue="typeof(Unit), &quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The width of this component in pixels (defaults to auto)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ImageUrl" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Ignore" />
            <Attribute Type="Category" RawValue="&quot;5. Image&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetImageUrl&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ImageUrlProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;imageUrl&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AlternateText" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;altText&quot;" />
            <Attribute Type="Category" RawValue="&quot;5. Image&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetAltText&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Align" Type="ImageAlign" DefaultValue="ImageAlign.NotSet">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="Category" RawValue="&quot;5. Image&quot;" />
            <Attribute Type="DefaultValue" RawValue="ImageAlign.NotSet" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetAlign&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="LazyLoad" Type="bool" DefaultValue="false">
          <Summary><![CDATA[true to load image after rendering only]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Image&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="true to load image after rendering only" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MonitorComplete" Type="bool" DefaultValue="true">
          <Summary><![CDATA[true to monitor complete state and fire Complete event]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Image&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="true to monitor complete state and fire Complete event" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AllowPan" Type="bool" DefaultValue="false">
          <Summary><![CDATA[true to allow scroll the image by mouse dragging]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Image&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="true to allow scroll the image by mouse dragging" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Resizable" Type="bool" DefaultValue="false">
          <Summary><![CDATA[true to allow resize the image]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Image&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="true to allow resize the image" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MonitorPoll" Type="int" DefaultValue="200">
          <Summary><![CDATA[The milliseconds to poll complete state, ignored if MonitorComplete is not true (defaults to 200)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Image&quot;" />
            <Attribute Type="DefaultValue" RawValue="200" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The milliseconds to poll complete state, ignored if MonitorComplete is not true (defaults to 200)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ResizeConfig" Type="Resizable">
          <Summary><![CDATA[Resize object config]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;5. Image&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="Resize object config" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ResizeConfigProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;resizeConfig&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="XDelta" Type="int" DefaultValue="0">
          <Summary><![CDATA[X offset]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Image&quot;" />
            <Attribute Type="DefaultValue" RawValue="0" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetXDelta&quot;" />
            <Attribute Type="Description" RawValue="X offset" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="YDelta" Type="int" DefaultValue="0">
          <Summary><![CDATA[Y offset]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Image&quot;" />
            <Attribute Type="DefaultValue" RawValue="0" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetYDelta&quot;" />
            <Attribute Type="Description" RawValue="Y offset" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="LoadMask" Type="LoadMask">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;loadMask&quot;, typeof(LoadMaskJsonConverter)" />
            <Attribute Type="Category" RawValue="&quot;5. Image&quot;" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ImageButton" Extends="Button">
      <Summary><![CDATA[Simple ImageButton class]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:ImageButton runat=\&quot;server\&quot; /&gt;&quot;" />
        <Attribute Type="DefaultEvent" RawValue="&quot;Click&quot;" />
        <Attribute Type="DefaultProperty" RawValue="&quot;ImageUrl&quot;" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(ImageButton), &quot;Build.ToolboxIcons.ImageButton.bmp&quot;" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="Description" RawValue="Simple ImageButton class" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="ImageUrl" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Ignore" />
            <Attribute Type="Category" RawValue="&quot;6. ImageButton&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetImageUrl&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ImageUrlProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;imageUrl&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="OverImageUrl" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Ignore" />
            <Attribute Type="Category" RawValue="&quot;6. ImageButton&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetOverImageUrl&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="OverImageUrlProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;overImageUrl&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DisabledImageUrl" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Ignore" />
            <Attribute Type="Category" RawValue="&quot;6. ImageButton&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetDisabledImageUrl&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DisabledImageUrlProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;disabledImageUrl&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="PressedImageUrl" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Ignore" />
            <Attribute Type="Category" RawValue="&quot;6. ImageButton&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetPressedImageUrl&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="PressedImageUrlProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;pressedImageUrl&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AlternateText" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;altText&quot;" />
            <Attribute Type="Category" RawValue="&quot;6. ImageButton&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetAltText&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Align" Type="ImageAlign" DefaultValue="ImageAlign.NotSet">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="Category" RawValue="&quot;6. ImageButton&quot;" />
            <Attribute Type="DefaultValue" RawValue="ImageAlign.NotSet" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetAlign&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ImageCommand" Extends="ImageCommandBase">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="ImageCommandBase" Abstract="true" Extends="StateManagedItem">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="CommandName" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;command&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Cls" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;2. ImageCommand&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Hidden" Type="bool" DefaultValue="false">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;2. ImageCommand&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Icon" Type="Icon" DefaultValue="Icon.None">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="Icon.None" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IconCls" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Text" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Style" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ToolTip" Type="SimpleToolTip">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;tooltip&quot;, JsonMode.Object" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Content" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HideMode" Type="HideMode" DefaultValue="HideMode.Display">
          <Summary><![CDATA[How this component should be hidden. Supported values are 'visibility' (css visibility), 'offsets' (negative offset position) and 'display' (css display) - defaults to 'display'.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="Category" RawValue="&quot;2. ImageCommand&quot;" />
            <Attribute Type="DefaultValue" RawValue="HideMode.Display" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="How this component should be hidden. Supported values are 'visibility' (css visibility), 'offsets' (negative offset position) and 'display' (css display) - defaults to 'display'." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ImageCommandCollection" Extends="StateManagedCollection&lt;ImageCommand&gt;">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="ImageCommandColumn" Extends="Column" Inherits="ICustomConfigSerialization">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Hideable" Modifier="Override" Type="bool" DefaultValue="true">
          <Summary><![CDATA[(optional) Specify as false to prevent the user from hiding this column. Defaults to true.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. ImageCommandColumn&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="(optional) Specify as false to prevent the user from hiding this column. Defaults to true." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RightCommandAlign" Modifier="Override" Type="bool" DefaultValue="false">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Ignore" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Hidden" />
            <Attribute Type="Browsable" RawValue="false" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="GroupCommands" Type="GroupImageCommandCollection">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;groupCommands&quot;, JsonMode.AlwaysArray" />
            <Attribute Type="Category" RawValue="&quot;3. ImageCommandColumn&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IsCellCommand" Modifier="Override" Access="Protected" Type="bool" DefaultValue="false">
          <Attributes>
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Ignore" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="PrepareGroupCommand" Type="JFunction">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;3. ImageCommandColumn&quot;" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="PrepareGroupCommands" Type="JFunction">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;3. ImageCommandColumn&quot;" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="PrepareCommand" Modifier="Override" Type="JFunction">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;3. ImageCommandColumn&quot;" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="PrepareCommands" Modifier="Override" Type="JFunction">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;3. ImageCommandColumn&quot;" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ImageDirectEvents" Extends="BoxComponentDirectEvents">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Complete" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after the image is loaded.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Component), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;complete&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the image is loaded." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeLoad" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before the image is loaded.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Component), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeload&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the image is loaded." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ResizerResize" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fired after a resizer resize.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Component), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;width&quot;, typeof(int), &quot;width&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;height&quot;, typeof(int), &quot;height&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;e&quot;, typeof(object), &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;resizerresize&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fired after a resizer resize." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ResizerBeforeResize" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fired before resize is allowed. Set resizer.enabled to false to cancel resize.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Component), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object), &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;resizerbeforeresize&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fired before resize is allowed. Set resizer.enabled to false to cancel resize." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Pan" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fired after a pan]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Component), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;x&quot;, typeof(int), &quot;x&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;y&quot;, typeof(int), &quot;yDeylta&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;xDelta&quot;, typeof(int), &quot;xDelta&quot;" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;yDelta&quot;, typeof(int), &quot;yDelta&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;pan&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fired after a pan" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Click" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fired after a click]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Component), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object), &quot;e&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;t&quot;, typeof(object), &quot;t&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;click&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fired after a click" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DblClick" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fired after a double click]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Component), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object), &quot;e&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;t&quot;, typeof(object), &quot;t&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;dblclick&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fired after a double click" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ImageListeners" Extends="BoxComponentListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Complete" Type="ComponentListener">
          <Summary><![CDATA[Fires after the image is loaded.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Component), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;complete&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the image is loaded." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeLoad" Type="ComponentListener">
          <Summary><![CDATA[Fires before the image is loaded.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Component), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeload&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the image is loaded." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ResizerResize" Type="ComponentListener">
          <Summary><![CDATA[Fired after a resizer resize.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Component), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;width&quot;, typeof(int), &quot;width&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;height&quot;, typeof(int), &quot;height&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;e&quot;, typeof(object), &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;resizerresize&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fired after a resizer resize." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ResizerBeforeResize" Type="ComponentListener">
          <Summary><![CDATA[Fired before resize is allowed. Set resizer.enabled to false to cancel resize.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Component), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object), &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;resizerbeforeresize&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fired before resize is allowed. Set resizer.enabled to false to cancel resize." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Pan" Type="ComponentListener">
          <Summary><![CDATA[Fired after a pan]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Component), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;x&quot;, typeof(int), &quot;x&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;y&quot;, typeof(int), &quot;yDeylta&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;xDelta&quot;, typeof(int), &quot;xDelta&quot;" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;yDelta&quot;, typeof(int), &quot;yDelta&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;pan&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fired after a pan" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Click" Type="ComponentListener">
          <Summary><![CDATA[Fired after a click]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Component), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object), &quot;e&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;t&quot;, typeof(object), &quot;t&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;click&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fired after a click" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DblClick" Type="ComponentListener">
          <Summary><![CDATA[Fired after a double click]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Component), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object), &quot;e&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;t&quot;, typeof(object), &quot;t&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;dblclick&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fired after a double click" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="InlineEditorDirectEvents" Extends="ComponentBaseDirectEvents">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="BeforeStartEdit" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;editor&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;boundEl&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;value&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforestartedit&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeComplete" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;editor&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;value&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;startValue&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforecomplete&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CancelEdit" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;editor&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;value&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;startValue&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;canceledit&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Complete" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;editor&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;value&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;startValue&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;complete&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SpecialKey" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;field&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;specialkey&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="StartEdit" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;boundEl&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;value&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;startedit&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="InlineEditorListeners" Extends="ComponentBaseListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="BeforeStartEdit" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;editor&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;boundEl&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;value&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforestartedit&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeComplete" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;editor&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;value&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;startValue&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforecomplete&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CancelEdit" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;editor&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;value&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;startValue&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;canceledit&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Complete" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;editor&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;value&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;startValue&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;complete&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SpecialKey" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;field&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;specialkey&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="StartEdit" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;boundEl&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;value&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;startedit&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="InsertOrderedDictionary&lt;TKey, TValue&gt; : Dictionary&lt;TKey, TValue&gt;" Inherits="TValue&gt;:Dictionary&lt;TKey,TValue&gt;">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="IntArrayJsonConverter" Extends="ExtJsonConverter">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="ISODateTimeJsonConverter" Extends="ExtJsonConverter">
      <Attributes />
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="ItemCollection" Extends="Collection&lt;Component&gt;">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="ItemCollectionEditor" Extends="CollectionEditor">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="ItemCollectionJsonConverter" Extends="ExtJsonConverter">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="ItemsCollection&lt;T&gt; : List&lt;T&gt;" Inherits="IXObject">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="ItemTCollectionEditor" Extends="CollectionEditor">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="JFunction" Extends="StateManagedItem">
      <Attributes>
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="JFunctionJsonConverter" Extends="ExtJsonConverter">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="JRawValue">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="JRawValueJsonConverter" Extends="ExtJsonConverter">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="JSON">
      <Attributes />
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="JSONDateTimeJsonConverter" Extends="ExtJsonConverter">
      <Attributes />
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="JsonObject" Extends="Dictionary&lt;string, object&gt;">
      <Attributes>
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="JsonReader" Extends="DataReader">
      <Summary><![CDATA[Data reader class to create an Array of Ext.data.Record objects from a JSON response based on mappings in a provided Ext.data.Record constructor.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
        <Attribute Type="Description" RawValue="Data reader class to create an Array of Ext.data.Record objects from a JSON response based on mappings in a provided Ext.data.Record constructor." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="IDProperty" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[[id] Name of the property within a row object that contains a record identifier value. Defaults to id]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;idProperty&quot;" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="[id] Name of the property within a row object that contains a record identifier value. Defaults to id" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Root" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[Name of the property which contains the Array of row objects.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Name of the property which contains the Array of row objects." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SuccessProperty" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[Name of the property from which to retrieve the success attribute used by forms.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Name of the property from which to retrieve the success attribute used by forms." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TotalProperty" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The DomQuery path from which to retrieve the total number of records in the dataset. This is only needed if the whole dataset is not passed in one go, but is being paged from the remote server.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The DomQuery path from which to retrieve the total number of records in the dataset. This is only needed if the whole dataset is not passed in one go, but is being paged from the remote server." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="KeepActive" Extends="Plugin">
      <Attributes>
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(KeepActive), &quot;Build.ToolboxIcons.Plugin.bmp&quot;" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:KeepActive runat=\&quot;server\&quot; /&gt;&quot;" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="Key" Extends="StateManagedItem">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="KeyBinding" Extends="StateManagedItem">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Shift" Type="bool?" DefaultValue="null">
          <Summary><![CDATA[True to handle key only when shift is pressed, False to handle the key only when shift is not pressed (defaults to undefined)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to handle key only when shift is pressed, False to handle the key only when shift is not pressed (defaults to undefined)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Ctrl" Type="bool?" DefaultValue="null">
          <Summary><![CDATA[True to handle key only when ctrl is pressed, False to handle the key only when ctrl is not pressed (defaults to undefined)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to handle key only when ctrl is pressed, False to handle the key only when ctrl is not pressed (defaults to undefined)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Alt" Type="bool?" DefaultValue="null">
          <Summary><![CDATA[True to handle key only when alt is pressed, False to handle the key only when alt is not pressed (defaults to undefined)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to handle key only when alt is pressed, False to handle the key only when alt is not pressed (defaults to undefined)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="StopEvent" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to stop the event from bubbling and prevent the default browser action if the key was handled by the KeyMap (defaults to false)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to stop the event from bubbling and prevent the default browser action if the key was handled by the KeyMap (defaults to false)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Scope" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The scope of the callback function]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The scope of the callback function" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Listeners" Type="KeyListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ListenerProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="ConfigOption" RawValue="&quot;fn&quot;, JsonMode.Raw" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="KeysProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;key&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="KeyBindingCollection" Extends="StateManagedCollection&lt;KeyBinding&gt;">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="KeyCollection" Extends="StateManagedCollection&lt;Key&gt;">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="KeyListeners" Extends="StateManagedItem">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Event" Type="SimpleListener">
          <Summary><![CDATA[The function to call when KeyMap finds the expected key combination.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;fn&quot;, JsonMode.Raw" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The function to call when KeyMap finds the expected key combination." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="KeyMap" Extends="Observable">
      <Summary><![CDATA[Handles mapping keys to actions for an element.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="DefaultProperty" RawValue="&quot;Keys&quot;" />
        <Attribute Type="ParseChildren" RawValue="true, &quot;Keys&quot;" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:KeyMap runat=\&quot;server\&quot;&gt;&lt;/{0}:KeyMap&gt;&quot;" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(KeyMap), &quot;Build.ToolboxIcons.KeyMap.bmp&quot;" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="Description" RawValue="Handles mapping keys to actions for an element." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Keys" Type="KeyBindingCollection">
          <Summary><![CDATA[A KeyMap config object (in the format expected by Ext.KeyMap.addBinding used to assign custom key handling to this panel (defaults to null).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;keys&quot;, JsonMode.Array" />
            <Attribute Type="Category" RawValue="&quot;3. KeyMap&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerDefaultProperty" />
            <Attribute Type="Description" RawValue="A KeyMap config object (in the format expected by Ext.KeyMap.addBinding used to assign custom key handling to this panel (defaults to null)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Target" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The element to bind to]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;3. KeyMap&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The element to bind to" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EventName" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[(optional) The event to bind to (defaults to 'keydown')]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;3. KeyMap&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="(optional) The event to bind to (defaults to 'keydown')" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods>
        <Method Name="Enable">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Disable">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="AddKeyBinding" ParamsRaw="KeyBinding keyBinding">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" />
          </Attributes>
          <Parameters />
        </Method>
      </Methods>
    </Class>
    <Class Name="KeyNav" Extends="Observable">
      <Summary><![CDATA[Provides a convenient wrapper for normalized keyboard navigation. KeyNav allows you to bind navigation keys to function calls that will get called when the keys are pressed, providing an easy way to implement custom navigation schemes for any UI component.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:KeyNav runat=\&quot;server\&quot;&gt;&lt;/{0}:KeyNav&gt;&quot;" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(KeyNav), &quot;Build.ToolboxIcons.KeyMap.bmp&quot;" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="Description" RawValue="Provides a convenient wrapper for normalized keyboard navigation. KeyNav allows you to bind navigation keys to function calls that will get called when the keys are pressed, providing an easy way to implement custom navigation schemes for any UI component." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Target" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The element to bind to]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;3. KeyNav&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The element to bind to" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Left" Type="JFunction">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;3. KeyNav&quot;" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Right" Type="JFunction">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;3. KeyNav&quot;" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Up" Type="JFunction">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;3. KeyNav&quot;" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Down" Type="JFunction">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;3. KeyNav&quot;" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="PageUp" Type="JFunction">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;3. KeyNav&quot;" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="PageDown" Type="JFunction">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;3. KeyNav&quot;" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Del" Type="JFunction">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;3. KeyNav&quot;" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Home" Type="JFunction">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;3. KeyNav&quot;" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="End" Type="JFunction">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;3. KeyNav&quot;" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Enter" Type="JFunction">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;3. KeyNav&quot;" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Esc" Type="JFunction">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;3. KeyNav&quot;" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Tab" Type="JFunction">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;3. KeyNav&quot;" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DefaultEventAction" Type="KeyEventAction" DefaultValue="KeyEventAction.StopEvent">
          <Summary><![CDATA[The method to call on the Ext.EventObject after this KeyNav intercepts a key. Valid values are Ext.EventObject.stopEvent, Ext.EventObject.preventDefault and Ext.EventObject.stopPropagation (defaults to 'stopEvent')]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. KeyNav&quot;" />
            <Attribute Type="DefaultValue" RawValue="KeyEventAction.StopEvent" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The method to call on the Ext.EventObject after this KeyNav intercepts a key. Valid values are Ext.EventObject.stopEvent, Ext.EventObject.preventDefault and Ext.EventObject.stopPropagation (defaults to 'stopEvent')" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Disabled" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to disable this KeyNav instance (defaults to false)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. KeyNav&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName=&quot;SetDisabled&quot;" />
            <Attribute Type="Description" RawValue="True to disable this KeyNav instance (defaults to false)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ForceKeyDown" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Handle the keydown event instead of keypress (defaults to false). KeyNav automatically does this for IE since IE does not propagate special keys on keypress, but setting this to true will force other browsers to also handle keydown instead of keypress.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. KeyNav&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Handle the keydown event instead of keypress (defaults to false). KeyNav automatically does this for IE since IE does not propagate special keys on keypress, but setting this to true will force other browsers to also handle keydown instead of keypress." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Scope" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The scope of the callback function]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;3. KeyNav&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The scope of the callback function" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="Label" Extends="BoxComponentBase" Inherits="ITextControl,IIcon">
      <Summary><![CDATA[Basic Label field.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:Label runat=\&quot;server\&quot; /&gt;&quot;" />
        <Attribute Type="DefaultProperty" RawValue="&quot;Html&quot;" />
        <Attribute Type="ParseChildren" RawValue="true, &quot;Html&quot;" />
        <Attribute Type="PersistChildren" RawValue="false" />
        <Attribute Type="SupportsEventValidation" />
        <Attribute Type="Designer" RawValue="typeof(LabelDesigner)" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(Label), &quot;Build.ToolboxIcons.Label.bmp&quot;" />
        <Attribute Type="Description" RawValue="Basic Label field." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Format" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The format of the string to render using the .Text property. Example 'Hello {0}'.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Label&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Description" RawValue="The format of the string to render using the .Text property. Example 'Hello {0}'." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EmptyText" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The default text to display if the Text property is empty (defaults to '').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Label&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Description" RawValue="The default text to display if the Text property is empty (defaults to '')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ForID" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The id of the input element to which this label will be bound via the standard 'htmlFor' attribute. If not specified, the attribute will not be added to the label.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;forId&quot;" />
            <Attribute Type="Category" RawValue="&quot;5. Label&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The id of the input element to which this label will be bound via the standard 'htmlFor' attribute. If not specified, the attribute will not be added to the label." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Html" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[An HTML fragment that will be used as the label's innerHTML (defaults to ''). Note that if text is specified it will take precedence and this value will be ignored.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetHtml&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Category" RawValue="&quot;5. Label&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="An HTML fragment that will be used as the label's innerHTML (defaults to ''). Note that if text is specified it will take precedence and this value will be ignored." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Text" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The plain text to display within the label (defaults to ''). If you need to include HTML tags within the label's innerHTML, use the html config instead.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetText&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Category" RawValue="&quot;5. Label&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The plain text to display within the label (defaults to ''). If you need to include HTML tags within the label's innerHTML, use the html config instead." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TextProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;text&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Icon" Type="Icon" DefaultValue="Icon.None">
          <Summary><![CDATA[The icon to use in the label. See also, IconCls to set an icon with a custom Css class.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetIconClass&quot;" />
            <Attribute Type="Category" RawValue="&quot;5. Label&quot;" />
            <Attribute Type="DefaultValue" RawValue="Icon.None" />
            <Attribute Type="Description" RawValue="The icon to use in the label. See also, IconCls to set an icon with a custom Css class." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IconClsProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;iconCls&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IconCls" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A css class which sets a background image to be used as the icon for this label.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetIconClass&quot;" />
            <Attribute Type="Category" RawValue="&quot;5. Label&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="A css class which sets a background image to be used as the icon for this label." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IconAlign" Type="Alignment" DefaultValue="Alignment.Left">
          <Summary><![CDATA[(optional) Set the CSS text-align property of the icon. The center is not supported. Defaults to \"Left\"]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="Category" RawValue="&quot;5. Label&quot;" />
            <Attribute Type="DefaultValue" RawValue="Alignment.Left" />
            <Attribute Type="Description" RawValue="(optional) Set the CSS text-align property of the icon. The center is not supported. Defaults to \&quot;Left\&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Editor" Type="ItemsCollection&lt;Editor&gt;">
          <Summary><![CDATA[Inline editor]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;editor&quot;, typeof(ItemCollectionJsonConverter)" />
            <Attribute Type="Category" RawValue="&quot;5. Label&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="Inline editor" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Listeners" Type="BoxComponentListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="BoxComponentDirectEvents">
          <Summary><![CDATA[Server-side Ajax Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="Description" RawValue="Server-side Ajax Event Handlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="Layer" Extends="Element">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="LayerConfig" Extends="StateManagedItem">
      <Attributes />
      <ConfigOptions>
        <ConfigOption Name="Cls" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ID" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;id&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Constrain" Type="bool" DefaultValue="true">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="true" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DH" Type="DomObject">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;dh&quot;, JsonMode.Object" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Shadow" Type="ShadowMode" DefaultValue="ShadowMode.None">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="typeof(ShadowJsonConverter)" />
            <Attribute Type="DefaultValue" RawValue="ShadowMode.None" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ShadowOffset" Type="int" DefaultValue="4">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="4" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Shim" Type="bool" DefaultValue="true">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="true" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="UseDisplay" Type="bool" DefaultValue="false">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ZIndex" Type="int" DefaultValue="11000">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;zindex&quot;" />
            <Attribute Type="DefaultValue" RawValue="11000" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ParentElement" Type="Element" DefaultValue="null">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="null" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ParentElementProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="ConfigOption" RawValue="&quot;parentEl&quot;, JsonMode.Raw" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ExistingElement" Type="Element" DefaultValue="null">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="null" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="Layout" Abstract="true" Extends="Component">
      <Summary><![CDATA[Every layout is composed of one or more Ext.Container elements internally, and Layout provides the basic foundation for all other layout classes in Ext. It is a non-visual class that simply provides the base logic required for a Container to function as a layout.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ParseChildren" RawValue="true" />
        <Attribute Type="PersistChildren" RawValue="false" />
        <Attribute Type="Description" RawValue="Every layout is composed of one or more Ext.Container elements internally, and Layout provides the basic foundation for all other layout classes in Ext. It is a non-visual class that simply provides the base logic required for a Container to function as a layout." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="LayoutTypeProxy" Access="Protected" Type="string" DefaultValue="&quot;container&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;layout&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;container&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ConfigIDProxy" Modifier="Override" Access="Protected" Type="string">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Ignore" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RenderToProxy" Modifier="Override" Access="ProtectedInternal" Type="string">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Ignore" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ExtraCls" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[An optional extra CSS class that will be added to the content Container (defaults to ''). This can be useful for adding customized styles to the content Container or any of its children using standard CSS rules.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Ignore" />
            <Attribute Type="Category" RawValue="&quot;4. Layout&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="An optional extra CSS class that will be added to the content Container (defaults to ''). This can be useful for adding customized styles to the content Container or any of its children using standard CSS rules." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RenderHidden" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to hide each contained items on render (defaults to false).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Ignore" />
            <Attribute Type="Category" RawValue="&quot;4. Layout&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to hide each contained items on render (defaults to false)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Items" Type="ItemsCollection&lt;Component&gt;">
          <Summary><![CDATA[Items collection]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;4. Layout&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="Items collection" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="LayoutColumn" Extends="LayoutItem">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="ColumnWidth" Type="decimal" DefaultValue="0">
          <Summary><![CDATA[The ColumnWidth property is always evaluated as a percentage, and must be a decimal value greater than 0 and less than or equal to 1.0.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Category" RawValue="&quot;3. LayoutColumn&quot;" />
            <Attribute Type="DefaultValue" RawValue="0" />
            <Attribute Type="Description" RawValue="The ColumnWidth property is always evaluated as a percentage, and must be a decimal value greater than 0 and less than or equal to 1.0." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ColumnWidthProxy" Access="Protected" Type="string" DefaultValue="&quot;0&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;columnWidth&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;0&quot;" />
            <Attribute Type="Browsable" RawValue="false" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="LayoutColumnCollection" Extends="StateManagedCollection&lt;LayoutColumn&gt;">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="LayoutConfig" Extends="StateManagedItem">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="RenderHidden" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to hide each contained item on render (defaults to false).]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to hide each contained item on render (defaults to false)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ExtraCls" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[An optional extra CSS class that will be added to the container]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="An optional extra CSS class that will be added to the container" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="LayoutConfigCollection" Extends="StateManagedCollection&lt;LayoutConfig&gt;">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Primary" Type="LayoutConfig">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Object" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="LayoutConverter" Extends="StringConverter">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="LayoutItem" Abstract="true" Extends="StateManagedItem">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="DefaultProperty" RawValue="&quot;Items&quot;" />
        <Attribute Type="ParseChildren" RawValue="true, &quot;Items&quot;" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Items" Type="ItemsCollection&lt;Component&gt;">
          <Summary><![CDATA[Items]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. LayoutItem&quot;" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerDefaultProperty" />
            <Attribute Type="Editor" RawValue="typeof(ItemCollectionEditor), typeof(UITypeEditor)" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="Items" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="LayoutRow" Extends="LayoutItem">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="RowHeight" Type="decimal" DefaultValue="0">
          <Summary><![CDATA[The ColumnWidth property is always evaluated as a percentage, and must be a decimal value greater than 0 and less than or equal to 1.0.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Category" RawValue="&quot;6. RowLayout&quot;" />
            <Attribute Type="DefaultValue" RawValue="0" />
            <Attribute Type="Description" RawValue="The ColumnWidth property is always evaluated as a percentage, and must be a decimal value greater than 0 and less than or equal to 1.0." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RowHeightProxy" Access="Protected" Type="string" DefaultValue="&quot;0&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;rowHeight&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;0&quot;" />
            <Attribute Type="Browsable" RawValue="false" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="LayoutRowCollection" Extends="StateManagedCollection&lt;LayoutRow&gt;">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="LazyControlJsonConverter" Extends="ExtJsonConverter">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="LazyObservable" Abstract="true" Extends="Observable">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="ConfigIDProxy" Modifier="Override" Access="Protected" Type="string">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;proxyId&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="LinkButton" Extends="Button">
      <Summary><![CDATA[Simple LinkButton class]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:LinkButton runat=\&quot;server\&quot; Text=\&quot;LinkButton\&quot; /&gt;&quot;" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(LinkButton), &quot;Build.ToolboxIcons.LinkButton.bmp&quot;" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="DefaultEvent" RawValue="&quot;Click&quot;" />
        <Attribute Type="DefaultProperty" RawValue="&quot;Text&quot;" />
        <Attribute Type="Description" RawValue="Simple LinkButton class" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="Listener" Extends="ComponentListener">
      <Attributes>
        <Attribute Type="DefaultProperty" RawValue="&quot;Handler&quot;" />
        <Attribute Type="TypeConverter" RawValue="typeof(ListenerConverter)" />
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="ListenerArgumentAttribute" Extends="System">
      <Attributes>
        <Attribute Type="AttributeUsage" RawValue="AttributeTargets.Property, AllowMultiple = true, Inherited = true" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="ListenerArgumentAttributeComparer" Extends="IComparer&lt;ListenerArgumentAttribute&gt;">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="ListenerCollection" Extends="StateManagedCollection&lt;Listener&gt;">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="ListenerJsonConverter" Extends="ExtJsonConverter">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="ListenerPropertyInfo">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="ListenersConverter" Extends="ExpandableObjectConverter">
      <Attributes>
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="ListenerTriplet">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="ListFilter" Extends="GridFilter">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Type" Modifier="Override" Type="FilterType">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="Category" RawValue="&quot;3. ListFilter&quot;" />
            <Attribute Type="Browsable" RawValue="false" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Hidden" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="LoadingText" Type="string" DefaultValue="&quot;Loading...&quot;">
          <Summary><![CDATA[The loading text displayed when data loading]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. ListFilter&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;Loading...&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The loading text displayed when data loading" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="LoadOnShow" Type="bool" DefaultValue="true">
          <Summary><![CDATA[If true then the data loading on show]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. ListFilter&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="If true then the data loading on show" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Value" Type="string[]" DefaultValue="null">
          <Summary><![CDATA[The list of options]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="typeof(StringArrayJsonConverter)" />
            <Attribute Type="TypeConverter" RawValue="typeof(StringArrayConverter)" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="The list of options" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="StoreID" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The data store to use.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="IDReferenceProperty" RawValue="typeof(Store)" />
            <Attribute Type="Description" RawValue="The data store to use." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="LabelField" Type="string" DefaultValue="&quot;text&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="&quot;text&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="OptionsProxy" Access="ProtectedInternal" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;options&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="StoreProxy" Access="ProtectedInternal" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;store&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="LabelFieldProxy" Access="ProtectedInternal" Type="string" DefaultValue="&quot;text&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;labelField&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;text&quot;" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ListItem" Extends="StateManagedItem">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Text" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Value" Type="string" DefaultValue="null">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ListItemCollection&lt;T&gt; : StateManagedCollection&lt;T&gt;">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="ListItemCollectionJsonConverter" Extends="ExtJsonConverter">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="ListView" Extends="DataView">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:ListView runat=\&quot;server\&quot;&gt;&lt;/{0}:ListView&gt;&quot;" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(ListView), &quot;Build.ToolboxIcons.ListView.bmp&quot;" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="ColumnResize" Type="bool" DefaultValue="true">
          <Summary><![CDATA[Specify true to enable the columns to be resizable (defaults to true).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;6. ListView&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Specify true to enable the columns to be resizable (defaults to true)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MinPct" Type="double" DefaultValue="0.05">
          <Summary><![CDATA[The minimum percentage to allot for any column (defaults to .05)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;6. ListView&quot;" />
            <Attribute Type="DefaultValue" RawValue="0.05" />
            <Attribute Type="Description" RawValue="The minimum percentage to allot for any column (defaults to .05)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ColumnResizeProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;columnResize&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ColumnSort" Type="bool" DefaultValue="true">
          <Summary><![CDATA[Specify true to enable the columns to be sortable (defaults to true).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;6. ListView&quot;" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Specify true to enable the columns to be sortable (defaults to true)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Columns" Type="ListViewColumnCollection">
          <Summary><![CDATA[An array of column configuration objects]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;columns&quot;, JsonMode.AlwaysArray" />
            <Attribute Type="Category" RawValue="&quot;6. ListView&quot;" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="An array of column configuration objects" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HideHeaders" Type="bool" DefaultValue="false">
          <Summary><![CDATA[true to hide the header row (defaults to false so the header row will be shown).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. ListView&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="true to hide the header row (defaults to false so the header row will be shown)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ReserveScrollOffset" Type="bool" DefaultValue="false">
          <Summary><![CDATA[By default will defer accounting for the configured scrollOffset for 10 milliseconds. Specify true to account for the configured scrollOffset immediately.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. ListView&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="By default will defer accounting for the configured scrollOffset for 10 milliseconds. Specify true to account for the configured scrollOffset immediately." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ScrollOffset" Type="int" DefaultValue="19">
          <Summary><![CDATA[The amount of space to reserve for the scrollbar (defaults to 19 pixels)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;6. ListView&quot;" />
            <Attribute Type="DefaultValue" RawValue="19" />
            <Attribute Type="Description" RawValue="The amount of space to reserve for the scrollbar (defaults to 19 pixels)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="OverClass" Modifier="Override" Type="string" DefaultValue="&quot;x-list-over&quot;">
          <Summary><![CDATA[The CSS class applied when over a row (defaults to 'x-list-over').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;6. ListView&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;x-list-over&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The CSS class applied when over a row (defaults to 'x-list-over')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SelectedClass" Modifier="Override" Type="string" DefaultValue="&quot;x-list-selected&quot;">
          <Summary><![CDATA[The CSS class applied to a selected row (defaults to 'x-list-selected'). ]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;6. ListView&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;x-list-selected&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The CSS class applied to a selected row (defaults to 'x-list-selected'). " />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DisableHeaders" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Set this property to true to disable the header click handler disabling sort (defaults to false).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. ListView&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="Set this property to true to disable the header click handler disabling sort (defaults to false)." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ListViewBooleanColumn" Extends="ListViewColumn">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="XType" Type="string">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;xtype&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="FalseText" Type="string" DefaultValue="&quot;false&quot;">
          <Summary><![CDATA[The string returned by the renderer when the column value is falsey (but not undefined) (defaults to 'false').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. ListView&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;false&quot;" />
            <Attribute Type="Description" RawValue="The string returned by the renderer when the column value is falsey (but not undefined) (defaults to 'false')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TrueText" Type="string" DefaultValue="&quot;true&quot;">
          <Summary><![CDATA[The string returned by the renderer when the column value is not falsey (defaults to 'true').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. ListView&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;true&quot;" />
            <Attribute Type="Description" RawValue="The string returned by the renderer when the column value is not falsey (defaults to 'true')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="UndefinedText" Type="string" DefaultValue="&quot;&amp;#160;&quot;">
          <Summary><![CDATA[The string returned by the renderer when the column value is undefined (defaults to ' ').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. ListView&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&amp;#160;&quot;" />
            <Attribute Type="Description" RawValue="The string returned by the renderer when the column value is undefined (defaults to ' ')." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ListViewColumn" Extends="StateManagedItem">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Align" Type="TextAlign" DefaultValue="TextAlign.Left">
          <Summary><![CDATA[Set the CSS text-align property of the column. Defaults to 'left'.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="Category" RawValue="&quot;6. ListView&quot;" />
            <Attribute Type="DefaultValue" RawValue="TextAlign.Left" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Set the CSS text-align property of the column. Defaults to 'left'." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Cls" Type="string" DefaultValue="null">
          <Summary><![CDATA[Optional. This option can be used to add a CSS class to the cell of each row for this column.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. ListView&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="Optional. This option can be used to add a CSS class to the cell of each row for this column." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DataIndex" Type="string" DefaultValue="null">
          <Summary><![CDATA[(optional) The name of the field in the grid's Ext.data.Store's Ext.data.Record definition from which to draw the column's value. If not specified, the column's index is used as an index into the Record's data Array.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. ListView&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="(optional) The name of the field in the grid's Ext.data.Store's Ext.data.Record definition from which to draw the column's value. If not specified, the column's index is used as an index into the Record's data Array." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Header" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The header text to display in the Grid view.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. ListView&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The header text to display in the Grid view." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Sortable" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Specify true to enable sorting on this column (defaults to false).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. ListView&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Specify true to enable sorting on this column (defaults to false)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Template" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[Specify a string to pass as the configuration string for Ext.XTemplate. By default an Ext.XTemplate will be implicitly created using the dataIndex.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;tpl&quot;" />
            <Attribute Type="Category" RawValue="&quot;6. ListView&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="Specify a string to pass as the configuration string for Ext.XTemplate. By default an Ext.XTemplate will be implicitly created using the dataIndex." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="XTemplate" Type="XTemplate">
          <Summary><![CDATA[An XTemplate to use to process a Record's data to produce a column's rendered value.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;3. TemplateColumn&quot;" />
            <Attribute Type="ConfigOption" RawValue="&quot;tpl&quot;, typeof(LazyControlJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="An XTemplate to use to process a Record's data to produce a column's rendered value." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Width" Type="double" DefaultValue="0.0">
          <Summary><![CDATA[Percentage of the container width this column should be allocated. Columns that have no width specified will be allocated with an equal percentage to fill 100% of the container width. To easily take advantage of the full container width, leave the width of at least one column undefined. Note that if you do not want to take up the full width of the container, the width of every column needs to be explicitly defined.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. ListView&quot;" />
            <Attribute Type="DefaultValue" RawValue="0.0" />
            <Attribute Type="Description" RawValue="Percentage of the container width this column should be allocated. Columns that have no width specified will be allocated with an equal percentage to fill 100% of the container width. To easily take advantage of the full container width, leave the width of at least one column undefined. Note that if you do not want to take up the full width of the container, the width of every column needs to be explicitly defined." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ListViewColumnCollection" Extends="StateManagedCollection&lt;ListViewColumn&gt;">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="ListViewDateColumn" Extends="ListViewColumn">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="XType" Type="string">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;xtype&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Format" Type="string" DefaultValue="&quot;d&quot;">
          <Summary><![CDATA[A formatting string as used by Date.format to format a Date for this Column (defaults to 'd').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. ListView&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;d&quot;" />
            <Attribute Type="Description" RawValue="A formatting string as used by Date.format to format a Date for this Column (defaults to 'd')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="FormatProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;format&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ListViewNumberColumn" Extends="ListViewColumn">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="XType" Type="string">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;xtype&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Format" Type="string" DefaultValue="&quot;0,000.00&quot;">
          <Summary><![CDATA[A formatting string as used by Ext.util.Format.number to format a numeric value for this Column (defaults to '0,000.00').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. ListView&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;0,000.00&quot;" />
            <Attribute Type="Description" RawValue="A formatting string as used by Ext.util.Format.number to format a numeric value for this Column (defaults to '0,000.00')." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="LoadConfig" Extends="BaseLoadConfig">
      <Summary><![CDATA[The only required property is url. The optional properties nocache, text and scripts are shorthand for disableCaching, indicatorText and loadScripts and are used to set their associated property on this panel Updater instance.]]></Summary>
      <Attributes>
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="Description" RawValue="The only required property is url. The optional properties nocache, text and scripts are shorthand for disableCaching, indicatorText and loadScripts and are used to set their associated property on this panel Updater instance." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Mode" Type="LoadMode" DefaultValue="LoadMode.Merge">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="DefaultValue" RawValue="LoadMode.Merge" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="PassParentSize" Type="bool" DefaultValue="false">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TriggerEvent" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[Event which triggers loading process. Default value is render]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Event which triggers loading process. Default value is render" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TriggerControl" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[TriggerEvent's control]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="TriggerEvent's control" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Cls" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[IFrame css style class]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="IFrame css style class" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ManuallyTriggered" Type="bool" DefaultValue="false">
          <Summary><![CDATA[If true then loading performs after reload function calling.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="If true then loading performs after reload function calling." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ReloadOnEvent" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Reload content on each show event.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Reload content on each show event." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ShowMask" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to show the mask while iframe loading.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to show the mask while iframe loading." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MaskMsg" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The IFrame LoadMask message.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Description" RawValue="The IFrame LoadMask message." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MaskCls" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The IFrame LoadMask css class.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Description" RawValue="The IFrame LoadMask css class." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MonitorComplete" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to monitor complete state of the iframe instead load event using.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to monitor complete state of the iframe instead load event using." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="LoadMask" Extends="StateManagedItem">
      <Summary><![CDATA[A simple utility class for generically masking elements while loading data. If the element being masked has an underlying Ext.data.Store, the masking will be automatically synchronized with the store's loading process and the mask element will be cached for reuse. For all other elements, this mask will replace the element's UpdateOptions load indicator and will be destroyed after the initial load.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" RawValue="A simple utility class for generically masking elements while loading data. If the element being masked has an underlying Ext.data.Store, the masking will be automatically synchronized with the store's loading process and the mask element will be cached for reuse. For all other elements, this mask will replace the element's UpdateOptions load indicator and will be destroyed after the initial load." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="ShowMask" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to create a single-use mask that is automatically destroyed after loading (useful for page loads), False to persist the mask element reference for multiple uses (e.g., for paged data widgets). Defaults to false.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to create a single-use mask that is automatically destroyed after loading (useful for page loads), False to persist the mask element reference for multiple uses (e.g., for paged data widgets). Defaults to false." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Msg" Type="string" DefaultValue="&quot;Loading...&quot;">
          <Summary><![CDATA[The text to display in a centered loading message box (defaults to 'Loading...').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;Loading...&quot;" />
            <Attribute Type="Description" RawValue="The text to display in a centered loading message box (defaults to 'Loading...')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MsgCls" Type="string" DefaultValue="&quot;x-mask-loading&quot;">
          <Summary><![CDATA[The CSS class to apply to the loading message element (defaults to 'x-mask-loading').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;x-mask-loading&quot;" />
            <Attribute Type="Description" RawValue="The CSS class to apply to the loading message element (defaults to 'x-mask-loading')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RemoveMask" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to create a single-use mask that is automatically destroyed after loading (useful for page loads), False to persist the mask element reference for multiple uses (e.g., for paged data widgets). Defaults to false.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to create a single-use mask that is automatically destroyed after loading (useful for page loads), False to persist the mask element reference for multiple uses (e.g., for paged data widgets). Defaults to false." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="LoadMaskJsonConverter" Extends="ExtJsonConverter">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="LockingGridView" Extends="GridView">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxItem" RawValue="false" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="LockText" Type="string" DefaultValue="&quot;Lock&quot;">
          <Summary><![CDATA[The text displayed in the \"Lock\" menu item]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Category" RawValue="&quot;4. LockingGridView&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;Lock&quot;" />
            <Attribute Type="Description" RawValue="The text displayed in the \&quot;Lock\&quot; menu item" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="UnlockText" Type="string" DefaultValue="&quot;Unlock&quot;">
          <Summary><![CDATA[The text displayed in the \"Unlock\" menu item]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Category" RawValue="&quot;4. LockingGridView&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;Unlock&quot;" />
            <Attribute Type="Description" RawValue="The text displayed in the \&quot;Unlock\&quot; menu item" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RowBorderWidth" Type="int" DefaultValue="1">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. LockingGridView&quot;" />
            <Attribute Type="DefaultValue" RawValue="1" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="LockedBorderWidth" Type="int" DefaultValue="1">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. LockingGridView&quot;" />
            <Attribute Type="DefaultValue" RawValue="1" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SyncHeights" Type="bool" DefaultValue="false">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. LockingGridView&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="Margins" Extends="IEquatable&lt;Margins&gt;">
      <Summary><![CDATA[An object containing margins to apply to the region when in the expanded state.]]></Summary>
      <Attributes>
        <Attribute Type="Serializable" />
        <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
        <Attribute Type="Description" RawValue="An object containing margins to apply to the region when in the expanded state." />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="MarginsJsonConverter" Extends="ExtJsonConverter">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="Mask" Extends="ScriptClass">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="MaskConfig" Extends="ExtObject">
      <Summary><![CDATA[A config object containing any or all of the following properties. If this object is not specified the status will be cleared using the defaults.]]></Summary>
      <Attributes>
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="Description" RawValue="A config object containing any or all of the following properties. If this object is not specified the status will be cleared using the defaults." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Msg" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The title text]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The title text" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MsgCls" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[An id or Element from which the message box should animate as it opens and closes (defaults to undefined)]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="An id or Element from which the message box should animate as it opens and closes (defaults to undefined)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ElProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;el&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="Menu" Extends="MenuBase">
      <Summary><![CDATA[A menu object. This is the container to which you add all other menu items. Menu can also serve as a base class when you want a specialized menu based off of another component.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:Menu runat=\&quot;server\&quot;&gt;&lt;Items&gt;&lt;{0}:MenuItem runat=\&quot;server\&quot; Text=\&quot;Item1\&quot; /&gt;&lt;{0}:MenuItem runat=\&quot;server\&quot; Text=\&quot;Item2\&quot; /&gt;&lt;{0}:MenuItem runat=\&quot;server\&quot; Text=\&quot;Item3\&quot; /&gt;&lt;/Items&gt;&lt;/ext:Menu&gt;&quot;" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(Menu), &quot;Build.ToolboxIcons.Menu.bmp&quot;" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="Description" RawValue="A menu object. This is the container to which you add all other menu items. Menu can also serve as a base class when you want a specialized menu based off of another component." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Listeners" Type="MenuListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="MenuDirectEvents">
          <Summary><![CDATA[Server-side DirectEventHandlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Server-side DirectEventHandlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="MenuBase" Abstract="true" Extends="ContainerBase">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="DefaultType" Modifier="Override" Type="string" DefaultValue="&quot;MenuItem&quot;">
          <Summary><![CDATA[The default type of content Container represented by this object as registered in Ext.ComponentMgr (defaults to 'panel').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;5. Container&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;MenuItem&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The default type of content Container represented by this object as registered in Ext.ComponentMgr (defaults to 'panel')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DefaultTypeProxy" Modifier="Override" Access="Protected" Type="string" DefaultValue="&quot;menuitem&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;defaultType&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;menuitem&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EnableScrolling" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Whenever a menu gets so long that the items won't fit the viewable area, it provides the user with an easy UI to scroll the menu.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. Menu&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Whenever a menu gets so long that the items won't fit the viewable area, it provides the user with an easy UI to scroll the menu." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Floating" Type="bool" DefaultValue="true">
          <Summary><![CDATA[By default, a Menu configured as floating:true will be rendered as an Ext.Layer (an absolutely positioned, floating Component with zindex=15000). If configured as floating:false, the Menu may be used as child item of another Container instead of a free-floating Layer.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. Menu&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="By default, a Menu configured as floating:true will be rendered as an Ext.Layer (an absolutely positioned, floating Component with zindex=15000). If configured as floating:false, the Menu may be used as child item of another Container instead of a free-floating Layer." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AllowOtherMenus" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to allow multiple menus to be displayed at the same time (defaults to false).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. Menu&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to allow multiple menus to be displayed at the same time (defaults to false)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DefaultAlign" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The default Ext.Element.alignTo anchor position value for this menu relative to its element of origin (defaults to \"tl-bl?\")]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;6. Menu&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The default Ext.Element.alignTo anchor position value for this menu relative to its element of origin (defaults to \&quot;tl-bl?\&quot;)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="OffsetX" Type="int" DefaultValue="0">
          <Summary><![CDATA[X offset in pixels by which to change the default Menu popup position after aligning according to the defaultAlign configuration.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. Menu&quot;" />
            <Attribute Type="DefaultValue" RawValue="0" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="X offset in pixels by which to change the default Menu popup position after aligning according to the defaultAlign configuration." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="OffsetY" Type="int" DefaultValue="0">
          <Summary><![CDATA[Y offset in pixels by which to change the default Menu popup position after aligning according to the defaultAlign configuration.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. Menu&quot;" />
            <Attribute Type="DefaultValue" RawValue="0" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Y offset in pixels by which to change the default Menu popup position after aligning according to the defaultAlign configuration." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DefaultOffsets" Access="ProtectedInternal" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IgnoreParentClicks" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to ignore clicks on any item in this menu that is a parent item (displays a submenu) so that the submenu is not dismissed when clicking the parent item (defaults to false).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. Menu&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to ignore clicks on any item in this menu that is a parent item (displays a submenu) so that the submenu is not dismissed when clicking the parent item (defaults to false)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MinWidth" Modifier="Override" Type="Unit" DefaultValue="typeof(Unit), &quot;120&quot;">
          <Summary><![CDATA[The minimum width of the menu in pixels (defaults to 120).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. Menu&quot;" />
            <Attribute Type="DefaultValue" RawValue="typeof(Unit), &quot;120&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The minimum width of the menu in pixels (defaults to 120)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MaxHeight" Modifier="Override" Type="Unit" DefaultValue="typeof(Unit), &quot;&quot;">
          <Summary><![CDATA[The maximum height of the menu. Only applies when enableScrolling is set to True (defaults to null).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. Menu&quot;" />
            <Attribute Type="DefaultValue" RawValue="typeof(Unit), &quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The maximum height of the menu. Only applies when enableScrolling is set to True (defaults to null)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ScrollIncrement" Type="int" DefaultValue="24">
          <Summary><![CDATA[The amount to scroll the menu. Only applies when enableScrolling is set to True (defaults to 24).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;6. Menu&quot;" />
            <Attribute Type="DefaultValue" RawValue="24" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The amount to scroll the menu. Only applies when enableScrolling is set to True (defaults to 24)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ShowSeparator" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to show the icon separator. (defaults to true).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. Menu&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to show the icon separator. (defaults to true)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Shadow" Type="ShadowMode" DefaultValue="ShadowMode.Sides">
          <Summary><![CDATA[True or \"sides\" for the default effect, \"frame\" for 4-way shadow, and \"drop\" for bottom-right shadow (defaults to \"sides\")]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="typeof(ShadowJsonConverter)" />
            <Attribute Type="Category" RawValue="&quot;6. Menu&quot;" />
            <Attribute Type="DefaultValue" RawValue="ShadowMode.Sides" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True or \&quot;sides\&quot; for the default effect, \&quot;frame\&quot; for 4-way shadow, and \&quot;drop\&quot; for bottom-right shadow (defaults to \&quot;sides\&quot;)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SubMenuAlign" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The Ext.Element.alignTo anchor position value to use for submenus of this menu (defaults to \"tl-tr?\")]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. Menu&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The Ext.Element.alignTo anchor position value to use for submenus of this menu (defaults to \&quot;tl-tr?\&quot;)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DisableMenuNavigation" Type="bool" DefaultValue="false">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;6. Menu&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RenderToForm" Type="bool" DefaultValue="false">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. Menu&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DisableMenuNavigationProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;keyNav&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods>
        <Method Name="Hide" ParamsRaw="bool deep">
          <Summary><![CDATA[Hides this menu and optionally all parent menus]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Hides this menu and optionally all parent menus" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Show" ParamsRaw="string element, string position">
          <Summary><![CDATA[Displays this menu relative to another element]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Displays this menu relative to another element" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Show" ParamsRaw="string element">
          <Summary><![CDATA[Displays this menu relative to another element]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Displays this menu relative to another element" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="ShowAt" ParamsRaw="int x, int y">
          <Summary><![CDATA[Displays this menu at a specific xy position]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Displays this menu at a specific xy position" />
          </Attributes>
          <Parameters />
        </Method>
      </Methods>
    </Class>
    <Class Name="MenuCollection" Extends="ItemsCollection&lt;MenuBase&gt;">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Primary" Type="MenuBase">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Object" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="MenuCommand" Extends="StateManagedItem">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="CommandName" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;command&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Icon" Type="Icon" DefaultValue="Ext.Net.Icon.None">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="Ext.Net.Icon.None" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IconCls" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Text" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Cls" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;2. MenuCommand&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CtCls" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;2. MenuCommand&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Disabled" Type="bool" DefaultValue="false">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;2. MenuCommand&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DisabledClass" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;2. MenuCommand&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Hidden" Type="bool" DefaultValue="false">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;2. MenuCommand&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="OverCls" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;2. MenuCommand&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ItemCls" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;2. MenuCommand&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Menu" Type="CommandMenu">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;menu&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. MenuCommand&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Handler" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A function that will handle the click event of this menu item (defaults to undefined).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;2. MenuCommand&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="A function that will handle the click event of this menu item (defaults to undefined)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HideOnClick" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to hide the containing menu after this item is clicked (defaults to true).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;2. MenuCommand&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to hide the containing menu after this item is clicked (defaults to true)." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="MenuCommandCollection" Extends="StateManagedCollection&lt;MenuCommand&gt;">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="MenuDirectEvents" Extends="ContainerDirectEvents">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Click" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when this menu is clicked (or when the enter key is pressed while it is active)]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Menu), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;menuItem&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;e&quot;, typeof(Menu), &quot;Ext.EventObject&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;click&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when this menu is clicked (or when the enter key is pressed while it is active)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ItemClick" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when a menu item contained in this menu is clicked]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;menuItem&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(Menu), &quot;Ext.EventObject&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;itemclick&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a menu item contained in this menu is clicked" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MouseOut" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when the mouse exits this menu]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Menu), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;menuItem&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(Menu), &quot;Ext.EventObject&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;mouseout&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the mouse exits this menu" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MouseOver" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when the mouse is hovering over this menu]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Menu), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;menuItem&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(Menu), &quot;Ext.EventObject&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;mouseover&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the mouse is hovering over this menu" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="MenuItem" Extends="MenuItemBase">
      <Summary><![CDATA[A base class for all menu items that require menu-related functionality (like sub-menus) and are not static display items. Item extends the base functionality of Ext.menu.BaseItem by adding menu-specific activation and click handling.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="Description" RawValue="A base class for all menu items that require menu-related functionality (like sub-menus) and are not static display items. Item extends the base functionality of Ext.menu.BaseItem by adding menu-specific activation and click handling." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Listeners" Type="BaseMenuItemListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="BaseMenuItemDirectEvents">
          <Summary><![CDATA[Server-side DirectEventHandlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Server-side DirectEventHandlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="MenuItemBase" Abstract="true" Extends="BaseMenuItem" Inherits="IIcon,IAutoPostBack,IPostBackEventHandler,IButtonControl">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="PostBackUrl" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="UrlProperty" RawValue="&quot;*.aspx&quot;" />
            <Attribute Type="Editor" RawValue="&quot;System.Web.UI.Design.UrlEditor&quot;, typeof(UITypeEditor)" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="OnClientClick" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The JavaScript to execute when the item is clicked. Or, please use the &lt;Listeners> for more flexibility.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;5. Item&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The JavaScript to execute when the item is clicked. Or, please use the &amp;lt;Listeners&gt; for more flexibility." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AutoPostBack" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Gets or sets a value indicating whether the control state automatically posts back to the server when button clicked.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;Behavior&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="Gets or sets a value indicating whether the control state automatically posts back to the server when button clicked." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CausesValidation" Type="bool" DefaultValue="true">
          <Summary><![CDATA[Gets or sets a value indicating whether validation is performed when the control is set to validate when a postback occurs.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;Behavior&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="Gets or sets a value indicating whether validation is performed when the control is set to validate when a postback occurs." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ValidationGroup" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[Gets or Sets the Controls ValidationGroup]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;Behavior&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="Gets or Sets the Controls ValidationGroup" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CanActivate" Modifier="Override" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True if this item can be visually activated (defaults to true).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Item&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True if this item can be visually activated (defaults to true)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Href" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The href attribute to use for the underlying anchor link (defaults to '#').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Item&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The href attribute to use for the underlying anchor link (defaults to '#')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HrefTarget" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The target attribute to use for the underlying anchor link (defaults to '').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Item&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The target attribute to use for the underlying anchor link (defaults to '')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IconUrl" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The path to an icon to display in this item (defaults to Ext.BLANK_IMAGE_URL). If icon is specified iconCls should not be.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;5. Item&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The path to an icon to display in this item (defaults to Ext.BLANK_IMAGE_URL). If icon is specified iconCls should not be." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IconUrlProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;icon&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IconCls" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A CSS class that specifies a background image that will be used as the icon for this item (defaults to ''). If iconCls is specified icon should not be.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Item&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="DirectEventUpdate" RawValue="Script = &quot;{0}.setIconClass({1});&quot;" />
            <Attribute Type="Description" RawValue="A CSS class that specifies a background image that will be used as the icon for this item (defaults to ''). If iconCls is specified icon should not be." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ItemCls" Modifier="Override" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The default CSS class to use for menu items (defaults to 'x-menu-item')]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Item&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The default CSS class to use for menu items (defaults to 'x-menu-item')" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ShowDelay" Type="int" DefaultValue="200">
          <Summary><![CDATA[Length of time in milliseconds to wait before showing this item (defaults to 200)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;5. Item&quot;" />
            <Attribute Type="DefaultValue" RawValue="200" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Length of time in milliseconds to wait before showing this item (defaults to 200)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Text" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The text to display in this item (defaults to '').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Item&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="DirectEventUpdate" RawValue="GenerateMode = AutoGeneratingScript.WithSet" />
            <Attribute Type="Description" RawValue="The text to display in this item (defaults to '')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Menu" Type="MenuCollection">
          <Summary><![CDATA[Standard menu attribute consisting of a reference to a menu object, a menu id or a menu config blob]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;menu&quot;, typeof(ItemCollectionJsonConverter)" />
            <Attribute Type="Category" RawValue="&quot;5. Item&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="Standard menu attribute consisting of a reference to a menu object, a menu id or a menu config blob" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Icon" Type="Icon" DefaultValue="Icon.None">
          <Summary><![CDATA[The icon to use in the Title bar. See also, IconCls to set an icon with a custom Css class.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;5. Item&quot;" />
            <Attribute Type="DefaultValue" RawValue="Icon.None" />
            <Attribute Type="Description" RawValue="The icon to use in the Title bar. See also, IconCls to set an icon with a custom Css class." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="MenuListeners" Extends="ContainerListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Click" Type="ComponentListener">
          <Summary><![CDATA[Fires when this menu is clicked (or when the enter key is pressed while it is active)]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Menu), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;menuItem&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;e&quot;, typeof(Menu), &quot;Ext.EventObject&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;click&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when this menu is clicked (or when the enter key is pressed while it is active)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ItemClick" Type="ComponentListener">
          <Summary><![CDATA[Fires when a menu item contained in this menu is clicked]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;menuItem&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(Menu), &quot;Ext.EventObject&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;itemclick&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a menu item contained in this menu is clicked" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MouseOut" Type="ComponentListener">
          <Summary><![CDATA[Fires when the mouse exits this menu]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Menu), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;menuItem&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(Menu), &quot;Ext.EventObject&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;mouseout&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the mouse exits this menu" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MouseOver" Type="ComponentListener">
          <Summary><![CDATA[Fires when the mouse is hovering over this menu]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Menu), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;menuItem&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(Menu), &quot;Ext.EventObject&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;mouseover&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the mouse is hovering over this menu" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="MenuPanel" Extends="PanelBase">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:MenuPanel runat=\&quot;server\&quot; Title=\&quot;Menu\&quot; Height=\&quot;300\&quot; Width=\&quot;185\&quot;&gt;&lt;Menu&gt;&lt;Items&gt;&lt;ext:MenuItem runat=\&quot;server\&quot; Text=\&quot;Item1\&quot;&gt;&lt;Menu&gt;&lt;ext:Menu runat=\&quot;server\&quot;&gt;&lt;Items&gt;&lt;ext:MenuItem runat=\&quot;server\&quot; Text=\&quot;SubItem1\&quot; /&gt;&lt;ext:MenuItem runat=\&quot;server\&quot; Text=\&quot;SubItem2\&quot; /&gt;&lt;/Items&gt;&lt;/ext:Menu&gt;&lt;/Menu&gt;&lt;/ext:MenuItem&gt;&lt;ext:MenuItem runat=\&quot;server\&quot; Text=\&quot;Item2\&quot; /&gt;&lt;ext:MenuItem runat=\&quot;server\&quot; Text=\&quot;Item3\&quot; /&gt;&lt;ext:MenuItem runat=\&quot;server\&quot; Text=\&quot;Item4\&quot; /&gt;&lt;/Items&gt;&lt;/Menu&gt;&lt;/{0}:MenuPanel&gt;&quot;" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(MenuPanel), &quot;Build.ToolboxIcons.MenuPanel.bmp&quot;" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Items" Modifier="Override" Type="ItemsCollection&lt;Component&gt;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Ignore" />
            <Attribute Type="Browsable" RawValue="false" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Menu" Type="Menu">
          <Summary><![CDATA[Standard menu attribute consisting of a reference to a menu object, a menu id or a menu config blob]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;menu&quot;, typeof(LazyControlJsonConverter)" />
            <Attribute Type="Category" RawValue="&quot;7. MenuPanel&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="Standard menu attribute consisting of a reference to a menu object, a menu id or a menu config blob" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SaveSelection" Type="bool" DefaultValue="true">
          <Summary><![CDATA[Save selection after click]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. MenuPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Save selection after click" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="FitHeight" Type="bool" DefaultValue="true">
          <Summary><![CDATA[Fit menu's height]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. MenuPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fit menu's height" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SelectedIndex" Type="int" DefaultValue="-1">
          <Summary><![CDATA[Index of selected item]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetSelectedIndex&quot;" />
            <Attribute Type="Category" RawValue="&quot;7. MenuPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="-1" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Index of selected item" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Listeners" Type="PanelListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="PanelDirectEvents">
          <Summary><![CDATA[Server-side Ajax Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Server-side Ajax Event Handlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods>
        <Method Name="SetSelectedIndex" ParamsRaw="int index">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="ClearSelection">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" />
          </Attributes>
          <Parameters />
        </Method>
      </Methods>
    </Class>
    <Class Name="MenuSeparator" Extends="BaseMenuItem">
      <Summary><![CDATA[Adds a separator bar to a menu, used to divide logical groups of menu items. Generally you will add one of these by using \" - \" in you call to add() or in your items config rather than creating one directly.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="Description" RawValue="Adds a separator bar to a menu, used to divide logical groups of menu items. Generally you will add one of these by using \&quot; - \&quot; in you call to add() or in your items config rather than creating one directly." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="HideOnClick" Modifier="Override" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to hide the containing menu after this item is clicked (defaults to true).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Separator&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to hide the containing menu after this item is clicked (defaults to true)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Disabled" Modifier="Override" Type="bool" DefaultValue="true">
          <Summary><![CDATA[Render this component disabled (default is false).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetDisabled&quot;" />
            <Attribute Type="Category" RawValue="&quot;5. Separator&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Render this component disabled (default is false)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ItemCls" Modifier="Override" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The default CSS class to use for text items (defaults to \"x-menu-text\")]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Separator&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The default CSS class to use for text items (defaults to \&quot;x-menu-text\&quot;)" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="MenuTextItem" Extends="BaseMenuItem">
      <Summary><![CDATA[Adds a static text string to a menu, usually used as either a heading or group separator.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="Description" RawValue="Adds a static text string to a menu, usually used as either a heading or group separator." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="HideOnClick" Modifier="Override" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to hide the containing menu after this item is clicked (defaults to true).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. TextItem&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to hide the containing menu after this item is clicked (defaults to true)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ItemCls" Modifier="Override" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The default CSS class to use for text items (defaults to \"x-menu-text\")]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. TextItem&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The default CSS class to use for text items (defaults to \&quot;x-menu-text\&quot;)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Text" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The text to display for this item (defaults to '')]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. TextItem&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetText&quot;" />
            <Attribute Type="Description" RawValue="The text to display for this item (defaults to '')" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Listeners" Type="BaseMenuItemListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="BaseMenuItemDirectEvents">
          <Summary><![CDATA[Server-side DirectEventHandlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Server-side DirectEventHandlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="MessageBox">
      <Attributes />
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="MessageBox">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="MessageBox">
      <Attributes />
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="MessageBox">
      <Attributes />
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="MessageBox">
      <Attributes />
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="MessageBox">
      <Attributes />
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="MessageBox" Extends="ScriptClass">
      <Attributes />
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="MessageBoxButtonConfig" Extends="ExtObject">
      <Attributes />
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="MessageBoxButtonsConfig" Extends="ExtObject">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="MessageBoxButtonTextConfig" Extends="ExtObject">
      <Attributes />
      <ConfigOptions>
        <ConfigOption Name="Ok" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Cancel" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Yes" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="No" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="MessageBoxConfig" Extends="ExtObject">
      <Summary><![CDATA[A config object containing any or all of the following properties. If this object is not specified the status will be cleared using the defaults.]]></Summary>
      <Attributes>
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="Description" RawValue="A config object containing any or all of the following properties. If this object is not specified the status will be cleared using the defaults." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Title" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The title text]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The title text" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AnimEl" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[An id or Element from which the message box should animate as it opens and closes (defaults to undefined)]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="An id or Element from which the message box should animate as it opens and closes (defaults to undefined)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ButtonsProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;buttons&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Closable" Type="bool" DefaultValue="true">
          <Summary><![CDATA[False to hide the top-right close button (defaults to true). Note that progress and wait dialogs will ignore this property and always hide the close button as they can only be closed programmatically.]]></Summary>
          <Attributes>
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="False to hide the top-right close button (defaults to true). Note that progress and wait dialogs will ignore this property and always hide the close button as they can only be closed programmatically." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Cls" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A custom CSS class to apply to the message box's container element]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="A custom CSS class to apply to the message box's container element" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MultilineHeight" Type="Unit" DefaultValue="typeof(Unit), &quot;0&quot;">
          <Summary><![CDATA[The height in pixels to create the textbox]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;multiline&quot;" />
            <Attribute Type="DefaultValue" RawValue="typeof(Unit), &quot;0&quot;" />
            <Attribute Type="Description" RawValue="The height in pixels to create the textbox" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="FnProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;fn&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Scope" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The scope of the callback function]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The scope of the callback function" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IconProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;icon&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HeaderIconClsProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;iconCls&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MaxWidth" Type="Unit" DefaultValue="typeof(Unit), &quot;600&quot;">
          <Summary><![CDATA[The maximum width in pixels of the message box (defaults to 600)]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="typeof(Unit), &quot;600&quot;" />
            <Attribute Type="Description" RawValue="The maximum width in pixels of the message box (defaults to 600)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MinWidth" Type="Unit" DefaultValue="typeof(Unit), &quot;100&quot;">
          <Summary><![CDATA[The minimum width in pixels of the message box (defaults to 100)]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="typeof(Unit), &quot;100&quot;" />
            <Attribute Type="Description" RawValue="The minimum width in pixels of the message box (defaults to 100)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Modal" Type="bool" DefaultValue="true">
          <Summary><![CDATA[False to allow user interaction with the page while the message box is displayed (defaults to true)]]></Summary>
          <Attributes>
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="False to allow user interaction with the page while the message box is displayed (defaults to true)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Message" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A string that will replace the existing message box body text (defaults to the XHTML-compliant non-breaking space character '&#160;')]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;msg&quot;" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="A string that will replace the existing message box body text (defaults to the XHTML-compliant non-breaking space character '&amp;#160;')" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Multiline" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to prompt the user to enter multi-line text (defaults to false)]]></Summary>
          <Attributes>
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to prompt the user to enter multi-line text (defaults to false)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Progress" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to display a progress bar (defaults to false)]]></Summary>
          <Attributes>
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to display a progress bar (defaults to false)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ProgressText" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The text to display inside the progress bar if progress = true (defaults to '')]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The text to display inside the progress bar if progress = true (defaults to '')" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Prompt" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to prompt the user to enter single-line text (defaults to false)]]></Summary>
          <Attributes>
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to prompt the user to enter single-line text (defaults to false)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ProxyDrag" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to display a lightweight proxy while dragging (defaults to false)]]></Summary>
          <Attributes>
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to display a lightweight proxy while dragging (defaults to false)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Value" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The string value to set into the active textbox element if displayed]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The string value to set into the active textbox element if displayed" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Wait" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to display a progress bar (defaults to false)]]></Summary>
          <Attributes>
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to display a progress bar (defaults to false)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="WaitConfigProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;waitConfig&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Width" Type="Unit" DefaultValue="typeof(Unit), &quot;0&quot;">
          <Summary><![CDATA[The width of the dialog in pixels]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="typeof(Unit), &quot;0&quot;" />
            <Attribute Type="Description" RawValue="The width of the dialog in pixels" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="MetaAttribute" Extends="Attribute">
      <Attributes>
        <Attribute Type="AttributeUsage" RawValue="AttributeTargets.Class | AttributeTargets.Property | AttributeTargets.Method, AllowMultiple = false" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="MonthPicker" Extends="Plugin">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(MonthPicker), &quot;Build.ToolboxIcons.Plugin.bmp&quot;" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:MonthPicker runat=\&quot;server\&quot; /&gt;&quot;" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="MonthView" Extends="MonthViewBase">
      <Attributes>
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(DayView), &quot;Build.ToolboxIcons.CalendarPanel.bmp&quot;" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Listeners" Type="MonthViewListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="MonthViewDirectEvents">
          <Summary><![CDATA[Server-side Ajax Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Server-side Ajax Event Handlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="MonthViewBase" Abstract="true" Extends="CalendarView">
      <Attributes />
      <ConfigOptions>
        <ConfigOption Name="ShowHeader" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to display a header beneath the navigation bar containing the week names above each week's column, false not to show it and instead display the week names in the first row of days in the calendar (defaults to false).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. MonthView&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to display a header beneath the navigation bar containing the week names above each week's column, false not to show it and instead display the week names in the first row of days in the calendar (defaults to false)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ShowTime" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to display the current time in today's box in the calendar, false to not display it (defautls to true)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. MonthView&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to display the current time in today's box in the calendar, false to not display it (defautls to true)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ShowTodayText" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to display the todayText string in today's box in the calendar, false to not display it (defautls to true)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. MonthView&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to display the todayText string in today's box in the calendar, false to not display it (defautls to true)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ShowWeekLinks" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to display an extra column before the first day in the calendar that links to the view for each individual week, false to not show it (defaults to false). If true, the week links can also contain the week number depending on the value of showWeekNumbers.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. MonthView&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to display an extra column before the first day in the calendar that links to the view for each individual week, false to not show it (defaults to false). If true, the week links can also contain the week number depending on the value of showWeekNumbers." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ShowWeekNumbers" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to show the week number for each week in the calendar in the week link column, false to show nothing (defaults to false). Note that if showWeekLinks is false this config will have no affect even if true.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. MonthView&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to show the week number for each week in the calendar in the week link column, false to show nothing (defaults to false). Note that if showWeekLinks is false this config will have no affect even if true." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TodayText" Type="string" DefaultValue="&quot;Today&quot;">
          <Summary><![CDATA[The text to display in the current day's box in the calendar when showTodayText is true (defaults to 'Today')]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. MonthView&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;Today&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The text to display in the current day's box in the calendar when showTodayText is true (defaults to 'Today')" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="WeekLinkOverClass" Type="string" DefaultValue="&quot;ext-week-link-over&quot;">
          <Summary><![CDATA[The CSS class name applied when the mouse moves over a week link element (only applies when showWeekLinks is true, defaults to 'ext-week-link-over').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. MonthView&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;ext-week-link-over&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The CSS class name applied when the mouse moves over a week link element (only applies when showWeekLinks is true, defaults to 'ext-week-link-over')." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="MonthViewDirectEvents" Extends="CalendarViewDirectEvents">
      <Attributes />
      <ConfigOptions>
        <ConfigOption Name="DayClick" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after the user clicks within the view container and not on an event element]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(MonthView), &quot;Ext.calendar.MonthView&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;dt&quot;, typeof(DateTime), &quot;The date/time that was clicked on&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;allDay&quot;, typeof(bool), &quot;True if the day clicked on represents an all-day box, else false. Clicks within the MonthView always return true for this param.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;el&quot;, typeof(Element), &quot;The Element that was clicked on&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;dayclick&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the user clicks within the view container and not on an event element" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="WeekClick" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after the user clicks within a week link (when #showWeekLinks is true)]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(MonthView), &quot;Ext.calendar.MonthView&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;dt&quot;, typeof(DateTime), &quot;The start date of the week that was clicked on&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;weekclick&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the user clicks within a week link (when #showWeekLinks is true)" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="MonthViewListeners" Extends="CalendarViewListeners">
      <Attributes />
      <ConfigOptions>
        <ConfigOption Name="DayClick" Type="ComponentListener">
          <Summary><![CDATA[Fires after the user clicks within the view container and not on an event element]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(MonthView), &quot;Ext.calendar.MonthView&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;dt&quot;, typeof(DateTime), &quot;The date/time that was clicked on&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;allDay&quot;, typeof(bool), &quot;True if the day clicked on represents an all-day box, else false. Clicks within the MonthView always return true for this param.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;el&quot;, typeof(Element), &quot;The Element that was clicked on&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;dayclick&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the user clicks within the view container and not on an event element" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="WeekClick" Type="ComponentListener">
          <Summary><![CDATA[Fires after the user clicks within a week link (when #showWeekLinks is true)]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(MonthView), &quot;Ext.calendar.MonthView&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;dt&quot;, typeof(DateTime), &quot;The start date of the week that was clicked on&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;weekclick&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the user clicks within a week link (when #showWeekLinks is true)" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="MouseDistanceSensor" Extends="Plugin">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(MouseDistanceSensor), &quot;Build.ToolboxIcons.Plugin.bmp&quot;" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Threshold" Type="int" DefaultValue="100">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. MouseDistanceSensor&quot;" />
            <Attribute Type="DefaultValue" RawValue="100" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Opacity" Type="bool" DefaultValue="true">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. MouseDistanceSensor&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MinOpacity" Type="decimal" DefaultValue="0">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Category" RawValue="&quot;3. MouseDistanceSensor&quot;" />
            <Attribute Type="DefaultValue" RawValue="0" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MaxOpacity" Type="decimal" DefaultValue="1">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Category" RawValue="&quot;3. MouseDistanceSensor&quot;" />
            <Attribute Type="DefaultValue" RawValue="1" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SensorElement" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Category" RawValue="&quot;3. MouseDistanceSensor&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SensorElementProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;getSensorEls&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ConstrainElement" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Category" RawValue="&quot;3. MouseDistanceSensor&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ConstrainElementProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;getConstrainEls&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Listeners" Type="MouseDistanceSensorListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="MouseDistanceSensorDirectEvents">
          <Summary><![CDATA[Server-side Ajax Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Server-side Ajax Event Handlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="MouseDistanceSensorDirectEvents" Extends="ComponentDirectEvents">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Far" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(MouseDistanceSensor), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;far&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Near" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(MouseDistanceSensor), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;sensorEl&quot;, typeof(object), &quot;sensor element&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;near&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Distance" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(MouseDistanceSensor), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;distance&quot;, typeof(int), &quot;distance in pixel&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;rdistance&quot;, typeof(decimal), &quot;relative distance&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;sensorEl&quot;, typeof(object), &quot;sensor element&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;distance&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="MouseDistanceSensorListeners" Extends="ComponentListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Far" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(MouseDistanceSensor), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;far&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Near" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(MouseDistanceSensor), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;sensorEl&quot;, typeof(object), &quot;sensor element&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;near&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Distance" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(MouseDistanceSensor), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;distance&quot;, typeof(int), &quot;distance in pixel&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;rdistance&quot;, typeof(decimal), &quot;relative distance&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;sensorEl&quot;, typeof(object), &quot;sensor element&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;distance&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="MultiCombo" Extends="ComboBoxBaseMulti&lt;ListItem&gt;" Inherits="IPostBackEventHandler">
      <Summary><![CDATA[ComboBox with multi item selection.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxItem" RawValue="true" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:MultiCombo runat=\&quot;server\&quot;&gt;&lt;/{0}:MultiCombo&gt;&quot;" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(MultiCombo), &quot;Build.ToolboxIcons.MultiCombo.bmp&quot;" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="Description" RawValue="ComboBox with multi item selection." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Editable" Modifier="Override" Type="bool" DefaultValue="false">
          <Summary><![CDATA[False to prevent the user from typing text directly into the field, just like a traditional select (defaults to true).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;8. MultiCombo&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="False to prevent the user from typing text directly into the field, just like a traditional select (defaults to true)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SelectionPredefinedProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;selectionPredefined&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Listeners" Type="ComboBoxListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="ComboBoxDirectEvents">
          <Summary><![CDATA[Server-side Ajax Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Server-side Ajax Event Handlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods>
        <Method Name="SelectAll">
          <Summary><![CDATA[Select all items]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Select all items" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="ClearSelections">
          <Summary><![CDATA[Clear selection]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Clear selection" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="DeselectItem" ParamsRaw="int index">
          <Summary><![CDATA[Deselect item by index]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Deselect item by index" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="DeselectItem" ParamsRaw="string value">
          <Summary><![CDATA[Deselect item by value]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Deselect item by value" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SelectItem" ParamsRaw="int index">
          <Summary><![CDATA[Select item by index]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Select item by index" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SelectItem" ParamsRaw="string value">
          <Summary><![CDATA[Select item by value]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Select item by value" />
          </Attributes>
          <Parameters />
        </Method>
      </Methods>
    </Class>
    <Class Name="MultiSelect" Extends="MultiSelectBase&lt;ListItem&gt;" Inherits="IPostBackEventHandler">
      <Summary><![CDATA[A control that allows selection and form submission of multiple list items.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:MultiSelect runat=\&quot;server\&quot;&gt;&lt;/{0}:MultiSelect&gt;&quot;" />
        <Attribute Type="ParseChildren" RawValue="true" />
        <Attribute Type="PersistChildren" RawValue="false" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(MultiSelect), &quot;Build.ToolboxIcons.MultiSelect.bmp&quot;" />
        <Attribute Type="Description" RawValue="A control that allows selection and form submission of multiple list items." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Listeners" Type="MultiSelectListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="MultiSelectDirectEvents">
          <Summary><![CDATA[Server-side DirectEventHandlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Server-side DirectEventHandlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="MultiSelectBase&lt;T&gt;" Abstract="true" Extends="Field" Inherits="IStorewhereT:StateManagedItem">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="StoreID" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The data store to use.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;store&quot;, JsonMode.ToClientID" />
            <Attribute Type="Category" RawValue="&quot;6. MultiSelect&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="IDReferenceProperty" RawValue="typeof(Store)" />
            <Attribute Type="Description" RawValue="The data store to use." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Store" Type="StoreCollection">
          <Summary><![CDATA[The data store to use.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;store&gt;Primary&quot;" />
            <Attribute Type="Category" RawValue="&quot;7. MultiSelect&quot;" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="The data store to use." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Items" Type="ListItemCollection&lt;T&gt;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ItemsProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;store&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SelectedItems" Type="SelectedListItemCollection">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DisplayField" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The underlying data field name to bind to this MultiSelect.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. MultiSelect&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The underlying data field name to bind to this MultiSelect." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ValueField" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The underlying data value name to bind to this MultiSelect.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. MultiSelect&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The underlying data value name to bind to this MultiSelect." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AllowBlank" Type="bool" DefaultValue="true">
          <Summary><![CDATA[False to validate that the value length > 0 (defaults to true).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. MultiSelect&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="False to validate that the value length &gt; 0 (defaults to true)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MaxLength" Type="int" DefaultValue="-1">
          <Summary><![CDATA[Maximum input field length allowed (defaults to Number.MAX_VALUE).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. MultiSelect&quot;" />
            <Attribute Type="DefaultValue" RawValue="-1" />
            <Attribute Type="Description" RawValue="Maximum input field length allowed (defaults to Number.MAX_VALUE)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MinLength" Type="int" DefaultValue="0">
          <Summary><![CDATA[Minimum input field length required (defaults to 0).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. MultiSelect&quot;" />
            <Attribute Type="DefaultValue" RawValue="0" />
            <Attribute Type="Description" RawValue="Minimum input field length required (defaults to 0)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MaxLengthText" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[Error text to display if the maximum length validation fails (defaults to 'The maximum length for this field is {maxLength}').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. MultiSelect&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Description" RawValue="Error text to display if the maximum length validation fails (defaults to 'The maximum length for this field is {maxLength}')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MinLengthText" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[Error text to display if the minimum length validation fails (defaults to 'The minimum length for this field is {minLength}').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. MultiSelect&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Description" RawValue="Error text to display if the minimum length validation fails (defaults to 'The minimum length for this field is {minLength}')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BlankText" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[Error text to display if the allow blank validation fails (defaults to 'This field is required').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. MultiSelect&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Description" RawValue="Error text to display if the allow blank validation fails (defaults to 'This field is required')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Copy" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Causes drag operations to copy nodes rather than move (defaults to false).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. MultiSelect&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="Causes drag operations to copy nodes rather than move (defaults to false)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AllowDuplicates" Type="bool" DefaultValue="false">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;allowDup&quot;" />
            <Attribute Type="Category" RawValue="&quot;6. MultiSelect&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AllowTrash" Type="bool" DefaultValue="false">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. MultiSelect&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Legend" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The title text to display in the panel header (defaults to '')]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. MultiSelect&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The title text to display in the panel header (defaults to '')" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Delimiter" Type="string" DefaultValue="&quot;,&quot;">
          <Summary><![CDATA[The string used to delimit between items when set or returned as a string of values]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. MultiSelect&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;,&quot;" />
            <Attribute Type="Description" RawValue="The string used to delimit between items when set or returned as a string of values" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DragGroup" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The ddgroup name(s) for the View's DragZone (defaults to undefined).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. MultiSelect&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The ddgroup name(s) for the View's DragZone (defaults to undefined)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DropGroup" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The ddgroup name(s) for the View's DropZone (defaults to undefined).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. MultiSelect&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The ddgroup name(s) for the View's DropZone (defaults to undefined)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AppendOnly" Type="bool" DefaultValue="false">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. MultiSelect&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SortField" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. MultiSelect&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Direction" Type="SortDirection" DefaultValue="SortDirection.ASC">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="DefaultValue" RawValue="SortDirection.ASC" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SubmitText" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to submit text of selected items]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. MultiSelect&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="True to submit text of selected items" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="FireSelectOnLoad" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Set init selecetion without event fires]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. MultiSelect&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="Set init selecetion without event fires" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MultiSelect" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to allow multi selection (defaults to true).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. MultiSelect&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="True to allow multi selection (defaults to true)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="KeepSelectionOnClick" Type="KeepSelectionMode" DefaultValue="KeepSelectionMode.Always">
          <Summary><![CDATA[Selection Mode]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="Category" RawValue="&quot;6. MultiSelect&quot;" />
            <Attribute Type="DefaultValue" RawValue="KeepSelectionMode.Always" />
            <Attribute Type="Description" RawValue="Selection Mode" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BodyStyle" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[Custom CSS styles to be applied to the body element in the format expected by Ext.Element.applyStyles (defaults to null).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. MultiSelect&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Custom CSS styles to be applied to the body element in the format expected by Ext.Element.applyStyles (defaults to null)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BottomBar" Type="ToolbarCollection">
          <Summary><![CDATA[The bottom toolbar of the panel.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;bbar&quot;, typeof(ItemCollectionJsonConverter)" />
            <Attribute Type="Category" RawValue="&quot;6. MultiSelect&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="The bottom toolbar of the panel." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TopBar" Type="ToolbarCollection">
          <Summary><![CDATA[The top toolbar of the panel.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;tbar&quot;, typeof(ItemCollectionJsonConverter)" />
            <Attribute Type="Category" RawValue="&quot;6. MultiSelect&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="The top toolbar of the panel." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods>
        <Method Name="UpdateSelection">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" />
          </Attributes>
          <Parameters />
        </Method>
      </Methods>
    </Class>
    <Class Name="MultiSelectDirectEvents" Extends="FieldDirectEvents">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Click" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(MultiSelect), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object), &quot;The click event&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;click&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DblClick" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when a template node is double clicked.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(MultiSelect), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;index&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;node&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;dblclick&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a template node is double clicked." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeDrop" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;view&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;node&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;dd&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;e&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;data&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforedrop&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AfterDrop" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;view&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;node&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;dd&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;e&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;data&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;afterdrop&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="MultiSelectionModel" Extends="AbstractTreeSelectionModel">
      <Summary><![CDATA[Multi selection for a TreePanel.]]></Summary>
      <Attributes>
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="Description" RawValue="Multi selection for a TreePanel." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="KeepSelectionOnClick" Type="KeepSelectionMode" DefaultValue="KeepSelectionMode.WithCtrlKey">
          <Summary><![CDATA[Selection mode]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="Category" RawValue="&quot;3. MultiSelectionModel&quot;" />
            <Attribute Type="DefaultValue" RawValue="KeepSelectionMode.WithCtrlKey" />
            <Attribute Type="Description" RawValue="Selection mode" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Listeners" Type="MultiSelectionModelListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="MultiSelectionModelDirectEvents">
          <Summary><![CDATA[Server-side DirectEventHandlers]]></Summary>
          <Attributes>
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Server-side DirectEventHandlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="MultiSelectionModelDirectEvents" Extends="ComponentDirectEvents">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="SelectionChange" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when the selected nodes change]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;el&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;nodes&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;selectionchange&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the selected nodes change" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="MultiSelectionModelListeners" Extends="ComponentListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="SelectionChange" Type="ComponentListener">
          <Summary><![CDATA[Fires when the selected nodes change]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;el&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;nodes&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;selectionchange&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the selected nodes change" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="MultiSelectListeners" Extends="FieldListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Click" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(MultiSelect), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object), &quot;The click event&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;click&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DblClick" Type="ComponentListener">
          <Summary><![CDATA[Fires when a template node is double clicked.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(MultiSelect), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;index&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;node&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;dblclick&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a template node is double clicked." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeDrop" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;view&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;node&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;dd&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;e&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;data&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforedrop&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AfterDrop" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;view&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;node&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;dd&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;e&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;data&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;afterdrop&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="NetToPHPDateFormatStringJsonConverter" Extends="ExtJsonConverter">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="Node" Abstract="true" Extends="StateManagedItem">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="NodeID" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The id for this node. If one is not specified, one is generated.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;id&quot;" />
            <Attribute Type="Category" RawValue="&quot;2. Node&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The id for this node. If one is not specified, one is generated." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Leaf" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True if this node is a leaf and does not have children]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;2. Node&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True if this node is a leaf and does not have children" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="NodeDirectEvents" Extends="ComponentDirectEvents">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Append" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when a new child node is appended]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;tree&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;node&quot;, typeof(Node)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;newNode&quot;, typeof(Node)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;index&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;append&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a new child node is appended" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeAppend" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before a new child is appended, return false to cancel the append]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;tree&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;node&quot;, typeof(Node)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;newNode&quot;, typeof(Node)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeappend&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before a new child is appended, return false to cancel the append" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeInsert" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before a new child is inserted, return false to cancel the insert.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;tree&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;node&quot;, typeof(Node)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;newNode&quot;, typeof(Node)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;refNode&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeinsert&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before a new child is inserted, return false to cancel the insert." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeMove" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before this node is moved to a new location in the tree. Return false to cancel the move.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;tree&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;node&quot;, typeof(Node)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;oldParent&quot;, typeof(Node)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;newParent&quot;, typeof(Node)" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;index&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforemove&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before this node is moved to a new location in the tree. Return false to cancel the move." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeRemove" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before a child is removed, return false to cancel the remove.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;tree&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;thisNode&quot;, typeof(Node)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;node&quot;, typeof(Node)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeremove&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before a child is removed, return false to cancel the remove." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Insert" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when a new child node is inserted.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;tree&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;node&quot;, typeof(Node)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;newNode&quot;, typeof(Node)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;refNode&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;insert&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a new child node is inserted." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Move" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when this node is moved to a new location in the tree]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;tree&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;node&quot;, typeof(Node)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;oldParent&quot;, typeof(Node)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;newParent&quot;, typeof(Node)" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;index&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;move&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when this node is moved to a new location in the tree" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Remove" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when a child node is removed]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;tree&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;thisNode&quot;, typeof(Node)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;node&quot;, typeof(Node)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;remove&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a child node is removed" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="NodeListeners" Extends="ComponentListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Append" Type="ComponentListener">
          <Summary><![CDATA[Fires when a new child node is appended]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;tree&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;node&quot;, typeof(Node)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;newNode&quot;, typeof(Node)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;index&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;append&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a new child node is appended" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeAppend" Type="ComponentListener">
          <Summary><![CDATA[Fires before a new child is appended, return false to cancel the append]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;tree&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;node&quot;, typeof(Node)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;newNode&quot;, typeof(Node)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeappend&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before a new child is appended, return false to cancel the append" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeInsert" Type="ComponentListener">
          <Summary><![CDATA[Fires before a new child is inserted, return false to cancel the insert.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;tree&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;node&quot;, typeof(Node)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;newNode&quot;, typeof(Node)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;refNode&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeinsert&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before a new child is inserted, return false to cancel the insert." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeMove" Type="ComponentListener">
          <Summary><![CDATA[Fires before this node is moved to a new location in the tree. Return false to cancel the move.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;tree&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;node&quot;, typeof(Node)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;oldParent&quot;, typeof(Node)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;newParent&quot;, typeof(Node)" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;index&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforemove&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before this node is moved to a new location in the tree. Return false to cancel the move." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeRemove" Type="ComponentListener">
          <Summary><![CDATA[Fires before a child is removed, return false to cancel the remove.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;tree&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;thisNode&quot;, typeof(Node)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;node&quot;, typeof(Node)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeremove&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before a child is removed, return false to cancel the remove." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Insert" Type="ComponentListener">
          <Summary><![CDATA[Fires when a new child node is inserted.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;tree&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;node&quot;, typeof(Node)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;newNode&quot;, typeof(Node)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;refNode&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;insert&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a new child node is inserted." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Move" Type="ComponentListener">
          <Summary><![CDATA[Fires when this node is moved to a new location in the tree]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;tree&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;node&quot;, typeof(Node)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;oldParent&quot;, typeof(Node)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;newParent&quot;, typeof(Node)" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;index&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;move&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when this node is moved to a new location in the tree" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Remove" Type="ComponentListener">
          <Summary><![CDATA[Fires when a child node is removed]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;tree&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;thisNode&quot;, typeof(Node)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;node&quot;, typeof(Node)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;remove&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a child node is removed" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="NodeLoadEventArgs" Extends="EventArgs">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="Notification" Extends="ScriptClass">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="NotificationAlignConfig" Extends="ExtObject">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="ElProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;el&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AnchorsProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;position&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="OffsetProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;offset&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="NotificationConfig" Extends="ExtObject">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="ID" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[ID of instance]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;id&quot;" />
            <Attribute Type="Category" RawValue="&quot;NotificationConfig Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="ID of instance" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Cls" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[An optional extra CSS class that will be added to this component's Element (defaults to ''). This can be useful for adding customized styles to the component or any of its children using standard CSS rules.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;NotificationConfig Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="An optional extra CSS class that will be added to this component's Element (defaults to ''). This can be useful for adding customized styles to the component or any of its children using standard CSS rules." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CtCls" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[An optional extra CSS class that will be added to this component's container. This can be useful for adding customized styles to the container or any of its children using standard CSS rules.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;NotificationConfig Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="An optional extra CSS class that will be added to this component's container. This can be useful for adding customized styles to the container or any of its children using standard CSS rules." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Title" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The title text to display in the window header]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;NotificationConfig Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The title text to display in the window header" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Html" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[An HTML fragment to use as the panel's body content.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;NotificationConfig Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="An HTML fragment to use as the panel's body content." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ContentEl" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The id of an existing HTML node to use as the panel's body content]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;NotificationConfig Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The id of an existing HTML node to use as the panel's body content" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Width" Type="Unit" DefaultValue="typeof(Unit), &quot;200&quot;">
          <Summary><![CDATA[The width of this notification in pixels (defaults to 200).]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;NotificationConfig Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="typeof(Unit), &quot;200&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The width of this notification in pixels (defaults to 200)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Height" Type="Unit" DefaultValue="typeof(Unit), &quot;100&quot;">
          <Summary><![CDATA[The height of this notification in pixels (defaults to 100).]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;NotificationConfig Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="typeof(Unit), &quot;100&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The height of this notification in pixels (defaults to 100)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AutoHide" Type="bool" DefaultValue="true">
          <Summary><![CDATA[False to stay visible after showing]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;NotificationConfig Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="False to stay visible after showing" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AutoScroll" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to show scrolling bar if required]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;NotificationConfig Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to show scrolling bar if required" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Closable" Type="bool" DefaultValue="true">
          <Summary><![CDATA[False to hide the button and disallow closing the window]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;NotificationConfig Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="False to hide the button and disallow closing the window" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Shadow" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to show a shadow]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;NotificationConfig Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to show a shadow" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Plain" Type="bool" DefaultValue="false">
          <Summary><![CDATA[False to add a lighter background color to visually highlight the body element and separate it more distinctly from the surrounding frame]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;NotificationConfig Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="False to add a lighter background color to visually highlight the body element and separate it more distinctly from the surrounding frame" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Resizable" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to allow user resizing at each edge and corner of the window, false to disable resizing ]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;NotificationConfig Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to allow user resizing at each edge and corner of the window, false to disable resizing " />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Draggable" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to allow the window to be dragged by the header bar]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;NotificationConfig Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to allow the window to be dragged by the header bar" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BodyStyle" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[Custom CSS styles to be applied to the body element]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;NotificationConfig Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Custom CSS styles to be applied to the body element" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AlignCfg" Type="NotificationAlignConfig" DefaultValue="null">
          <Summary><![CDATA[Align config object]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;alignToCfg&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;NotificationConfig Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Align config object" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ShowMode" Type="ShowMode" DefaultValue="ShowMode.Grid">
          <Summary><![CDATA[False to show a notification upon all other visible notofications]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;NotificationConfig Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="ShowMode.Grid" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="False to show a notification upon all other visible notofications" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CloseVisible" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to close all other visible notifications]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;NotificationConfig Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to close all other visible notifications" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Modal" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to make the window modal and mask everything behind it when displayed, false to display it without restricting access to other UI elements (defaults to false).]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to make the window modal and mask everything behind it when displayed, false to display it without restricting access to other UI elements (defaults to false)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="PinEventProxy" Access="Protected" Type="string" DefaultValue="&quot;none&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;pinEvent&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;none&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HideDelay" Type="int" DefaultValue="2500">
          <Summary><![CDATA[Hide delay in ms]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;NotificationConfig Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="2500" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Hide delay in ms" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CustomConfig" Type="ConfigItemCollection">
          <Summary><![CDATA[Collection of custom js config]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;-&quot;, typeof(CustomConfigJsonConverter)" />
            <Attribute Type="Description" RawValue="Collection of custom js config" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ShowFx" Type="Fx" DefaultValue="null">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;NotificationConfig Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HideFx" Type="Fx" DefaultValue="null">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;NotificationConfig Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IconClsProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;iconCls&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AutoLoadProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;autoLoad&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Listeners" Type="WindowListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Tools" Type="ToolsCollection">
          <Summary><![CDATA[An array of tool button configs to be added to the header tool area. When rendered, each tool is stored as an Element referenced by a public property called tools.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.AlwaysArray" />
            <Attribute Type="Category" RawValue="&quot;NotificationConfig Options&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="An array of tool button configs to be added to the header tool area. When rendered, each tool is stored as an Element referenced by a public property called tools." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ShowPin" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to show pin tool button.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to show pin tool button." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Pinned" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to to show window as pinned.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to to show window as pinned." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BringToFront" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to show window as pinned.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to show window as pinned." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="NumberColumn" Extends="Column">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="XType" Modifier="Override" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;xtype&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Format" Type="string" DefaultValue="&quot;0,000.00&quot;">
          <Summary><![CDATA[A formatting string as used by Ext.util.Format.number to format a numeric value for this Column (defaults to '0,000.00').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. NumberColumn&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;0,000.00&quot;" />
            <Attribute Type="Description" RawValue="A formatting string as used by Ext.util.Format.number to format a numeric value for this Column (defaults to '0,000.00')." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="NumberField" Extends="NumberFieldBase">
      <Summary><![CDATA[Numeric text field that provides automatic keystroke filtering and numeric validation.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" RawValue="Numeric text field that provides automatic keystroke filtering and numeric validation." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Listeners" Type="NumberFieldListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="NumberFieldDirectEvents">
          <Summary><![CDATA[Server-side Ajax Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Server-side Ajax Event Handlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="NumberFieldBase" Abstract="true" Extends="TextFieldBase">
      <Summary><![CDATA[Base class for Numeric field.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:NumberField runat=\&quot;server\&quot; /&gt;&quot;" />
        <Attribute Type="DefaultProperty" RawValue="&quot;Number&quot;" />
        <Attribute Type="DefaultEvent" RawValue="&quot;TextChanged&quot;" />
        <Attribute Type="ValidationProperty" RawValue="&quot;Number&quot;" />
        <Attribute Type="ControlValueProperty" RawValue="&quot;Number&quot;" />
        <Attribute Type="ParseChildren" RawValue="true" />
        <Attribute Type="PersistChildren" RawValue="false" />
        <Attribute Type="SupportsEventValidation" />
        <Attribute Type="Designer" RawValue="typeof(NumberFieldDesigner)" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(NumberField), &quot;Build.ToolboxIcons.NumberField.bmp&quot;" />
        <Attribute Type="Description" RawValue="Base class for Numeric field." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="EmptyValue" Modifier="Override" Type="object">
          <Summary><![CDATA[The fields null value.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="Description" RawValue="The fields null value." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="InputType" Modifier="Override" Type="InputType" DefaultValue="InputType.Text">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="Browsable" RawValue="false" />
            <Attribute Type="DefaultValue" RawValue="InputType.Text" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Hidden" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Text" Modifier="Override" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The Text value to initialize this field with.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;Appearance&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Bindable" RawValue="true, BindingDirection.TwoWay" />
            <Attribute Type="Description" RawValue="The Text value to initialize this field with." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Number" Type="double" DefaultValue="double.MinValue">
          <Summary><![CDATA[The Number (double) to initialize this field with.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;Appearance&quot;" />
            <Attribute Type="DefaultValue" RawValue="double.MinValue" />
            <Attribute Type="Bindable" RawValue="true, BindingDirection.TwoWay" />
            <Attribute Type="Description" RawValue="The Number (double) to initialize this field with." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AllowDecimals" Type="bool" DefaultValue="true">
          <Summary><![CDATA[False to disallow decimal values (defaults to true).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. NumberField&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="False to disallow decimal values (defaults to true)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TrimTrailedZeros" Type="bool" DefaultValue="true">
          <Summary><![CDATA[False to disallow trim trailed zeros.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. NumberField&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="False to disallow trim trailed zeros." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AllowNegative" Type="bool" DefaultValue="true">
          <Summary><![CDATA[False to prevent entering a negative sign (defaults to true).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. NumberField&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="False to prevent entering a negative sign (defaults to true)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BaseChars" Type="string" DefaultValue="&quot;0123456789&quot;">
          <Summary><![CDATA[The base set of characters to evaluate as valid numbers (defaults to '0123456789').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. NumberField&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;0123456789&quot;" />
            <Attribute Type="Description" RawValue="The base set of characters to evaluate as valid numbers (defaults to '0123456789')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DecimalPrecision" Type="int" DefaultValue="2">
          <Summary><![CDATA[The maximum precision to display after the decimal separator (defaults to 2).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. NumberField&quot;" />
            <Attribute Type="DefaultValue" RawValue="2" />
            <Attribute Type="Description" RawValue="The maximum precision to display after the decimal separator (defaults to 2)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DecimalSeparator" Type="string" DefaultValue="&quot;.&quot;">
          <Summary><![CDATA[Character(s) to allow as the decimal separator (defaults to '.').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;7. NumberField&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;.&quot;" />
            <Attribute Type="Description" RawValue="Character(s) to allow as the decimal separator (defaults to '.')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DecimalSeparatorProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;decimalSeparator&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MaxText" Type="string" DefaultValue="&quot;The maximum value for this field is {maxValue}&quot;">
          <Summary><![CDATA[Error text to display if the maximum value validation fails (defaults to 'The maximum value for this field is {maxValue}').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. NumberField&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;The maximum value for this field is {maxValue}&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Description" RawValue="Error text to display if the maximum value validation fails (defaults to 'The maximum value for this field is {maxValue}')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MaxValue" Type="Double" DefaultValue="Double.MaxValue">
          <Summary><![CDATA[The maximum allowed value (defaults to Double.MaxValue)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. NumberField&quot;" />
            <Attribute Type="DefaultValue" RawValue="Double.MaxValue" />
            <Attribute Type="Description" RawValue="The maximum allowed value (defaults to Double.MaxValue)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MinText" Type="string" DefaultValue="&quot;The minimum value for this field is {minValue}&quot;">
          <Summary><![CDATA[Error text to display if the minimum value validation fails (defaults to 'The minimum value for this field is {minValue}').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. NumberField&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;The minimum value for this field is {minValue}&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Description" RawValue="Error text to display if the minimum value validation fails (defaults to 'The minimum value for this field is {minValue}')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MinValue" Type="Double" DefaultValue="Double.MinValue">
          <Summary><![CDATA[The minimum allowed value (defaults to Double.MinValue)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. NumberField&quot;" />
            <Attribute Type="DefaultValue" RawValue="Double.MinValue" />
            <Attribute Type="Description" RawValue="The minimum allowed value (defaults to Double.MinValue)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="NanText" Type="string" DefaultValue="&quot;{value} is not a valid number&quot;">
          <Summary><![CDATA[Error text to display if the value is not a valid number. For example, this can happen if a valid character like '.' or '-' is left in the field with no number (defaults to '{value} is not a valid number').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. NumberField&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;{value} is not a valid number&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Description" RawValue="Error text to display if the value is not a valid number. For example, this can happen if a valid character like '.' or '-' is left in the field with no number (defaults to '{value} is not a valid number')." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="NumberFieldDirectEvents" Extends="TextFieldDirectEvents">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="NumberFieldListeners" Extends="TextFieldListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="NumericFilter" Extends="GridFilter">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Type" Modifier="Override" Type="FilterType">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="Category" RawValue="&quot;3. NumericFilter&quot;" />
            <Attribute Type="Browsable" RawValue="false" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Hidden" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EmptyText" Type="string" DefaultValue="&quot;Enter Filter Text...&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. NumericFilter&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;Enter Filter Text...&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ValueProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;value&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ObjectComparer">
      <Attributes />
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="ObjectHolder" Extends="Observable" Inherits="ICustomConfigSerialization">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Items" Type="JsonObject">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods>
        <Method Name="UpdateData">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" />
          </Attributes>
          <Parameters />
        </Method>
      </Methods>
    </Class>
    <Class Name="Observable" Abstract="true" Extends="XControl" Inherits="ILazyItems">
      <Summary><![CDATA[Abstract base class that provides a common interface for publishing events]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" RawValue="Abstract base class that provides a common interface for publishing events" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="CustomConfig" Type="ConfigItemCollection">
          <Summary><![CDATA[Collection of custom js config]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="ConfigOption" RawValue="&quot;-&quot;, typeof(CustomConfigJsonConverter)" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="Collection of custom js config" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="XTypeProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The registered xtype to create. This config option is not used when passing a config object into a constructor. This config option is used only when lazy instantiation is being used, and a child items of a Container is being specified not as a fully instantiated Component, but as a Component config object. The xtype will be looked up at render time up to determine what type of child Component to create.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;xtype&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="Description" RawValue="The registered xtype to create. This config option is not used when passing a config object into a constructor. This config option is used only when lazy instantiation is being used, and a child items of a Container is being specified not as a fully instantiated Component, but as a Component config object. The xtype will be looked up at render time up to determine what type of child Component to create." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods>
        <Method Name="AddEvents" ParamsRaw="string events">
          <Summary><![CDATA[Used to define events on this Observable]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Used to define events on this Observable" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="AddListener" ParamsRaw="string eventName, JFunction fn">
          <Summary><![CDATA[Appends an event handler to this component]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Appends an event handler to this component" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="AddListener" ParamsRaw="string eventName, JFunction fn, string scope">
          <Summary><![CDATA[Appends an event handler to this component]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Appends an event handler to this component" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="AddListener" ParamsRaw="string eventName, JFunction fn, string scope, HandlerConfig options">
          <Summary><![CDATA[Appends an event handler to this component]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Appends an event handler to this component" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="AddListener" ParamsRaw="string eventName, string fn">
          <Summary><![CDATA[Appends an event handler to this component]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Appends an event handler to this component" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="AddListener" ParamsRaw="string eventName, string fn, string scope">
          <Summary><![CDATA[Appends an event handler to this component]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Appends an event handler to this component" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="AddListener" ParamsRaw="string eventName, string fn, string scope, HandlerConfig options">
          <Summary><![CDATA[Appends an event handler to this component]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Appends an event handler to this component" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="FireEvent" ParamsRaw="string eventName, params object[] args">
          <Summary><![CDATA[Fires the specified event with the passed parameters (minus the event name)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Fires the specified event with the passed parameters (minus the event name)" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="On" ParamsRaw="string eventName, string fn">
          <Summary><![CDATA[Appends an event handler to this element (shorthand for addListener)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Appends an event handler to this element (shorthand for addListener)" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="On" ParamsRaw="string eventName, string fn, string scope">
          <Summary><![CDATA[Appends an event handler to this element (shorthand for addListener)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Appends an event handler to this element (shorthand for addListener)" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="On" ParamsRaw="string eventName, string fn, string scope, HandlerConfig options">
          <Summary><![CDATA[Appends an event handler to this element (shorthand for addListener)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Appends an event handler to this element (shorthand for addListener)" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="On" ParamsRaw="string eventName, JFunction fn">
          <Summary><![CDATA[Appends an event handler to this element (shorthand for addListener)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Appends an event handler to this element (shorthand for addListener)" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="On" ParamsRaw="string eventName, JFunction fn, string scope">
          <Summary><![CDATA[Appends an event handler to this element (shorthand for addListener)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Appends an event handler to this element (shorthand for addListener)" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="On" ParamsRaw="string eventName, JFunction fn, string scope, HandlerConfig options">
          <Summary><![CDATA[Appends an event handler to this element (shorthand for addListener)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Appends an event handler to this element (shorthand for addListener)" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="PurgeListeners">
          <Summary><![CDATA[Removes all listeners for this object]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Removes all listeners for this object" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="RemoveListener" ParamsRaw="string eventName, string fn">
          <Summary><![CDATA[Removes a listener]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Removes a listener" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="RemoveListener" ParamsRaw="string eventName, string fn, string scope">
          <Summary><![CDATA[Removes a listener]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Removes a listener" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="ResumeEvents">
          <Summary><![CDATA[Resume firing events. (see suspendEvents)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Resume firing events. (see suspendEvents)" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SuspendEvents" ParamsRaw="bool queueSuspended">
          <Summary><![CDATA[Suspend the firing of all events. (see resumeEvents)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Suspend the firing of all events. (see resumeEvents)" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Un" ParamsRaw="string eventName, string fn">
          <Summary><![CDATA[Removes a listener (shorthand for removeListener)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Removes a listener (shorthand for removeListener)" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Un" ParamsRaw="string eventName, string fn, string scope">
          <Summary><![CDATA[Removes a listener (shorthand for removeListener)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Removes a listener (shorthand for removeListener)" />
          </Attributes>
          <Parameters />
        </Method>
      </Methods>
    </Class>
    <Class Name="ObservableDirectEvent" Extends="BaseDirectEvent">
      <Attributes />
      <ConfigOptions>
        <ConfigOption Name="After" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[After handler with params: el, extraParams. Called immediately after DirectEvent has been requested.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="typeof(DirectEventHandlerJsonConverter)" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="After handler with params: el, extraParams. Called immediately after DirectEvent has been requested." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Before" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[Before handler with params: el, type, action, extraParams]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="typeof(DirectEventHandlerJsonConverter)" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Before handler with params: el, type, action, extraParams" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Success" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[Success handler with params: response, result, el, type, action, extraParams]]></Summary>
          <Attributes>
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="ConfigOption" RawValue="&quot;userSuccess&quot;, typeof(DirectEventHandlerJsonConverter)" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Success handler with params: response, result, el, type, action, extraParams" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Failure" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[Failure handler with params: response, result, control, type, action, extraParams]]></Summary>
          <Attributes>
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="ConfigOption" RawValue="&quot;userFailure&quot;, typeof(DirectEventHandlerJsonConverter)" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Failure handler with params: response, result, control, type, action, extraParams" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Complete" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[Failure handler with params: success, response, result, control, type, action, extraParams]]></Summary>
          <Attributes>
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="ConfigOption" RawValue="&quot;userComplete&quot;, typeof(DirectEventHandlerJsonConverter)" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Failure handler with params: success, response, result, control, type, action, extraParams" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="Paddings" Extends="StateManagedItem" Inherits="IEquatable&lt;Paddings&gt;">
      <Attributes>
        <Attribute Type="Serializable" />
        <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="PageProxy" Extends="DataProxy">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Total" Type="int" DefaultValue="0">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="0" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="PageTreeLoader" Extends="TreeLoader">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="IsUpload" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True if the form object is a file upload]]></Summary>
          <Attributes>
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True if the form object is a file upload" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ViewStateMode" Type="ViewStateMode" DefaultValue="ViewStateMode.Inherit">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="DefaultValue" RawValue="ViewStateMode.Inherit" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Type" Type="DirectEventType" DefaultValue="DirectEventType.Submit">
          <Summary><![CDATA[The type of DirectEvent to perform. The 'Submit' type will submit the &lt;form> and 'Load' will make a POST request to url set in the .Url property, or the current url if the .Url property has not been set.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="DefaultValue" RawValue="DirectEventType.Submit" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The type of DirectEvent to perform. The 'Submit' type will submit the &amp;lt;form&gt; and 'Load' will make a POST request to url set in the .Url property, or the current url if the .Url property has not been set." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RequestMethod" Modifier="Override" Type="HttpMethod" DefaultValue="HttpMethod.Default">
          <Summary><![CDATA[The HTTP request method for loading data.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Ignore" />
            <Attribute Type="Category" RawValue="&quot;3. PageTreeLoader&quot;" />
            <Attribute Type="DefaultValue" RawValue="HttpMethod.Default" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The HTTP request method for loading data." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MethodProxy" Access="Protected" Type="HttpMethod" DefaultValue="HttpMethod.Default">
          <Attributes>
            <Attribute Type="DefaultValue" RawValue="HttpMethod.Default" />
            <Attribute Type="ConfigOption" RawValue="&quot;method&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="FormProxyArg" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Hidden" />
            <Attribute Type="Browsable" RawValue="false" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EventMask" Type="EventMask">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Object" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="Paging&lt;T&gt;">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="PagingToolbar" Extends="ToolbarBase" Inherits="IXPostBackDataHandler">
      <Summary><![CDATA[A specialized toolbar that is bound to a Ext.data.Store and provides automatic paging controls.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(PagingToolbar), &quot;Build.ToolboxIcons.PagingToolbar.bmp&quot;" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:PagingToolbar runat=\&quot;server\&quot;&gt;&lt;/{0}:PagingToolbar&gt;&quot;" />
        <Attribute Type="Description" RawValue="A specialized toolbar that is bound to a Ext.data.Store and provides automatic paging controls." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="PageIndex" Type="int" DefaultValue="1">
          <Summary><![CDATA[The index of current page.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. PagingToolbar&quot;" />
            <Attribute Type="DefaultValue" RawValue="1" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetPageIndex&quot;" />
            <Attribute Type="Description" RawValue="The index of current page." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DisplayInfo" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to display the displayMsg (defaults to false).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. PagingToolbar&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to display the displayMsg (defaults to false)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DisplayMsg" Type="string" DefaultValue="&quot;Displaying {0} - {1} of {2}&quot;">
          <Summary><![CDATA[The paging status message to display (defaults to 'Displaying {0} - {1} of {2}'). Note that this string is formatted using the braced numbers 0-2 as tokens that are replaced by the values for start, end and total respectively. These tokens should be preserved when overriding this string if showing those values is desired.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. PagingToolbar&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;Displaying {0} - {1} of {2}&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Description" RawValue="The paging status message to display (defaults to 'Displaying {0} - {1} of {2}'). Note that this string is formatted using the braced numbers 0-2 as tokens that are replaced by the values for start, end and total respectively. These tokens should be preserved when overriding this string if showing those values is desired." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EmptyMsg" Type="string" DefaultValue="&quot;No data to display&quot;">
          <Summary><![CDATA[The message to display when no records are found (defaults to 'No data to display').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. PagingToolbar&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;No data to display&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Description" RawValue="The message to display when no records are found (defaults to 'No data to display')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="PageSize" Type="int" DefaultValue="20">
          <Summary><![CDATA[The number of records to display per page (defaults to 20).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. PagingToolbar&quot;" />
            <Attribute Type="DefaultValue" RawValue="20" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetPageSize&quot;" />
            <Attribute Type="Description" RawValue="The number of records to display per page (defaults to 20)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="StoreID" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The data store to use.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;store&quot;, JsonMode.ToClientID" />
            <Attribute Type="Category" RawValue="&quot;7. PagingToolbar&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="IDReferenceProperty" RawValue="typeof(Store)" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The data store to use." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AfterPageText" Type="string" DefaultValue="&quot;of {0}&quot;">
          <Summary><![CDATA[Customizable piece of the default paging text (defaults to 'of {0}'). Note that this string is formatted using {0} as a token that is replaced by the number of total pages. This token should be preserved when overriding this string if showing the total page count is desired.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. PagingToolbar&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;of {0}&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Description" RawValue="Customizable piece of the default paging text (defaults to 'of {0}'). Note that this string is formatted using {0} as a token that is replaced by the number of total pages. This token should be preserved when overriding this string if showing the total page count is desired." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforePageText" Type="string" DefaultValue="&quot;Page&quot;">
          <Summary><![CDATA[Customizable piece of the default paging text (defaults to 'Page')]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. PagingToolbar&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;Page&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Description" RawValue="Customizable piece of the default paging text (defaults to 'Page')" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="FirstText" Type="string" DefaultValue="&quot;First Page&quot;">
          <Summary><![CDATA[Customizable piece of the default paging text (defaults to 'First Page')]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. PagingToolbar&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;First Page&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Description" RawValue="Customizable piece of the default paging text (defaults to 'First Page')" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="LastText" Type="string" DefaultValue="&quot;Last Page&quot;">
          <Summary><![CDATA[Customizable piece of the default paging text (defaults to 'Last Page')]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. PagingToolbar&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;Last Page&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Description" RawValue="Customizable piece of the default paging text (defaults to 'Last Page')" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="NextText" Type="string" DefaultValue="&quot;Next Page&quot;">
          <Summary><![CDATA[Customizable piece of the default paging text (defaults to 'Next Page')]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. PagingToolbar&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;Next Page&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Description" RawValue="Customizable piece of the default paging text (defaults to 'Next Page')" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="PrevText" Type="string" DefaultValue="&quot;Previous Page&quot;">
          <Summary><![CDATA[Customizable piece of the default paging text (defaults to 'Previous Page')]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. PagingToolbar&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;Previous Page&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Description" RawValue="Customizable piece of the default paging text (defaults to 'Previous Page')" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RefreshText" Type="string" DefaultValue="&quot;Refresh&quot;">
          <Summary><![CDATA[Customizable piece of the default paging text (defaults to 'Refresh')]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. PagingToolbar&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;Refresh&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Description" RawValue="Customizable piece of the default paging text (defaults to 'Refresh')" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HideRefresh" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Hide refresh button]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. PagingToolbar&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetHideRefresh&quot;" />
            <Attribute Type="Description" RawValue="Hide refresh button" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ParamNames" Type="ParameterCollection">
          <Summary><![CDATA[Object mapping of parameter names for load calls (defaults to {start: 'start', limit: 'limit'})]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ArrayToObject" />
            <Attribute Type="Category" RawValue="&quot;7. PagingToolbar&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="Object mapping of parameter names for load calls (defaults to {start: 'start', limit: 'limit'})" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Listeners" Type="PagingToolbarListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="PagingToolbarDirectEvents">
          <Summary><![CDATA[Server-side DirectEventHandlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Server-side DirectEventHandlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods>
        <Method Name="SetPageIndex" ParamsRaw="int index">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SetPageSize" ParamsRaw="int size">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" />
          </Attributes>
          <Parameters />
        </Method>
      </Methods>
    </Class>
    <Class Name="PagingToolbarDirectEvents" Extends="BoxComponentDirectEvents">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Change" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after page changing]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Button), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;data&quot;, typeof(object), &quot;{total, activePage, pages}&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;change&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after page changing" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeChange" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before page changing]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Button), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;o&quot;, typeof(object), &quot;{start, limit}&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforechange&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before page changing" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="PagingToolbarListeners" Extends="BoxComponentListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Change" Type="ComponentListener">
          <Summary><![CDATA[Fires after page changing]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Button), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;data&quot;, typeof(object), &quot;{total, activePage, pages}&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;change&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after page changing" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeChange" Type="ComponentListener">
          <Summary><![CDATA[Fires before page changing]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Button), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;o&quot;, typeof(object), &quot;{start, limit}&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforechange&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before page changing" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="Panel" Extends="PanelBase">
      <Summary><![CDATA[Panel is a container that has specific functionality and structural components that make it the perfect building block for application-oriented user interfaces.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:Panel runat=\&quot;server\&quot; Title=\&quot;Title\&quot; Height=\&quot;300\&quot;&gt;&lt;Items&gt;&lt;/Items&gt;&lt;/{0}:Panel&gt;&quot;" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(Panel), &quot;Build.ToolboxIcons.Panel.bmp&quot;" />
        <Attribute Type="Designer" RawValue="typeof(PanelDesigner)" />
        <Attribute Type="Description" RawValue="Panel is a container that has specific functionality and structural components that make it the perfect building block for application-oriented user interfaces." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Listeners" Type="PanelListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="PanelDirectEvents">
          <Summary><![CDATA[Server-side Ajax Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Server-side Ajax Event Handlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="PanelBase" Abstract="true" Extends="ContainerBase" Inherits="IIcon,IXPostBackDataHandler">
      <Summary><![CDATA[Base abstract Panel class.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" RawValue="Base abstract Panel class." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="RenderToProxy" Modifier="Override" Access="ProtectedInternal" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;renderTo&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AnimCollapse" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to animate the transition when the panel is collapsed, false to skip the animation (defaults to true if the Ext.Fx class is available, otherwise false).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. Panel&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to animate the transition when the panel is collapsed, false to skip the animation (defaults to true if the Ext.Fx class is available, otherwise false)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AutoLoad" Type="LoadConfig">
          <Summary><![CDATA[A valid url spec according to the UpdateOptions Ext.UpdateOptions.update method. If autoLoad is not null, the panel will attempt to load its contents immediately upon render. The URL will become the default URL for this panel's body element, so it may be refreshed at any time.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;LoadContent&quot;" />
            <Attribute Type="Category" RawValue="&quot;6. Panel&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="A valid url spec according to the UpdateOptions Ext.UpdateOptions.update method. If autoLoad is not null, the panel will attempt to load its contents immediately upon render. The URL will become the default URL for this panel's body element, so it may be refreshed at any time." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AutoLoadProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;autoLoad&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BaseCls" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The base CSS class to apply to this panel's element (defaults to 'x-panel').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. Panel&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The base CSS class to apply to this panel's element (defaults to 'x-panel')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BottomBar" Type="ToolbarCollection">
          <Summary><![CDATA[The bottom toolbar of the panel. This can be a Ext.Toolbar object, a toolbar config, or an array of buttons/button configs to be added to the toolbar.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;bbar&quot;, typeof(ItemCollectionJsonConverter)" />
            <Attribute Type="Category" RawValue="&quot;6. Panel&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="The bottom toolbar of the panel. This can be a Ext.Toolbar object, a toolbar config, or an array of buttons/button configs to be added to the toolbar." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Closable" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Panels themselves do not directly support being closed, but some Panel subclasses do (like Ext.Window) or a Panel Class within an Ext.TabPanel. Specify true to enable closing in such situations. Defaults to false.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. Panel&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Panels themselves do not directly support being closed, but some Panel subclasses do (like Ext.Window) or a Panel Class within an Ext.TabPanel. Specify true to enable closing in such situations. Defaults to false." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CloseAction" Type="CloseAction" DefaultValue="CloseAction.Close">
          <Summary><![CDATA[The action to take when the Panel is closed. The default action is 'close' which will actually remove the Panel from the DOM and destroy it. The other valid option is 'hide' which will simply hide the Panel by setting visibility to hidden and applying negative offsets, keeping the Panel available to be redisplayed via the show method.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="Category" RawValue="&quot;6. Panel&quot;" />
            <Attribute Type="DefaultValue" RawValue="CloseAction.Close" />
            <Attribute Type="Description" RawValue="The action to take when the Panel is closed. The default action is 'close' which will actually remove the Panel from the DOM and destroy it. The other valid option is 'hide' which will simply hide the Panel by setting visibility to hidden and applying negative offsets, keeping the Panel available to be redisplayed via the show method." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TopBar" Type="ToolbarCollection">
          <Summary><![CDATA[The top toolbar of the panel. This can be a Ext.Toolbar object, a toolbar config, or an array of buttons/button configs to be added to the toolbar.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;tbar&quot;, typeof(ItemCollectionJsonConverter)" />
            <Attribute Type="Category" RawValue="&quot;6. Panel&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="The top toolbar of the panel. This can be a Ext.Toolbar object, a toolbar config, or an array of buttons/button configs to be added to the toolbar." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="FooterBar" Type="ToolbarCollection">
          <Summary><![CDATA[A Toolbar object, a Toolbar config, or an array of Buttons/Button configs, describing a Toolbar to be rendered into this Panel's footer element.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;fbar&quot;, typeof(ItemCollectionJsonConverter)" />
            <Attribute Type="Category" RawValue="&quot;6. Panel&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="A Toolbar object, a Toolbar config, or an array of Buttons/Button configs, describing a Toolbar to be rendered into this Panel's footer element." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="FormGroup" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to animate the transition when the panel is collapsed, false to skip the animation (defaults to true if the Ext.Fx class is available, otherwise false).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;6. Panel&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to animate the transition when the panel is collapsed, false to skip the animation (defaults to true if the Ext.Fx class is available, otherwise false)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BodyBorder" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to display an interior border on the body element of the panel, false to hide it (defaults to true). This only applies when border == true. If border == true and bodyBorder == false, the border will display as a 1px wide inset border, giving the entire body element an inset appearance.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. Panel&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to display an interior border on the body element of the panel, false to hide it (defaults to true). This only applies when border == true. If border == true and bodyBorder == false, the border will display as a 1px wide inset border, giving the entire body element an inset appearance." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BodyCssClass" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[Additional css class selector to be applied to the body element]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;AddBodyCssClass&quot;" />
            <Attribute Type="Category" RawValue="&quot;6. Panel&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Additional css class selector to be applied to the body element" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BodyStyle" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[Custom CSS styles to be applied to the body element in the format expected by Ext.Element.applyStyles (defaults to null).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;ApplyBodyStyles&quot;" />
            <Attribute Type="Category" RawValue="&quot;6. Panel&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Custom CSS styles to be applied to the body element in the format expected by Ext.Element.applyStyles (defaults to null)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Border" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to display the borders of the panel's body element, false to hide them (defaults to true). By default, the border is a 2px wide inset border, but this can be further altered by setting bodyBorder to false.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;6. Panel&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to display the borders of the panel's body element, false to hide them (defaults to true). By default, the border is a 2px wide inset border, but this can be further altered by setting bodyBorder to false." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BorderProxy" Access="Protected" Type="bool" DefaultValue="true">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;border&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ButtonAlign" Type="Alignment" DefaultValue="Alignment.Right">
          <Summary><![CDATA[Valid values are \"left\", \"center\" and \"right\" (defaults to \"right\").]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="Category" RawValue="&quot;6. Panel&quot;" />
            <Attribute Type="DefaultValue" RawValue="Alignment.Right" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Valid values are \&quot;left\&quot;, \&quot;center\&quot; and \&quot;right\&quot; (defaults to \&quot;right\&quot;)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Buttons" Type="ItemsCollection&lt;ButtonBase&gt;">
          <Summary><![CDATA[A collection of buttons configs used to add buttons to the footer of this panel.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;buttons&quot;, typeof(ItemCollectionJsonConverter)" />
            <Attribute Type="Category" RawValue="&quot;6. Panel&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="A collection of buttons configs used to add buttons to the footer of this panel." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CollapseFirst" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to make sure the collapse/expand toggle button always renders first (to the left of) any other tools in the panel's title bar, false to render it last (defaults to true).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. Panel&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to make sure the collapse/expand toggle button always renders first (to the left of) any other tools in the panel's title bar, false to render it last (defaults to true)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Collapsed" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to render the panel collapsed, false to render it expanded (defaults to false).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;CollapsedProxy&quot;" />
            <Attribute Type="Category" RawValue="&quot;6. Panel&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to render the panel collapsed, false to render it expanded (defaults to false)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CollapsedCls" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A CSS class to add to the panel's element after it has been collapsed (defaults to 'x-panel-collapsed').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. Panel&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="A CSS class to add to the panel's element after it has been collapsed (defaults to 'x-panel-collapsed')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Collapsible" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to make the panel collapsible and have the expand/collapse toggle button automatically rendered into the header tool button area, false to keep the panel statically sized with no button (defaults to false).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. Panel&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to make the panel collapsible and have the expand/collapse toggle button automatically rendered into the header tool button area, false to keep the panel statically sized with no button (defaults to false)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Draggable" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to enable dragging of this Panel (defaults to false).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. Panel&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to enable dragging of this Panel (defaults to false)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DraggableConfigProxy" Access="ProtectedInternal" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;draggable&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Elements" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A comma-delimited list of panel elements to initialize when the panel is rendered.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. Panel&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="A comma-delimited list of panel elements to initialize when the panel is rendered." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Floating" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to float the panel (absolute position it with automatic shimming and shadow), false to display it inline where it is rendered (defaults to false).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. Panel&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to float the panel (absolute position it with automatic shimming and shadow), false to display it inline where it is rendered (defaults to false)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Footer" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to create the footer element explicitly, false to skip creating it. By default, when footer is not specified, if one or more buttons have been added to the panel the footer will be created automatically, otherwise it will not.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. Panel&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to create the footer element explicitly, false to skip creating it. By default, when footer is not specified, if one or more buttons have been added to the panel the footer will be created automatically, otherwise it will not." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Frame" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to render the panel with custom rounded borders, false to render with plain 1px square borders (defaults to false).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. Panel&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to render the panel with custom rounded borders, false to render with plain 1px square borders (defaults to false)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Header" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to create the header element explicitly, false to skip creating it. By default, when header is not specified, if a title is set the header will be created automatically, otherwise it will not. If a title is set but header is explicitly set to false, the header will not be rendered.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. Panel&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to create the header element explicitly, false to skip creating it. By default, when header is not specified, if a title is set the header will be created automatically, otherwise it will not. If a title is set but header is explicitly set to false, the header will not be rendered." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HeaderAsText" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to display the panel title in the header, false to hide it (defaults to true).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. Panel&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to display the panel title in the header, false to hide it (defaults to true)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HideCollapseTool" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to hide the expand/collapse toggle button when collapsible = true, false to display it (defaults to false).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. Panel&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to hide the expand/collapse toggle button when collapsible = true, false to display it (defaults to false)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Icon" Type="Icon" DefaultValue="Icon.None">
          <Summary><![CDATA[The icon to use in the Title bar. See also, IconCls to set an icon with a custom Css class.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;6. Panel&quot;" />
            <Attribute Type="DefaultValue" RawValue="Icon.None" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetIconClass&quot;" />
            <Attribute Type="Description" RawValue="The icon to use in the Title bar. See also, IconCls to set an icon with a custom Css class." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IconClsProxy" Access="ProtectedInternal" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;iconCls&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IconCls" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A CSS class that will provide a background image to be used as the panel header icon (defaults to '').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetIconClass&quot;" />
            <Attribute Type="Category" RawValue="&quot;6. Panel&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="A CSS class that will provide a background image to be used as the panel header icon (defaults to '')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="KeyMap" Type="KeyBindingCollection">
          <Summary><![CDATA[A KeyMap config object (in the format expected by Ext.KeyMap.addBinding used to assign custom key handling to this panel (defaults to null).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;keys&quot;, JsonMode.Array" />
            <Attribute Type="Category" RawValue="&quot;6. Panel&quot;" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="A KeyMap config object (in the format expected by Ext.KeyMap.addBinding used to assign custom key handling to this panel (defaults to null)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MaskDisabled" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to mask the panel when it is disabled, false to not mask it (defaults to true). Either way, the panel will always tell its contained elements to disable themselves when it is disabled, but masking the panel can provide an additional visual cue that the panel is disabled.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. Panel&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to mask the panel when it is disabled, false to not mask it (defaults to true). Either way, the panel will always tell its contained elements to disable themselves when it is disabled, but masking the panel can provide an additional visual cue that the panel is disabled." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MinButtonWidth" Type="Unit" DefaultValue="typeof(Unit), &quot;75&quot;">
          <Summary><![CDATA[Minimum width in pixels of all buttons in this panel (defaults to 75).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. Panel&quot;" />
            <Attribute Type="DefaultValue" RawValue="typeof(Unit), &quot;75&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Minimum width in pixels of all buttons in this panel (defaults to 75)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Shadow" Type="ShadowMode" DefaultValue="ShadowMode.Sides">
          <Summary><![CDATA[ShadowMode to display a shadow behind the panel. Note that this option only applies when floating = true.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="typeof(ShadowJsonConverter)" />
            <Attribute Type="Category" RawValue="&quot;6. Panel&quot;" />
            <Attribute Type="DefaultValue" RawValue="ShadowMode.Sides" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="ShadowMode to display a shadow behind the panel. Note that this option only applies when floating = true." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ShadowOffset" Type="int" DefaultValue="4">
          <Summary><![CDATA[The number of pixels to offset the shadow if displayed (defaults to 4). Note that this option only applies when floating = true.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. Panel&quot;" />
            <Attribute Type="DefaultValue" RawValue="4" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The number of pixels to offset the shadow if displayed (defaults to 4). Note that this option only applies when floating = true." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Shim" Type="bool" DefaultValue="true">
          <Summary><![CDATA[False to disable the iframe shim in browsers which need one (defaults to true). Note that this option only applies when floating = true.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. Panel&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="False to disable the iframe shim in browsers which need one (defaults to true). Note that this option only applies when floating = true." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Padding" Type="int" DefaultValue="0">
          <Summary><![CDATA[A shortcut for setting a padding style on the body element. The value can either be a number to be applied to all sides, or a normal css string describing padding. See also, PaddingSummary.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. Panel&quot;" />
            <Attribute Type="DefaultValue" RawValue="0" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="A shortcut for setting a padding style on the body element. The value can either be a number to be applied to all sides, or a normal css string describing padding. See also, PaddingSummary." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="PaddingSummary" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A shortcut for setting a padding style on the body element. The value can either be a number to be applied to all sides, or a normal css string describing padding. See also, Padding.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;padding&quot;" />
            <Attribute Type="Category" RawValue="&quot;6. Panel&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="A shortcut for setting a padding style on the body element. The value can either be a number to be applied to all sides, or a normal css string describing padding. See also, Padding." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="LoadMask" Type="LoadMask">
          <Summary><![CDATA[An Ext.LoadMask to mask the Panel while loading (defaults to false).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;6. Panel&quot;" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="An Ext.LoadMask to mask the Panel while loading (defaults to false)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Title" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The title text to display in the panel header (defaults to ''). When a title is specified the header element will automatically be created and displayed unless header is explicitly set to false. If you don't want to specify a title at config time, but you may want one later, you must either specify a non-empty title (a blank space ' ' will do) or header:true so that the content Container element will get created.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetTitle&quot;" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. Panel&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The title text to display in the panel header (defaults to ''). When a title is specified the header element will automatically be created and displayed unless header is explicitly set to false. If you don't want to specify a title at config time, but you may want one later, you must either specify a non-empty title (a blank space ' ' will do) or header:true so that the content Container element will get created." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TitleCollapse" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to allow expanding and collapsing the panel (when collapsible = true) by clicking anywhere in the header bar, false to allow it only by clicking to tool button (defaults to false).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. Panel&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to allow expanding and collapsing the panel (when collapsible = true) by clicking anywhere in the header bar, false to allow it only by clicking to tool button (defaults to false)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Tools" Type="ToolsCollection">
          <Summary><![CDATA[An array of tool button configs to be added to the header tool area. When rendered, each tool is stored as an Element referenced by a public property called tools.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.AlwaysArray" />
            <Attribute Type="Category" RawValue="&quot;6. Panel&quot;" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="An array of tool button configs to be added to the header tool area. When rendered, each tool is stored as an Element referenced by a public property called tools." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Unstyled" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Overrides the baseCls setting to baseCls = 'x-plain' which renders the panel unstyled except for required attributes for Ext layouts to function (e.g. overflow:hidden).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. Panel&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Overrides the baseCls setting to baseCls = 'x-plain' which renders the panel unstyled except for required attributes for Ext layouts to function (e.g. overflow:hidden)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="PreventBodyReset" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Defaults to false. When set to true, an extra css class 'x-panel-normal' will be added to the panel's element, effectively applying css styles suggested by the W3C (see http://www.w3.org/TR/CSS21/sample.html) to the Panel's body element (not the header, footer, etc.).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. Panel&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Defaults to false. When set to true, an extra css class 'x-panel-normal' will be added to the panel's element, effectively applying css styles suggested by the W3C (see http://www.w3.org/TR/CSS21/sample.html) to the Panel's body element (not the header, footer, etc.)." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods>
        <Method Name="ApplyBodyStyles" ParamsRaw="string style">
          <Summary><![CDATA[Apply css styles for body]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Apply css styles for body" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="AddBodyCssClass" ParamsRaw="string cssClass">
          <Summary><![CDATA[Add new css class for body]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Add new css class for body" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="RemoveBodyCssClass" ParamsRaw="string cssClass">
          <Summary><![CDATA[Remove body's css class]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Remove body's css class" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Collapse">
          <Summary><![CDATA[Collapses the panel body so that it becomes hidden. Fires the beforecollapse event which will cancel the collapse action if it returns false.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Collapses the panel body so that it becomes hidden. Fires the beforecollapse event which will cancel the collapse action if it returns false." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Collapse" ParamsRaw="bool animate">
          <Summary><![CDATA[Collapses the panel body so that it becomes hidden. Fires the beforecollapse event which will cancel the collapse action if it returns false.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Collapses the panel body so that it becomes hidden. Fires the beforecollapse event which will cancel the collapse action if it returns false." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Expand">
          <Summary><![CDATA[Expands the panel body so that it becomes visible. Fires the beforeexpand event which will cancel the expand action if it returns false.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Expands the panel body so that it becomes visible. Fires the beforeexpand event which will cancel the expand action if it returns false." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Expand" ParamsRaw="bool animate">
          <Summary><![CDATA[Expands the panel body so that it becomes visible. Fires the beforeexpand event which will cancel the expand action if it returns false.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Expands the panel body so that it becomes visible. Fires the beforeexpand event which will cancel the expand action if it returns false." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="ClearContent">
          <Summary><![CDATA[Clear loaded content.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Clear loaded content." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="LoadContent">
          <Summary><![CDATA[Loads this content panel immediately with content returned from an XHR call.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Loads this content panel immediately with content returned from an XHR call." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="LoadContent" ParamsRaw="string url">
          <Summary><![CDATA[Loads this content panel immediately with content returned from an XHR call.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Loads this content panel immediately with content returned from an XHR call." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="LoadContent" ParamsRaw="string url, bool noCache">
          <Summary><![CDATA[Loads this content panel immediately with content returned from an XHR call.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Loads this content panel immediately with content returned from an XHR call." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="LoadContent" ParamsRaw="LoadConfig config">
          <Summary><![CDATA[Loads this content panel immediately with content returned from an XHR call.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Loads this content panel immediately with content returned from an XHR call." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="LoadContent" ParamsRaw="JFunction fn">
          <Summary><![CDATA[Loads this content panel immediately with content returned from an XHR call.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Loads this content panel immediately with content returned from an XHR call." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Reload">
          <Summary><![CDATA[Reloads the content panel based on the current LoadConfig.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Reloads the content panel based on the current LoadConfig." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SetTitle" ParamsRaw="string title">
          <Summary><![CDATA[Sets the title text for the panel and optionally the icon class.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Sets the title text for the panel and optionally the icon class." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SetTitle" ParamsRaw="string title, string cls">
          <Summary><![CDATA[Sets the title text for the panel and optionally the icon class.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Sets the title text for the panel and optionally the icon class." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="ToggleCollapse">
          <Summary><![CDATA[Shortcut for performing an expand or collapse based on the current state of the panel.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Shortcut for performing an expand or collapse based on the current state of the panel." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="ToggleCollapse" ParamsRaw="bool animate">
          <Summary><![CDATA[Shortcut for performing an expand or collapse based on the current state of the panel.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Shortcut for performing an expand or collapse based on the current state of the panel." />
          </Attributes>
          <Parameters />
        </Method>
      </Methods>
    </Class>
    <Class Name="PanelDirectEvents" Extends="ContainerDirectEvents">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Activate" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after the Panel has been visually activated. Note that Panels do not directly support being activated, but some Panel subclasses do (like Ext.Window). Panels which are child Components of a TabPanel fire the activate and deactivate events under the control of the TabPanel.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Panel), &quot;The Panel that has been activated.&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;activate&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the Panel has been visually activated. Note that Panels do not directly support being activated, but some Panel subclasses do (like Ext.Window). Panels which are child Components of a TabPanel fire the activate and deactivate events under the control of the TabPanel." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeClose" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before the Panel is closed. Note that Panels do not directly support being closed, but some Panel subclasses do (like Ext.Window). This event only applies to such subclasses. A handler can return false to cancel the close.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Panel), &quot;The Panel being closed.&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeclose&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the Panel is closed. Note that Panels do not directly support being closed, but some Panel subclasses do (like Ext.Window). This event only applies to such subclasses. A handler can return false to cancel the close." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeCollapse" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before the Panel is collapsed. A handler can return false to cancel the collapse.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Panel), &quot;the Panel being collapsed.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;animate&quot;, typeof(bool), &quot;True if the collapse is animated, else false.&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforecollapse&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the Panel is collapsed. A handler can return false to cancel the collapse." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeExpand" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before the Panel is expanded. A handler can return false to cancel the expand.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Panel), &quot;The Panel that has been activated.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;animate&quot;, typeof(bool), &quot;True if the expand is animated, else false.&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeexpand&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the Panel is expanded. A handler can return false to cancel the expand." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BodyResize" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after the Panel has been resized.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Panel), &quot;The Panel which has been resized.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;width&quot;, typeof(int), &quot;The Panel's new width.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;height&quot;, typeof(int), &quot;The Panel's new height.&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;bodyresize&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the Panel has been resized." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Close" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after the Panel is closed. Note that Panels do not directly support being closed, but some Panel subclasses do (like Ext.Window).]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Panel), &quot;The Panel that has been closed.&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;close&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the Panel is closed. Note that Panels do not directly support being closed, but some Panel subclasses do (like Ext.Window)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Collapse" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after the Panel has been collapsed.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Panel), &quot;The Panel that has been collapsed.&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;collapse&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the Panel has been collapsed." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Deactivate" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after the Panel has been visually deactivated. Note that Panels do not directly support being deactivated, but some Panel subclasses do (like Ext.Window). Panels which are child Components of a TabPanel fire the activate and deactivate events under the control of the TabPanel.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Panel), &quot;The Panel that has been deactivated.&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;deactivate&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the Panel has been visually deactivated. Note that Panels do not directly support being deactivated, but some Panel subclasses do (like Ext.Window). Panels which are child Components of a TabPanel fire the activate and deactivate events under the control of the TabPanel." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Expand" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after the Panel has been expanded.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Panel), &quot;The Panel that has been expanded.&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;expand&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the Panel has been expanded." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TitleChange" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after the Panel title has been set or changed.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Panel), &quot;The Panel which has had its title changed.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;title&quot;, typeof(string), &quot;new title.&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;titlechange&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the Panel title has been set or changed." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeUpdate" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before iframe loading.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Panel), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;url&quot;, typeof(string), &quot;url&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;iframe&quot;, typeof(object), &quot;iframe&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeupdate&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before iframe loading." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Update" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fired after successful update is made.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Panel), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;iframe&quot;, typeof(object), &quot;iframe&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;url&quot;, typeof(string), &quot;url&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;update&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fired after successful update is made." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Failure" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fired on update failure.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Panel), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;iframe&quot;, typeof(object), &quot;iframe&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;url&quot;, typeof(string), &quot;url&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;failure&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fired on update failure." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IconChange" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after the Panel icon class has been set or changed.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Panel), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;newCls&quot;, typeof(string)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;oldCls&quot;, typeof(string)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;iconchange&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the Panel icon class has been set or changed." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="PanelListeners" Extends="ContainerListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Activate" Type="ComponentListener">
          <Summary><![CDATA[Fires after the Panel has been visually activated. Note that Panels do not directly support being activated, but some Panel subclasses do (like Ext.Window). Panels which are child Components of a TabPanel fire the activate and deactivate events under the control of the TabPanel.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Panel), &quot;The Panel that has been activated.&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;activate&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the Panel has been visually activated. Note that Panels do not directly support being activated, but some Panel subclasses do (like Ext.Window). Panels which are child Components of a TabPanel fire the activate and deactivate events under the control of the TabPanel." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeClose" Type="ComponentListener">
          <Summary><![CDATA[Fires before the Panel is closed. Note that Panels do not directly support being closed, but some Panel subclasses do (like Ext.Window). This event only applies to such subclasses. A handler can return false to cancel the close.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Panel), &quot;The Panel being closed.&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeclose&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the Panel is closed. Note that Panels do not directly support being closed, but some Panel subclasses do (like Ext.Window). This event only applies to such subclasses. A handler can return false to cancel the close." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeCollapse" Type="ComponentListener">
          <Summary><![CDATA[Fires before the Panel is collapsed. A handler can return false to cancel the collapse.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Panel), &quot;the Panel being collapsed.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;animate&quot;, typeof(bool), &quot;True if the collapse is animated, else false.&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforecollapse&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the Panel is collapsed. A handler can return false to cancel the collapse." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeExpand" Type="ComponentListener">
          <Summary><![CDATA[Fires before the Panel is expanded. A handler can return false to cancel the expand.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Panel), &quot;The Panel that has been activated.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;animate&quot;, typeof(bool), &quot;True if the expand is animated, else false.&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeexpand&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the Panel is expanded. A handler can return false to cancel the expand." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BodyResize" Type="ComponentListener">
          <Summary><![CDATA[Fires after the Panel has been resized.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Panel), &quot;The Panel which has been resized.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;width&quot;, typeof(int), &quot;The Panel's new width.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;height&quot;, typeof(int), &quot;The Panel's new height.&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;bodyresize&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the Panel has been resized." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Close" Type="ComponentListener">
          <Summary><![CDATA[Fires after the Panel is closed. Note that Panels do not directly support being closed, but some Panel subclasses do (like Ext.Window).]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Panel), &quot;The Panel that has been closed.&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;close&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the Panel is closed. Note that Panels do not directly support being closed, but some Panel subclasses do (like Ext.Window)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Collapse" Type="ComponentListener">
          <Summary><![CDATA[Fires after the Panel has been collapsed.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Panel), &quot;The Panel that has been collapsed.&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;collapse&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the Panel has been collapsed." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Deactivate" Type="ComponentListener">
          <Summary><![CDATA[Fires after the Panel has been visually deactivated. Note that Panels do not directly support being deactivated, but some Panel subclasses do (like Ext.Window). Panels which are child Components of a TabPanel fire the activate and deactivate events under the control of the TabPanel.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Panel), &quot;The Panel that has been deactivated.&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;deactivate&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the Panel has been visually deactivated. Note that Panels do not directly support being deactivated, but some Panel subclasses do (like Ext.Window). Panels which are child Components of a TabPanel fire the activate and deactivate events under the control of the TabPanel." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Expand" Type="ComponentListener">
          <Summary><![CDATA[Fires after the Panel has been expanded.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Panel), &quot;The Panel that has been expanded.&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;expand&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the Panel has been expanded." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TitleChange" Type="ComponentListener">
          <Summary><![CDATA[Fires after the Panel title has been set or changed.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Panel), &quot;The Panel which has had its title changed.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;title&quot;, typeof(string), &quot;new title.&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;titlechange&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the Panel title has been set or changed." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeUpdate" Type="ComponentListener">
          <Summary><![CDATA[Fires before iframe loading.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Panel), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(string), &quot;event object&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeupdate&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before iframe loading." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Update" Type="ComponentListener">
          <Summary><![CDATA[Fired after successful update is made.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Panel), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(string), &quot;event object&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;update&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fired after successful update is made." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Failure" Type="ComponentListener">
          <Summary><![CDATA[Fired on update failure.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Panel), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(string), &quot;event object&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;failure&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fired on update failure." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IconChange" Type="ComponentListener">
          <Summary><![CDATA[Fires after the Panel icon class has been set or changed.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Panel), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;newCls&quot;, typeof(string)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;oldCls&quot;, typeof(string)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;iconchange&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the Panel icon class has been set or changed." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="PanelResizer" Extends="Plugin">
      <Attributes>
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(PanelResizer), &quot;Build.ToolboxIcons.Plugin.bmp&quot;" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:PanelResizer runat=\&quot;server\&quot; /&gt;&quot;" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="MinHeight" Type="int" DefaultValue="0">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. PanelResizer&quot;" />
            <Attribute Type="DefaultValue" RawValue="0" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MaxHeight" Type="int" DefaultValue="10000000">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. PanelResizer&quot;" />
            <Attribute Type="DefaultValue" RawValue="10000000" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Listeners" Type="PanelResizerListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="PanelResizerDirectEvents">
          <Summary><![CDATA[Server-side Ajax Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Server-side Ajax Event Handlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="PanelResizerDirectEvents" Extends="ComponentDirectEvents">
      <Attributes />
      <ConfigOptions>
        <ConfigOption Name="DragStart" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(PanelResizer)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(Object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;dragstart&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Drag" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(PanelResizer)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(Object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;drag&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DragEnd" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(PanelResizer)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(Object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;dragend&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="PanelResizerListeners" Extends="ComponentListeners">
      <Attributes />
      <ConfigOptions>
        <ConfigOption Name="DragStart" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(PanelResizer)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(Object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;dragstart&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Drag" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(PanelResizer)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(Object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;drag&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DragEnd" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(PanelResizer)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(Object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;dragend&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="Parameter" Extends="BaseParameter">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="ParameterCollection" Extends="StateManagedCollection&lt;Parameter&gt;">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="Plugin" Abstract="true" Extends="LazyObservable">
      <Summary><![CDATA[Base Class for all Component Plugins. Add plugin to a Component using the .Plugins property or <Plugins> node.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="Description" RawValue="Base Class for all Component Plugins. Add plugin to a Component using the .Plugins property or &lt;Plugins&gt; node." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="ConfigIDProxy" Modifier="Override" Access="Protected" Type="string">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Ignore" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="Portal" Extends="PanelBase">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(Portal), &quot;Build.ToolboxIcons.Portal.bmp&quot;" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:Portal runat=\&quot;server\&quot; Title=\&quot;Portal\&quot; Layout=\&quot;column\&quot;&gt;&lt;Items&gt;&lt;{0}:PortalColumn runat=\&quot;server\&quot; StyleSpec=\&quot;padding:10px 0 10px 10px\&quot; ColumnWidth=\&quot;0.33\&quot; Layout=\&quot;anchor\&quot; DefaultAnchor=\&quot;100%\&quot;&gt;&lt;Items&gt;&lt;{0}:Portlet runat=\&quot;server\&quot; Title=\&quot;Portlet 1\&quot; Padding=\&quot;5\&quot; Html=\&quot;Portlet 1\&quot; /&gt;&lt;{0}:Portlet runat=\&quot;server\&quot; Title=\&quot;Portlet 2\&quot; Padding=\&quot;5\&quot; Html=\&quot;Portlet 2\&quot; /&gt;&lt;/Items&gt;&lt;/{0}:PortalColumn&gt;&lt;{0}:PortalColumn runat=\&quot;server\&quot; StyleSpec=\&quot;padding:10px 0 10px 10px\&quot; ColumnWidth=\&quot;0.33\&quot; Layout=\&quot;anchor\&quot; DefaultAnchor=\&quot;100%\&quot;&gt;&lt;Items&gt;&lt;{0}:Portlet runat=\&quot;server\&quot; Title=\&quot;Portlet 3\&quot; Padding=\&quot;5\&quot; Html=\&quot;Portlet 3\&quot; /&gt;&lt;/Items&gt;&lt;/{0}:PortalColumn&gt;&lt;{0}:PortalColumn runat=\&quot;server\&quot; StyleSpec=\&quot;padding:10px\&quot; ColumnWidth=\&quot;0.33\&quot; Layout=\&quot;anchor\&quot; DefaultAnchor=\&quot;100%\&quot;&gt;&lt;Items&gt;&lt;{0}:Portlet Title=\&quot;Portlet 4\&quot; runat=\&quot;server\&quot; Padding=\&quot;5\&quot; Html=\&quot;Portlet 4\&quot; /&gt;&lt;/Items&gt;&lt;/{0}:PortalColumn&gt;&lt;/Items&gt;&lt;/{0}:Portal&gt;&quot;" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Listeners" Type="PortalListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="PortalDirectEvents">
          <Summary><![CDATA[Server-side DirectEvent Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Server-side DirectEvent Handlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="PortalColumn" Extends="PanelBase">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(PortalColumn), &quot;Build.ToolboxIcons.PortalColumn.bmp&quot;" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:PortalColumn runat=\&quot;server\&quot; StyleSpec=\&quot;padding:10px 0 10px 10px\&quot;&gt;&lt;Items&gt;&lt;{0}:AnchorLayout ID=\&quot;AnchorLayout1\&quot; runat=\&quot;server\&quot;&gt;&lt;{0}:Anchor Horizontal=\&quot;100%\&quot;&gt;&lt;{0}:Portlet Title=\&quot;Portlet\&quot; runat=\&quot;server\&quot; /&gt;&lt;/{0}:Anchor&gt;&lt;/{0}:AnchorLayout&gt;&lt;/Items&gt;&lt;/{0}:PortalColumn&gt;&quot;" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="PortalDirectEvents" Extends="PanelDirectEvents">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="ValidateDrop" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;validatedrop&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeDragOver" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforedragover&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DragOver" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;dragover&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeDrop" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforedrop&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Drop" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;drop&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="PortalListeners" Extends="PanelListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="ValidateDrop" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;validatedrop&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeDragOver" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforedragover&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DragOver" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;dragover&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeDrop" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforedrop&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Drop" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;drop&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="Portlet" Extends="Panel">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(Portlet), &quot;Build.ToolboxIcons.Portlet.bmp&quot;" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:Portlet runat=\&quot;server\&quot; Title=\&quot;Portlet\&quot; /&gt;&quot;" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Collapsible" Modifier="Override" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to make the panel collapsible and have the expand/collapse toggle button automatically rendered into the header tool button area, false to keep the panel statically sized with no button (defaults to false).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. Portlet&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to make the panel collapsible and have the expand/collapse toggle button automatically rendered into the header tool button area, false to keep the panel statically sized with no button (defaults to false)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Draggable" Modifier="Override" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to enable dragging of this Panel (defaults to false).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. Portlet&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to enable dragging of this Panel (defaults to false)." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ProgressBar" Extends="BoxComponentBase">
      <Summary><![CDATA[An updateable progress bar component. The progress bar supports two different modes: manual and automatic.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:ProgressBar runat=\&quot;server\&quot; Width=\&quot;300\&quot;&gt;&lt;/{0}:ProgressBar&gt;&quot;" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(ProgressBar), &quot;Build.ToolboxIcons.ProgressBar.bmp&quot;" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="Description" RawValue="An updateable progress bar component. The progress bar supports two different modes: manual and automatic." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="BaseCls" Type="string" DefaultValue="&quot;x-progress&quot;">
          <Summary><![CDATA[The base CSS class to apply to the progress bar's wrapper element (defaults to 'x-progress')]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. ProgressBar&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;x-progress&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The base CSS class to apply to the progress bar's wrapper element (defaults to 'x-progress')" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Text" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The progress bar text (defaults to '')]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. ProgressBar&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The progress bar text (defaults to '')" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TextEl" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The element to render the progress text to (defaults to the progress bar's internal text element)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. ProgressBar&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The element to render the progress text to (defaults to the progress bar's internal text element)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Value" Type="float" DefaultValue="0">
          <Summary><![CDATA[A floating point value between 0 and 1 (e.g., .5, defaults to 0)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. ProgressBar&quot;" />
            <Attribute Type="DefaultValue" RawValue="0" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="A floating point value between 0 and 1 (e.g., .5, defaults to 0)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Listeners" Type="ProgressBarListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="ProgressBarDirectEvents">
          <Summary><![CDATA[Server-side Ajax Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Server-side Ajax Event Handlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods>
        <Method Name="Reset">
          <Summary><![CDATA[Resets the progress bar value to 0 and text to empty string. If hide = true, the progress bar will also be hidden (using the hideMode property internally).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Resets the progress bar value to 0 and text to empty string. If hide = true, the progress bar will also be hidden (using the hideMode property internally)." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Reset" ParamsRaw="bool hide">
          <Summary><![CDATA[Resets the progress bar value to 0 and text to empty string. If hide = true, the progress bar will also be hidden (using the hideMode property internally).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Resets the progress bar value to 0 and text to empty string. If hide = true, the progress bar will also be hidden (using the hideMode property internally)." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SyncProgressBar">
          <Summary><![CDATA[Synchronizes the inner bar width to the proper proportion of the total componet width based on the current progress value. This will be called automatically when the ProgressBar is resized by a layout, but if it is rendered auto width, this method can be called from another resize handler to sync the ProgressBar if necessary.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Synchronizes the inner bar width to the proper proportion of the total componet width based on the current progress value. This will be called automatically when the ProgressBar is resized by a layout, but if it is rendered auto width, this method can be called from another resize handler to sync the ProgressBar if necessary." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="UpdateProgress" ParamsRaw="float value, string text">
          <Summary><![CDATA[Updates the progress bar value, and optionally its text. If the text argument is not specified, any existing text value will be unchanged. To blank out existing text, pass ''. Note that even if the progress bar value exceeds 1, it will never automatically reset -- you are responsible for determining when the progress is complete and calling reset to clear and/or hide the control.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Updates the progress bar value, and optionally its text. If the text argument is not specified, any existing text value will be unchanged. To blank out existing text, pass ''. Note that even if the progress bar value exceeds 1, it will never automatically reset -- you are responsible for determining when the progress is complete and calling reset to clear and/or hide the control." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="UpdateText">
          <Summary><![CDATA[Updates the progress bar text. If specified, textEl will be updated, otherwise the progress bar itself will display the updated text.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Updates the progress bar text. If specified, textEl will be updated, otherwise the progress bar itself will display the updated text." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="UpdateText" ParamsRaw="string text">
          <Summary><![CDATA[Updates the progress bar text. If specified, textEl will be updated, otherwise the progress bar itself will display the updated text.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Updates the progress bar text. If specified, textEl will be updated, otherwise the progress bar itself will display the updated text." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Wait">
          <Summary><![CDATA[Initiates an auto-updating progress bar. A duration can be specified, in which case the progress bar will automatically reset after a fixed amount of time and optionally call a callback function if specified. If no duration is passed in, then the progress bar will run indefinitely and must be manually cleared by calling reset.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Initiates an auto-updating progress bar. A duration can be specified, in which case the progress bar will automatically reset after a fixed amount of time and optionally call a callback function if specified. If no duration is passed in, then the progress bar will run indefinitely and must be manually cleared by calling reset." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Wait" ParamsRaw="WaitConfig config">
          <Summary><![CDATA[Updates the progress bar text. If specified, textEl will be updated, otherwise the progress bar itself will display the updated text.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Updates the progress bar text. If specified, textEl will be updated, otherwise the progress bar itself will display the updated text." />
          </Attributes>
          <Parameters />
        </Method>
      </Methods>
    </Class>
    <Class Name="ProgressBarDirectEvents" Extends="BoxComponentDirectEvents">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Update" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after each update interval]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Component), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;value&quot;, typeof(int), &quot;current progress value&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;text&quot;, typeof(int), &quot;current progress text&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;update&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after each update interval" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ProgressBarListeners" Extends="BoxComponentListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Update" Type="ComponentListener">
          <Summary><![CDATA[Fires after each update interval]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Component), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;value&quot;, typeof(int), &quot;current progress value&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;text&quot;, typeof(string), &quot;current progress text&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;updated&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after each update interval" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ProgressBarPager" Extends="Plugin">
      <Attributes>
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(ProgressBarPager), &quot;Build.ToolboxIcons.Plugin.bmp&quot;" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:ProgressBarPager runat=\&quot;server\&quot; /&gt;&quot;" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="ProgBarWidth" Type="int" DefaultValue="255">
          <Summary><![CDATA[The default progress bar width.  Default is 225.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. ProgressBarPager&quot;" />
            <Attribute Type="DefaultValue" RawValue="255" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The default progress bar width.  Default is 225." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DefaultText" Type="string" DefaultValue="&quot;Loading...&quot;">
          <Summary><![CDATA[The text to display while the store is loading.  Default is 'Loading...']]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. ProgressBarPager&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="DefaultValue" RawValue="&quot;Loading...&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The text to display while the store is loading.  Default is 'Loading...'" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="PropertyGrid" Extends="GridPanelBase" Inherits="IPostBackEventHandler">
      <Summary><![CDATA[A specialized grid implementation intended to mimic the traditional property grid as typically seen in development IDEs. Each row in the grid represents a property of some object, and the data is stored as a set of name/value pairs]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:PropertyGrid runat=\&quot;server\&quot;&gt;&lt;/{0}:PropertyGrid&gt;&quot;" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(GridPanel), &quot;Build.ToolboxIcons.GridPanel.bmp&quot;" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="Description" RawValue="A specialized grid implementation intended to mimic the traditional property grid as typically seen in development IDEs. Each row in the grid represents a property of some object, and the data is stored as a set of name/value pairs" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Source" Type="PropertyGridParameterCollection">
          <Summary><![CDATA[A data object to use as the data source of the grid.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ArrayToObject" />
            <Attribute Type="Category" RawValue="&quot;8. PropertyGrid&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="A data object to use as the data source of the grid." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CustomEditors" Access="ProtectedInternal" Type="string" DefaultValue="null">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Browsable" RawValue="false" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Hidden" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CustomRenderers" Access="ProtectedInternal" Type="string" DefaultValue="null">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Browsable" RawValue="false" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Hidden" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="PropertyNames" Access="ProtectedInternal" Type="string" DefaultValue="null">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Browsable" RawValue="false" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Hidden" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Editable" Type="bool" DefaultValue="true">
          <Summary><![CDATA[If false then all cells will be read only]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;8. PropertyGrid&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="If false then all cells will be read only" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEventConfig" Type="BaseDirectEvent">
          <Attributes>
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Object" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Listeners" Type="PropertyGridListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="PropertyGridDirectEvents">
          <Summary><![CDATA[Server-side Ajax Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="Description" RawValue="Server-side Ajax Event Handlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="PropertyGridDirectEvents" Extends="GridPanelDirectEvents">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="BeforePropertyChange" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before a property value changes. Handlers can return false to cancel the property change (this will internally call Ext.data.Record.reject on the property's record).]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;source&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;recordId&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;value&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;oldValue&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforepropertychange&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before a property value changes. Handlers can return false to cancel the property change (this will internally call Ext.data.Record.reject on the property's record)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="PropertyChange" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after a property value has changed.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;source&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;recordId&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;value&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;oldValue&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;propertychange&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after a property value has changed." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="PropertyGridListeners" Extends="GridPanelListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="BeforePropertyChange" Type="ComponentListener">
          <Summary><![CDATA[Fires before a property value changes. Handlers can return false to cancel the property change (this will internally call Ext.data.Record.reject on the property's record).]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;source&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;recordId&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;value&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;oldValue&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforepropertychange&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before a property value changes. Handlers can return false to cancel the property change (this will internally call Ext.data.Record.reject on the property's record)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="PropertyChange" Type="ComponentListener">
          <Summary><![CDATA[Fires after a property value has changed.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;source&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;recordId&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;value&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;oldValue&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;propertychange&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after a property value has changed." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeSave" Type="ComponentListener">
          <Summary><![CDATA[Fires before ajax save.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(PropertyGrid)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;options&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforesave&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before ajax save." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Save" Type="ComponentListener">
          <Summary><![CDATA[Fires after successful ajax save.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(PropertyGrid)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;response&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;save&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after successful ajax save." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SaveException" Type="ComponentListener">
          <Summary><![CDATA[Fires ajax save failed.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(PropertyGrid)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;response&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;saveexception&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires ajax save failed." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="PropertyGridParameter" Extends="BaseParameter">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Editor" Type="EditorCollection">
          <Summary><![CDATA[(optional) The Ext.form.Field to use when editing values in this column if editing is supported by the grid.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="(optional) The Ext.form.Field to use when editing values in this column if editing is supported by the grid." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DisplayName" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="PropertyGridParameterCollection" Extends="StateManagedCollection&lt;PropertyGridParameter&gt;">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="ProxyCollection" Extends="SingleItemStateCollection&lt;DataProxy&gt;">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Proxy" Type="DataProxy">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.ObjectAllowEmpty" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ProxyCollectionEditor" Extends="CollectionEditor">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="Puff" Extends="Fx">
      <Summary><![CDATA[Fades the element out while slowly expanding it in all directions. When the effect is completed, the element will be hidden (visibility = 'hidden') but block elements will still take up space in the document. The element must be removed from the DOM using the 'remove' config option if desired. ]]></Summary>
      <Attributes>
        <Attribute Type="Description" RawValue="Fades the element out while slowly expanding it in all directions. When the effect is completed, the element will be hidden (visibility = 'hidden') but block elements will still take up space in the document. The element must be removed from the DOM using the 'remove' config option if desired. " />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="FxName" Modifier="Override" Type="string">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="QTipCfg" Extends="StateManagedItem">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="AutoHide" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to automatically hide the tooltip after the mouse exits the target element or after the dismissDelay has expired if set (defaults to true). If closable = true a close tool button will be rendered into the tooltip header.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to automatically hide the tooltip after the mouse exits the target element or after the dismissDelay has expired if set (defaults to true). If closable = true a close tool button will be rendered into the tooltip header." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Cls" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[An optional extra CSS class that will be added to this component's Element (defaults to ''). This can be useful for adding customized styles to the component or any of its children using standard CSS rules.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="An optional extra CSS class that will be added to this component's Element (defaults to ''). This can be useful for adding customized styles to the component or any of its children using standard CSS rules." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Text" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[Tooltip text]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Tooltip text" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Title" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[Tooltip title]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Tooltip title" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DismissDelay" Type="int" DefaultValue="5000">
          <Summary><![CDATA[Delay in milliseconds before the tooltip automatically hides (defaults to 5000). To disable automatic hiding, set dismissDelay = 0.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="5000" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Delay in milliseconds before the tooltip automatically hides (defaults to 5000). To disable automatic hiding, set dismissDelay = 0." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Width" Type="int" DefaultValue="0">
          <Summary><![CDATA[Tooltip width]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="0" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Tooltip width" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TargetProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;target&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="QuickTips" Extends="ScriptClass">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="Radio" Extends="CheckboxBase" Inherits="IPostBackEventHandler,ICheckBoxControl">
      <Summary><![CDATA[Single radio field. Can be used as a direct replacement for traditional Radio controls.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:Radio runat=\&quot;server\&quot; /&gt;&quot;" />
        <Attribute Type="DefaultProperty" RawValue="&quot;Text&quot;" />
        <Attribute Type="DefaultEvent" RawValue="&quot;CheckedChanged&quot;" />
        <Attribute Type="ValidationProperty" RawValue="&quot;Text&quot;" />
        <Attribute Type="ControlValueProperty" RawValue="&quot;Checked&quot;" />
        <Attribute Type="ParseChildren" RawValue="true" />
        <Attribute Type="PersistChildren" RawValue="false" />
        <Attribute Type="SupportsEventValidation" />
        <Attribute Type="Designer" RawValue="typeof(RadioDesigner)" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(Radio), &quot;Build.ToolboxIcons.Radio.bmp&quot;" />
        <Attribute Type="Description" RawValue="Single radio field. Can be used as a direct replacement for traditional Radio controls." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Listeners" Type="RadioListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="RadioDirectEvents">
          <Summary><![CDATA[Server-side Ajax Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Server-side Ajax Event Handlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="RadioColumn" Extends="Radio">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Items" Type="ItemsCollection&lt;Component&gt;">
          <Summary><![CDATA[Items collection]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;items&quot;, typeof(ItemCollectionJsonConverter)" />
            <Attribute Type="Category" RawValue="&quot;8. RadioColumn&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="Items collection" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="RadioDirectEvents" Extends="CheckboxDirectEvents">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="RadioGroup" Extends="CheckboxGroupBase" Inherits="IItems">
      <Summary><![CDATA[A grouping container for Ext.form.Radio controls.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:RadioGroup runat=\&quot;server\&quot; /&gt;&quot;" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(RadioGroup), &quot;Build.ToolboxIcons.RadioGroup.bmp&quot;" />
        <Attribute Type="Description" RawValue="A grouping container for Ext.form.Radio controls." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="DefaultType" Type="string" DefaultValue="&quot;Radio&quot;">
          <Summary><![CDATA[The default type of content Container represented by this object as registered in Ext.ComponentMgr (defaults to 'radio').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;5. Container&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;Radio&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(DefaultTypeConverter)" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The default type of content Container represented by this object as registered in Ext.ComponentMgr (defaults to 'radio')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DefaultTypeProxy" Access="Protected" Type="string" DefaultValue="&quot;radio&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;defaultType&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;radio&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Listeners" Type="RadioGroupListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="RadioGroupDirectEvents">
          <Summary><![CDATA[Server-side Ajax Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Server-side Ajax Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Items" Type="ItemsCollection&lt;Radio&gt;">
          <Summary><![CDATA[Items collection]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;items&quot;, typeof(ItemCollectionJsonConverter)" />
            <Attribute Type="Category" RawValue="&quot;7. RadioGroup&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="Items collection" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AutomaticGrouping" Type="bool" DefaultValue="true">
          <Summary><![CDATA[Automatic grouping (defaults to true).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;7. RadioGroup&quot;" />
            <Attribute Type="Bindable" RawValue="true, BindingDirection.TwoWay" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="Automatic grouping (defaults to true)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="GroupName" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The field's HTML name attribute.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;7. RadioGroup&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The field's HTML name attribute." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="RadioGroupDirectEvents" Extends="CheckboxGroupDirectEvents">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Change" Modifier="Override" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when the state of a child radio changes.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(RadioGroup), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;checked&quot;, typeof(Radio), &quot;The checked radio&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;change&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the state of a child radio changes." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="RadioGroupListeners" Extends="CheckboxGroupListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Change" Modifier="Override" Type="ComponentListener">
          <Summary><![CDATA[Fires when the state of a child radio changes.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(RadioGroup), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;checked&quot;, typeof(Radio), &quot;The checked radio&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;change&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the state of a child radio changes." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="RadioListeners" Extends="CheckboxListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="RatingColumn" Extends="ColumnBase">
      <Attributes />
      <ConfigOptions>
        <ConfigOption Name="XType" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;xtype&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Fixed" Modifier="Override" Type="bool" DefaultValue="true">
          <Summary><![CDATA[(optional) True if the column width cannot be changed. Defaults to false.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. RatingColumn&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="(optional) True if the column width cannot be changed. Defaults to false." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DataIndex" Modifier="Override" Type="string" DefaultValue="&quot;rating&quot;">
          <Summary><![CDATA[(optional) The name of the field in the grid's Ext.data.Store's Ext.data.Record definition from which to draw the column's value. If not specified, the column's index is used as an index into the Record's data Array.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. RatingColumn&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;rating&quot;" />
            <Attribute Type="Description" RawValue="(optional) The name of the field in the grid's Ext.data.Store's Ext.data.Record definition from which to draw the column's value. If not specified, the column's index is used as an index into the Record's data Array." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Editable" Modifier="Override" Type="bool" DefaultValue="false">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. RatingColumn&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AllowChange" Type="bool" DefaultValue="true">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. RatingColumn&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SelectedCls" Type="string" DefaultValue="&quot;rating-selected&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. RatingColumn&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;rating-selected&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="UnselectedCls" Type="string" DefaultValue="&quot;rating-unselected&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. RatingColumn&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;rating-unselected&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MaxRating" Type="int" DefaultValue="5">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. RatingColumn&quot;" />
            <Attribute Type="DefaultValue" RawValue="5" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TickSize" Type="int" DefaultValue="16">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. RatingColumn&quot;" />
            <Attribute Type="DefaultValue" RawValue="16" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RoundToTick" Type="bool" DefaultValue="true">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. RatingColumn&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ReaderCollection" Extends="SingleItemStateCollection&lt;DataReader&gt;">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Reader" Type="DataReader">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.ObjectAllowEmpty" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="RecordField" Extends="StateManagedItem">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="AllowBlank" Type="bool" DefaultValue="true">
          <Summary><![CDATA[Used for validating a record, defaults to true. An empty value here will cause Ext.data.Record.isValid to evaluate to false.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="Used for validating a record, defaults to true. An empty value here will cause Ext.data.Record.isValid to evaluate to false." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Name" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The name by which the field is referenced within the Record. This is referenced by, for example the DataIndex property in column definition objects passed to ColumnModel]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The name by which the field is referenced within the Record. This is referenced by, for example the DataIndex property in column definition objects passed to ColumnModel" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="NameProxy" Access="Protected" Type="string">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;name&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Mapping" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[(Optional) A path specification for use by the Reader implementation that is creating the Record to access the data value from the data object. If an JsonReader is being used, then this is a string containing the javascript expression to reference the data relative to the Record item's root. If an XmlReader is being used, this is an Ext.DomQuery path to the data item relative to the Record element. If the mapping expression is the same as the field name, this may be omitted.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="(Optional) A path specification for use by the Reader implementation that is creating the Record to access the data value from the data object. If an JsonReader is being used, then this is a string containing the javascript expression to reference the data relative to the Record item's root. If an XmlReader is being used, this is an Ext.DomQuery path to the data item relative to the Record element. If the mapping expression is the same as the field name, this may be omitted." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ServerMapping" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Type" Type="RecordFieldType" DefaultValue="RecordFieldType.Auto">
          <Summary><![CDATA[The data type for conversion to displayable value]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="RecordFieldType.Auto" />
            <Attribute Type="Description" RawValue="The data type for conversion to displayable value" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SortType" Type="SortTypeMethod" DefaultValue="SortTypeMethod.None">
          <Summary><![CDATA[Sort method]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="typeof(ToLowerCamelCase)" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="SortTypeMethod.None" />
            <Attribute Type="Description" RawValue="Sort method" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SortDir" Type="SortDirection" DefaultValue="SortDirection.Default">
          <Summary><![CDATA[(Optional) Initial direction to sort]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="SortDirection.Default" />
            <Attribute Type="Description" RawValue="(Optional) Initial direction to sort" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SubmitEmptyValue" Type="EmptyValue" DefaultValue="EmptyValue.Undefined">
          <Summary><![CDATA[Empty value representation during submit (default value as Undedefined)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="EmptyValue.Undefined" />
            <Attribute Type="Description" RawValue="Empty value representation during submit (default value as Undedefined)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CustomSortType" Type="JFunction">
          <Summary><![CDATA[A function which converts a Field's value to a comparable value in order to ensure correct sort ordering.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;sortType&quot;, JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="A function which converts a Field's value to a comparable value in order to ensure correct sort ordering." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Convert" Type="JFunction">
          <Summary><![CDATA[(Optional) A function which converts the value provided by the Reader into an object that will be stored in the Record.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="(Optional) A function which converts the value provided by the Reader into an object that will be stored in the Record." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DateFormat" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[(Optional) A format String for the Date.parseDate function]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="typeof(NetToPHPDateFormatStringJsonConverter)" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="(Optional) A format String for the Date.parseDate function" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DefaultValue" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[(Optional) The default value passed to the Reader when the field does not exist in the data object]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="(Optional) The default value passed to the Reader when the field does not exist in the data object" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IsComplex" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to render this property as complex object]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to render this property as complex object" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="UseNull" Type="bool" DefaultValue="false">
          <Summary><![CDATA[(Optional) Use when converting received data into a Number type (either int or float). If the value cannot be parsed, null will be used if useNull is true, otherwise the value will be 0. Defaults to false]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="(Optional) Use when converting received data into a Number type (either int or float). If the value cannot be parsed, null will be used if useNull is true, otherwise the value will be 0. Defaults to false" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="RecordFieldCollection" Extends="StateManagedCollection&lt;RecordField&gt;">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="RecordModifiedEventArgs" Extends="EventArgs">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="RecordsToXmlConverter" Extends="ExtJsonConverter">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="ReferenceColumn" Extends="ColumnBase" Inherits="ICustomConfigSerialization">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Reference" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="RegexJsonConverter" Extends="ExtJsonConverter">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="RemoteActionEventArgs" Extends="EventArgs">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="RemoteAppendEventArgs" Extends="RemoteActionEventArgs">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="RemoteMoveEventArgs" Extends="RemoteActionEventArgs">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="RemoteRenameEventArgs" Extends="RemoteActionEventArgs">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="RemoteValidationDirectEvent" Extends="ObservableDirectEvent">
      <Attributes />
      <ConfigOptions>
        <ConfigOption Name="ValidationBuffer" Type="int" DefaultValue="500">
          <Summary><![CDATA[Number of milliseconds to wait before the validation request is sent to server]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="DefaultValue" RawValue="500" />
            <Attribute Type="Description" RawValue="Number of milliseconds to wait before the validation request is sent to server" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ShowBusy" Type="bool" DefaultValue="true">
          <Summary><![CDATA[False to disable loading indicator]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="False to disable loading indicator" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BusyTip" Type="string" DefaultValue="&quot;Validating...&quot;">
          <Summary><![CDATA[Loading indicator tooltip]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="DefaultValue" RawValue="&quot;Validating...&quot;" />
            <Attribute Type="Description" RawValue="Loading indicator tooltip" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BusyIconClsProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;busyIconCls&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BusyIconCls" Type="string" DefaultValue="&quot;loading-indicator&quot;">
          <Summary><![CDATA[The default iconCls applied to the loading indicator.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;loading-indicator&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The default iconCls applied to the loading indicator." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ValidationEvent" Type="string" DefaultValue="&quot;keyup&quot;">
          <Summary><![CDATA[Name of the event that triggers the validation]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="DefaultValue" RawValue="&quot;keyup&quot;" />
            <Attribute Type="Description" RawValue="Name of the event that triggers the validation" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EventOwner" Type="ValidatioEventOwner" DefaultValue="ValidatioEventOwner.Element">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="DefaultValue" RawValue="ValidatioEventOwner.Element" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="InitValueValidation" Type="InitValueValidation" DefaultValue="InitValueValidation.Valid">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="DefaultValue" RawValue="InitValueValidation.Valid" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="RemoteValidationEventArgs" Extends="DirectEventArgs">
      <Attributes />
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="Renderer" Extends="StateManagedItem">
      <Attributes>
        <Attribute Type="DefaultProperty" RawValue="&quot;Handler&quot;" />
        <Attribute Type="TypeConverter" RawValue="typeof(RendererConverter)" />
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Fn" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The raw JavaScript function to be called when this Renderer fires.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The raw JavaScript function to be called when this Renderer fires." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Scope" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The JavaScript logic to be called when this Renderer fires. The Handler will be automatically wrapped in a proper function{} template and passed the correct arguments for this event.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The JavaScript logic to be called when this Renderer fires. The Handler will be automatically wrapped in a proper function{} template and passed the correct arguments for this event." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="RendererJsonConverter" Extends="ExtJsonConverter">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="Resizable" Extends="Observable">
      <Summary><![CDATA[Applies drag handles to an element to make it resizable.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:Resizable runat=\&quot;server\&quot; /&gt;&quot;" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(Resizable), &quot;Build.ToolboxIcons.Resizable.bmp&quot;" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="Description" RawValue="Applies drag handles to an element to make it resizable." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Element" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The id or element to resize]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;3. Resizable&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The id or element to resize" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Adjustments" Type="Size" DefaultValue="typeof(Size), &quot;&quot;">
          <Summary><![CDATA[The array [width, height] with values to be added to the resize operation's new size (defaults to [0, 0])]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;3. Resizable&quot;" />
            <Attribute Type="DefaultValue" RawValue="typeof(Size), &quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The array [width, height] with values to be added to the resize operation's new size (defaults to [0, 0])" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AdjustmentsProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;adjustments&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Animate" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to animate the resize (not compatible with dynamic sizing, defaults to false).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. Resizable&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to animate the resize (not compatible with dynamic sizing, defaults to false)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DisableTrackOver" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to disable mouse tracking. This is only applied at config time. (defaults to false)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. Resizable&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to disable mouse tracking. This is only applied at config time. (defaults to false)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Draggable" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Convenience to initialize drag drop (defaults to false)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. Resizable&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Convenience to initialize drag drop (defaults to false)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Duration" Type="double" DefaultValue="0.35">
          <Summary><![CDATA[Animation duration if animate = true (defaults to .35)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. Resizable&quot;" />
            <Attribute Type="DefaultValue" RawValue="0.35" />
            <Attribute Type="Description" RawValue="Animation duration if animate = true (defaults to .35)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Dynamic" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to resize the element while dragging instead of using a proxy (defaults to false)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. Resizable&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to resize the element while dragging instead of using a proxy (defaults to false)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Easing" Type="Easing" DefaultValue="Easing.EaseOutStrong">
          <Summary><![CDATA[Animation easing if animate = true (defaults to 'easeOutStrong')]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToCamelLower" />
            <Attribute Type="Category" RawValue="&quot;3. Resizable&quot;" />
            <Attribute Type="DefaultValue" RawValue="Easing.EaseOutStrong" />
            <Attribute Type="Description" RawValue="Animation easing if animate = true (defaults to 'easeOutStrong')" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EnabledResizing" Type="bool" DefaultValue="true">
          <Summary><![CDATA[False to disable resizing (defaults to true)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;enabled&quot;" />
            <Attribute Type="Category" RawValue="&quot;3. Resizable&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="False to disable resizing (defaults to true)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Handles" Type="ResizeHandle" DefaultValue="ResizeHandle.None">
          <Summary><![CDATA[String consisting of the resize handles to display (defaults to undefined)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;3. Resizable&quot;" />
            <Attribute Type="DefaultValue" RawValue="ResizeHandle.None" />
            <Attribute Type="Description" RawValue="String consisting of the resize handles to display (defaults to undefined)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HandlesSummary" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[String consisting of the resize handles to display (defaults to undefined). Specify either 'all' or any of 'n s e w ne nw se sw'.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;handles&quot;" />
            <Attribute Type="Category" RawValue="&quot;3. Resizable&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="String consisting of the resize handles to display (defaults to undefined). Specify either 'all' or any of 'n s e w ne nw se sw'." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HandlesProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;handles&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Width" Modifier="Override" Type="Unit" DefaultValue="typeof(Unit), &quot;&quot;">
          <Summary><![CDATA[The width of the element in pixels (defaults to null)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. Resizable&quot;" />
            <Attribute Type="DefaultValue" RawValue="typeof(Unit), &quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The width of the element in pixels (defaults to null)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Height" Modifier="Override" Type="Unit" DefaultValue="typeof(Unit), &quot;&quot;">
          <Summary><![CDATA[The height of the element in pixels (defaults to null)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. Resizable&quot;" />
            <Attribute Type="DefaultValue" RawValue="typeof(Unit), &quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The height of the element in pixels (defaults to null)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HeightIncrement" Type="int" DefaultValue="0">
          <Summary><![CDATA[The increment to snap the height resize in pixels (dynamic must be true, defaults to 0).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;3. Resizable&quot;" />
            <Attribute Type="DefaultValue" RawValue="0" />
            <Attribute Type="Description" RawValue="The increment to snap the height resize in pixels (dynamic must be true, defaults to 0)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MaxHeight" Type="int" DefaultValue="10000">
          <Summary><![CDATA[The maximum height for the element (defaults to 10000)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;3. Resizable&quot;" />
            <Attribute Type="DefaultValue" RawValue="10000" />
            <Attribute Type="Description" RawValue="The maximum height for the element (defaults to 10000)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MaxWidth" Type="int" DefaultValue="10000">
          <Summary><![CDATA[The maximum width for the element (defaults to 10000)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;3. Resizable&quot;" />
            <Attribute Type="DefaultValue" RawValue="10000" />
            <Attribute Type="Description" RawValue="The maximum width for the element (defaults to 10000)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MinHeight" Type="int" DefaultValue="5">
          <Summary><![CDATA[The minimum height for the element (defaults to 5)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;3. Resizable&quot;" />
            <Attribute Type="DefaultValue" RawValue="5" />
            <Attribute Type="Description" RawValue="The minimum height for the element (defaults to 5)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MinWidth" Type="int" DefaultValue="5">
          <Summary><![CDATA[The minimum width for the element (defaults to 5)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;3. Resizable&quot;" />
            <Attribute Type="DefaultValue" RawValue="5" />
            <Attribute Type="Description" RawValue="The minimum width for the element (defaults to 5)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MinX" Type="int" DefaultValue="0">
          <Summary><![CDATA[The minimum allowed page X for the element (only used for west resizing, defaults to 0)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;3. Resizable&quot;" />
            <Attribute Type="DefaultValue" RawValue="0" />
            <Attribute Type="Description" RawValue="The minimum allowed page X for the element (only used for west resizing, defaults to 0)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MinY" Type="int" DefaultValue="0">
          <Summary><![CDATA[The minimum allowed page Y for the element (only used for north resizing, defaults to 0)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;3. Resizable&quot;" />
            <Attribute Type="DefaultValue" RawValue="0" />
            <Attribute Type="Description" RawValue="The minimum allowed page Y for the element (only used for north resizing, defaults to 0)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Pinned" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to ensure that the resize handles are always visible, false to display them only when the user mouses over the resizable borders. This is only applied at config time. (defaults to false)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. Resizable&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to ensure that the resize handles are always visible, false to display them only when the user mouses over the resizable borders. This is only applied at config time. (defaults to false)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="PreserveRatio" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to preserve the original ratio between height and width during resize (defaults to false)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. Resizable&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to preserve the original ratio between height and width during resize (defaults to false)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ResizeChild" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[id of element to resize]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. Resizable&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="id of element to resize" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Transparent" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True for transparent handles. This is only applied at config time. (defaults to false)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. Resizable&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True for transparent handles. This is only applied at config time. (defaults to false)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="WidthIncrement" Type="int" DefaultValue="0">
          <Summary><![CDATA[The increment to snap the width resize in pixels (dynamic must be true, defaults to 0)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;3. Resizable&quot;" />
            <Attribute Type="DefaultValue" RawValue="0" />
            <Attribute Type="Description" RawValue="The increment to snap the width resize in pixels (dynamic must be true, defaults to 0)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Wrap" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to wrap an element with a div if needed (required for textareas and images, defaults to false)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. Resizable&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to wrap an element with a div if needed (required for textareas and images, defaults to false)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ResizeElement" Type="JFunction">
          <Summary><![CDATA[Performs resizing of the associated Element. ]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;3. Resizable&quot;" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="Performs resizing of the associated Element. " />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Listeners" Type="ResizableListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="ResizableDirectEvents">
          <Summary><![CDATA[Server-side DirectEventHandlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Server-side DirectEventHandlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ResizableDirectEvents" Extends="ComponentDirectEvents">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="BeforeResize" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fired before resize is allowed. Set enabled to false to cancel resize.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Resizable), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object), &quot;The mousedown event&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeresize&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fired before resize is allowed. Set enabled to false to cancel resize." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Resize" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fired after a resize.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Resizable), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;width&quot;, typeof(int), &quot;The new width&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;height&quot;, typeof(int), &quot;The new height&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;e&quot;, typeof(object), &quot;The mousedown event&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;resize&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fired after a resize." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ResizableListeners" Extends="ComponentListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="BeforeResize" Type="ComponentListener">
          <Summary><![CDATA[Fired before resize is allowed. Set enabled to false to cancel resize.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Resizable), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object), &quot;The mousedown event&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeresize&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fired before resize is allowed. Set enabled to false to cancel resize." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Resize" Type="ComponentListener">
          <Summary><![CDATA[Fired after a resize.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Resizable), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;width&quot;, typeof(int), &quot;The new width&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;height&quot;, typeof(int), &quot;The new height&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;e&quot;, typeof(object), &quot;The mousedown event&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;resize&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fired after a resize." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ResourceManagerDirectEvents" Extends="ComponentDirectEvents">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="WindowUnload" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when the browser window is unloaded. Return 'true' to prompt the message, or 'false' to cancel the unload.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;, typeof(object), &quot;The browser unload event object&quot;" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeunload&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the browser window is unloaded. Return 'true' to prompt the message, or 'false' to cancel the unload." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="WindowScroll" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when the browser window is scrolled.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;, typeof(object), &quot;The browser scroll event object&quot;" />
            <Attribute Type="ListenerArgument" RawValue="0, &quot;document&quot;, typeof(object), &quot;The browser document object&quot;" />
            <Attribute Type="ListenerArgument" RawValue="0, &quot;config&quot;, typeof(object), &quot;The event configuration object passed to listener&quot;" />
            <Attribute Type="ConfigOption" RawValue="&quot;scroll&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the browser window is scrolled." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ResourceManagerListeners" Extends="ComponentListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="WindowUnload" Type="ComponentListener">
          <Summary><![CDATA[Fires when the browser window is unloaded. Return 'true' to prompt the message, or 'false' to cancel the unload.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;, typeof(object), &quot;The browser unload event object&quot;" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeunload&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the browser window is unloaded. Return 'true' to prompt the message, or 'false' to cancel the unload." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="WindowScroll" Type="ComponentListener">
          <Summary><![CDATA[Fires when the browser window is scrolled.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;, typeof(object), &quot;The browser scroll event object&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;document&quot;, typeof(object), &quot;The browser document object&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;config&quot;, typeof(object), &quot;The event configuration object passed to listener&quot;" />
            <Attribute Type="ConfigOption" RawValue="&quot;scroll&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the browser window is scrolled." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeAjaxRequest" Type="ComponentListener">
          <Summary><![CDATA[Fires before each ajax request.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(object), &quot;The browser scroll event object&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;eventType&quot;, typeof(object), &quot;Event type&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;action&quot;, typeof(object), &quot;Type of action&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;extraParams&quot;, typeof(object), &quot;Extra parameters of request&quot;" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;o&quot;, typeof(object), &quot;&quot;" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeajaxrequest&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before each ajax request." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AjaxRequestComplete" Type="ComponentListener">
          <Summary><![CDATA[Fires if the ajax request was successfully completed.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;response&quot;, typeof(object), &quot;The reponse object&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;result&quot;, typeof(object), &quot;&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;el&quot;, typeof(object), &quot;The browser scroll event object&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;eventType&quot;, typeof(object), &quot;Event type&quot;" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;action&quot;, typeof(object), &quot;Type of action&quot;" />
            <Attribute Type="ListenerArgument" RawValue="5, &quot;extraParams&quot;, typeof(object), &quot;Extra parameters of request&quot;" />
            <Attribute Type="ListenerArgument" RawValue="6, &quot;o&quot;, typeof(object), &quot;&quot;" />
            <Attribute Type="ConfigOption" RawValue="&quot;ajaxrequestcomplete&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires if the ajax request was successfully completed." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AjaxRequestException" Type="ComponentListener">
          <Summary><![CDATA[Fires if the ajax request was failed.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;response&quot;, typeof(object), &quot;The reponse object&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;result&quot;, typeof(object), &quot;&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;el&quot;, typeof(object), &quot;The browser scroll event object&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;eventType&quot;, typeof(object), &quot;Event type&quot;" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;action&quot;, typeof(object), &quot;Type of action&quot;" />
            <Attribute Type="ListenerArgument" RawValue="5, &quot;extraParams&quot;, typeof(object), &quot;Extra parameters of request&quot;" />
            <Attribute Type="ListenerArgument" RawValue="6, &quot;o&quot;, typeof(object), &quot;&quot;" />
            <Attribute Type="ConfigOption" RawValue="&quot;ajaxrequestexception&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires if the ajax request was failed." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="Response" Extends="ExtObject">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Success" Type="bool">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;success&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Message" Type="string" DefaultValue="null">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;message&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Data" Type="string" DefaultValue="null">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;data&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="RestActions" Extends="StateManagedItem" Inherits="ICustomConfigSerialization">
      <Attributes />
      <ConfigOptions>
        <ConfigOption Name="Create" Type="HttpMethod" DefaultValue="HttpMethod.POST">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="HttpMethod.POST" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Read" Type="HttpMethod" DefaultValue="HttpMethod.GET">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="HttpMethod.GET" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Update" Type="HttpMethod" DefaultValue="HttpMethod.PUT">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="HttpMethod.PUT" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Destroy" Type="HttpMethod" DefaultValue="HttpMethod.DELETE">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="HttpMethod.DELETE" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="RestUrls" Extends="StateManagedItem">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="CreateProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;create&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ReadProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;read&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="UpdateProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;update&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DestroyProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;destroy&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="RowEditor" Extends="Plugin">
      <Summary><![CDATA[Plugin that adds the ability to rapidly edit full rows in a grid.]]></Summary>
      <Attributes>
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(RowEditor), &quot;Build.ToolboxIcons.RowEditor.bmp&quot;" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:RowEditor runat=\&quot;server\&quot; /&gt;&quot;" />
        <Attribute Type="Description" RawValue="Plugin that adds the ability to rapidly edit full rows in a grid." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="ConfigIDProxy" Modifier="Override" Access="Protected" Type="string">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;proxyId&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ClicksToEdit" Type="int" DefaultValue="0">
          <Summary><![CDATA[The number of clicks on a cell required to display the cell's editor (defaults to 0(auto)).]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. RowEditor&quot;" />
            <Attribute Type="DefaultValue" RawValue="0" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The number of clicks on a cell required to display the cell's editor (defaults to 0(auto))." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="FrameWidth" Type="int" DefaultValue="5">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. RowEditor&quot;" />
            <Attribute Type="DefaultValue" RawValue="5" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="FocusDelay" Type="int" DefaultValue="250">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. RowEditor&quot;" />
            <Attribute Type="DefaultValue" RawValue="250" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ButtonPad" Type="int" DefaultValue="3">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. RowEditor&quot;" />
            <Attribute Type="DefaultValue" RawValue="3" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ErrorSummary" Type="bool" DefaultValue="true">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. RowEditor&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MonitorValid" Type="bool" DefaultValue="true">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. RowEditor&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MinButtonWidth" Type="Unit" DefaultValue="typeof(Unit), &quot;75&quot;">
          <Summary><![CDATA[Minimum width in pixels of all buttons in this panel (defaults to 75).]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. RowEditor&quot;" />
            <Attribute Type="DefaultValue" RawValue="typeof(Unit), &quot;75&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Minimum width in pixels of all buttons in this panel (defaults to 75)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SaveText" Type="string" DefaultValue="&quot;Save&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. RowEditor&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;Save&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CancelText" Type="string" DefaultValue="&quot;Cancel&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. RowEditor&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;Cancel&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CommitChangesText" Type="string" DefaultValue="&quot;You need to commit or cancel your changes&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. RowEditor&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;You need to commit or cancel your changes&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ErrorText" Type="string" DefaultValue="&quot;Errors&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. RowEditor&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;Errors&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Listeners" Type="RowEditorListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="RowEditorDirectEvents">
          <Summary><![CDATA[Server-side Ajax Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Server-side Ajax Event Handlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="RowEditorDirectEvents" Extends="ComponentDirectEvents">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="AfterEdit" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fired after a row is edited and passes validation.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;el&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;o&quot;, typeof(object), &quot;Object with changes made to the record.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;r&quot;, typeof(object), &quot;The Record that was edited&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;rowIndex&quot;, typeof(object), &quot;The rowIndex of the row just edited&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;afteredit&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fired after a row is edited and passes validation." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeEdit" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fired before the row editor is activated.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;el&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;rowIndex&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeedit&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fired before the row editor is activated." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ValidateEdit" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fired after a row is edited and passes validation.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;el&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;o&quot;, typeof(object), &quot;Object with changes made to the record.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;r&quot;, typeof(object), &quot;The Record that was edited&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;rowIndex&quot;, typeof(object), &quot;The rowIndex of the row just edited&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;validateedit&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fired after a row is edited and passes validation." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="PreEdit" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fired for each field's value.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;preedit&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fired for each field's value." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="RowEditorListeners" Extends="ComponentListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="AfterEdit" Type="ComponentListener">
          <Summary><![CDATA[Fired after a row is edited and passes validation.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;el&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;o&quot;, typeof(object), &quot;Object with changes made to the record.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;r&quot;, typeof(object), &quot;The Record that was edited&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;rowIndex&quot;, typeof(object), &quot;The rowIndex of the row just edited&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;afteredit&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fired after a row is edited and passes validation." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeEdit" Type="ComponentListener">
          <Summary><![CDATA[Fired before the row editor is activated.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;el&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;rowIndex&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeedit&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fired before the row editor is activated." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CancelEdit" Type="ComponentListener">
          <Summary><![CDATA[Fired when the editor is cancelled.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;el&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;forced&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;canceledit&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fired when the editor is cancelled." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ValidateEdit" Type="ComponentListener">
          <Summary><![CDATA[Fired after a row is edited and passes validation.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;el&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;o&quot;, typeof(object), &quot;Object with changes made to the record.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;r&quot;, typeof(object), &quot;The Record that was edited&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;rowIndex&quot;, typeof(object), &quot;The rowIndex of the row just edited&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;validateedit&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fired after a row is edited and passes validation." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="PreEdit" Type="ComponentListener">
          <Summary><![CDATA[Fired for each field's value.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;preedit&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fired for each field's value." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="RowExpander" Extends="Plugin">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="ConfigIDProxy" Modifier="Override" Access="Protected" Type="string">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;proxyId&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Template" Type="XTemplate">
          <Summary><![CDATA[The template string to use to display each item in the dropdown list.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;3. RowExpander&quot;" />
            <Attribute Type="ConfigOption" RawValue="&quot;tpl&quot;, typeof(LazyControlJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The template string to use to display each item in the dropdown list." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Component" Type="ItemsCollection&lt;Component&gt;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;3. RowExpander&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;component&quot;, typeof(ItemCollectionJsonConverter)" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RecreateComponent" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Recreate component on each row expand]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. RowExpander&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Recreate component on each row expand" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SwallowBodyEvents" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Swallow row body's events]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. RowExpander&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Swallow row body's events" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ColumnPosition" Type="int" DefaultValue="0">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="0" />
            <Attribute Type="Category" RawValue="&quot;3. RowExpander&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EnableCaching" Type="bool" DefaultValue="true">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. RowExpander&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ExpandOnEnter" Type="bool" DefaultValue="true">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. RowExpander&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ExpandOnDblClick" Type="bool" DefaultValue="true">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. RowExpander&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="LazyRender" Type="bool" DefaultValue="true">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. RowExpander&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SingleExpand" Type="bool" DefaultValue="false">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. RowExpander&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Listeners" Type="RowExpanderListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="RowExpanderDirectEvents">
          <Summary><![CDATA[Server-side DirectEventHandlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="Description" RawValue="Server-side DirectEventHandlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods>
        <Method Name="ToggleRow" ParamsRaw="int row">
          <Summary><![CDATA[Toggle (expand/collapse) row]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Toggle (expand/collapse) row" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="ExpandAll">
          <Summary><![CDATA[Expand all rows]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Expand all rows" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="CollapseAll">
          <Summary><![CDATA[Collapse all rows]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Collapse all rows" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="ExpandRow" ParamsRaw="int row">
          <Summary><![CDATA[Expand row]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Expand row" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="CollapseRow" ParamsRaw="int row">
          <Summary><![CDATA[Collapse row]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Collapse row" />
          </Attributes>
          <Parameters />
        </Method>
      </Methods>
    </Class>
    <Class Name="RowExpanderDirectEvents" Extends="ContainerDirectEvents">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="BeforeExpand" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before a row expand]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(RowExpander), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;body&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;rowIndex&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeexpand&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before a row expand" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Expand" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires afyter a row expand]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(RowExpander), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;body&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;rowIndex&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;expand&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires afyter a row expand" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeCollapse" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before a row collapse]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(RowExpander), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;body&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;rowIndex&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforecollapse&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before a row collapse" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Collapse" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after a row collapse]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(RowExpander), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;body&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;rowIndex&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;collapse&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after a row collapse" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="RowExpanderListeners" Extends="ComponentBaseListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="BeforeExpand" Type="ComponentListener">
          <Summary><![CDATA[Fires before a row expand]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(RowExpander), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;body&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;rowIndex&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeexpand&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before a row expand" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Expand" Type="ComponentListener">
          <Summary><![CDATA[Fires afyter a row expand]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(RowExpander), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;body&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;rowIndex&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;expand&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires afyter a row expand" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeCollapse" Type="ComponentListener">
          <Summary><![CDATA[Fires before a row collapse]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(RowExpander), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;body&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;rowIndex&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforecollapse&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before a row collapse" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Collapse" Type="ComponentListener">
          <Summary><![CDATA[Fires after a row collapse]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(RowExpander), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;record&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;body&quot;, typeof(object)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;rowIndex&quot;, typeof(object)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;collapse&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after a row collapse" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="RowLayout" Extends="ContainerLayout">
      <Summary><![CDATA[This is the layout style of choice for creating structural layouts in a multi-row format where the height of each row can be specified as a percentage or fixed height.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:RowLayout runat=\&quot;server\&quot;&gt;&lt;/{0}:RowLayout&gt;&quot;" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(RowLayout), &quot;Build.ToolboxIcons.Layout.bmp&quot;" />
        <Attribute Type="Description" RawValue="This is the layout style of choice for creating structural layouts in a multi-row format where the height of each row can be specified as a percentage or fixed height." />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Background" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to fill background by predefined color. Defaults to false.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;6. RowLayout&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to fill background by predefined color. Defaults to false." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Split" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to allow resizing of the columns using a SplitBar. Defaults to false.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;6. RowLayout&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to allow resizing of the columns using a SplitBar. Defaults to false." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Margin" Type="int" DefaultValue="0">
          <Summary><![CDATA[Width of margin between columns in pixels. Overrides any style settings. Defaults to 0.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;6. RowLayout&quot;" />
            <Attribute Type="DefaultValue" RawValue="0" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Width of margin between columns in pixels. Overrides any style settings. Defaults to 0." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="LayoutConfig" Modifier="Override" Access="ProtectedInternal" Type="LayoutConfig">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Object" />
            <Attribute Type="Browsable" RawValue="false" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="RowLayoutConfig" Extends="LayoutConfig">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Background" Type="bool" DefaultValue="false">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Split" Type="bool" DefaultValue="false">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Margin" Type="int" DefaultValue="0">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="0" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="RowNumbererColumn" Extends="ColumnBase" Inherits="ICustomConfigSerialization">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Width" Modifier="Override" Type="Unit" DefaultValue="typeof(Unit), &quot;-1&quot;">
          <Summary><![CDATA[(optional) The initial width in pixels of the column. Using this instead of Ext.grid.Grid.autoSizeColumns is more efficient.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;2. ColumnBase&quot;" />
            <Attribute Type="DefaultValue" RawValue="typeof(Unit), &quot;-1&quot;" />
            <Attribute Type="Description" RawValue="(optional) The initial width in pixels of the column. Using this instead of Ext.grid.Grid.autoSizeColumns is more efficient." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RowSpan" Type="int" DefaultValue="1">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;rowspan&quot;" />
            <Attribute Type="DefaultValue" RawValue="1" />
            <Attribute Type="Category" RawValue="&quot;2. ColumnBase&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="RowSelectionModel" Extends="AbstractSelectionModel">
      <Summary><![CDATA[The default SelectionModel used by Ext.grid.Grid. It supports multiple selections and keyboard selection/navigation. The objects stored as selections and returned by getSelected, and getSelections are the Records which provide the data for the selected rows.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="Description" RawValue="The default SelectionModel used by Ext.grid.Grid. It supports multiple selections and keyboard selection/navigation. The objects stored as selections and returned by getSelected, and getSelections are the Records which provide the data for the selected rows." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="SingleSelect" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to allow selection of only one row at a time (defaults to false).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to allow selection of only one row at a time (defaults to false)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MoveEditorOnEnter" Type="bool" DefaultValue="true">
          <Summary><![CDATA[False to turn off moving the editor to the next cell when the enter key is pressed.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="False to turn off moving the editor to the next cell when the enter key is pressed." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Listeners" Type="RowSelectionModelListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="RowSelectionModelDirectEvents">
          <Summary><![CDATA[Server-side Ajax Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="Description" RawValue="Server-side Ajax Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SelectedRows" Type="SelectedRowCollection">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="ConfigOption" RawValue="&quot;selectedData&quot;,JsonMode.AlwaysArray" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SelectedRow" Type="SelectedRow">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SelectedIndex" Type="int" DefaultValue="-1">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="-1" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SelectedRecordID" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IgnoreTargets" Type="string[]" DefaultValue="null">
          <Summary><![CDATA[The list of selectors of the ignore targets]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="typeof(StringArrayJsonConverter)" />
            <Attribute Type="TypeConverter" RawValue="typeof(StringArrayConverter)" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="The list of selectors of the ignore targets" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods>
        <Method Name="UpdateSelection" Modifier="Override">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="ClearSelections">
          <Summary><![CDATA[Clears all selections.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Clears all selections." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="DeselectRange" ParamsRaw="int startRow, int endRow">
          <Summary><![CDATA[Deselects a range of rows. All rows in between startRow and endRow are also deselected.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Deselects a range of rows. All rows in between startRow and endRow are also deselected." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="DeselectRow" ParamsRaw="int row">
          <Summary><![CDATA[Deselects a row.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Deselects a row." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SelectAll">
          <Summary><![CDATA[Deselects a row.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Deselects a row." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SelectFirstRow">
          <Summary><![CDATA[Selects the first row in the grid.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Selects the first row in the grid." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SelectLastRow">
          <Summary><![CDATA[Select the last row.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Select the last row." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SelectLastRow" ParamsRaw="bool keepExisting">
          <Summary><![CDATA[Select the last row.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Select the last row." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SelectNext">
          <Summary><![CDATA[Selects the row immediately following the last selected row.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Selects the row immediately following the last selected row." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SelectNext" ParamsRaw="bool keepExisting">
          <Summary><![CDATA[Selects the row immediately following the last selected row.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Selects the row immediately following the last selected row." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SelectPrevious">
          <Summary><![CDATA[Selects the row that precedes the last selected row.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Selects the row that precedes the last selected row." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SelectPrevious" ParamsRaw="bool keepExisting">
          <Summary><![CDATA[Selects the row immediately following the last selected row.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Selects the row immediately following the last selected row." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SelectRange" ParamsRaw="int startRow, int endRow">
          <Summary><![CDATA[Selects a range of rows. All rows in between startRow and endRow are also selected.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Selects a range of rows. All rows in between startRow and endRow are also selected." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SelectRange" ParamsRaw="int startRow, int endRow, bool keepExisting">
          <Summary><![CDATA[Selects a range of rows. All rows in between startRow and endRow are also selected.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Selects a range of rows. All rows in between startRow and endRow are also selected." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SelectById" ParamsRaw="object id, bool keepExisting">
          <Summary><![CDATA[Select rows by id.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Select rows by id." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SelectById" ParamsRaw="object id">
          <Summary><![CDATA[Select rows by id.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Select rows by id." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SelectById" ParamsRaw="object[] ids, bool keepExisting">
          <Summary><![CDATA[Select rows by id.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Select rows by id." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SelectById" ParamsRaw="object[] ids">
          <Summary><![CDATA[Select rows by id.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Select rows by id." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SelectRow" ParamsRaw="int row">
          <Summary><![CDATA[Selects a row.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Selects a row." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SelectRow" ParamsRaw="int row, bool keepExisting">
          <Summary><![CDATA[Selects a row.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Selects a row." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SelectRows" ParamsRaw="int[] rows, bool keepExisting">
          <Summary><![CDATA[Selects multiple rows.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Selects multiple rows." />
          </Attributes>
          <Parameters />
        </Method>
      </Methods>
    </Class>
    <Class Name="RowSelectionModelDirectEvents" Extends="ComponentBaseDirectEvents">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="BeforeRowSelect" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when a row is being selected, return false to cancel.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(RowSelectionModel), &quot;SelectionModel&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;rowIndex&quot;, typeof(int), &quot;The selected index&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;keepExisting&quot;, typeof(bool), &quot;False if other selections will be cleared&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;record&quot;, typeof(object), &quot;The record to be selected&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforerowselect&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a row is being selected, return false to cancel." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RowDeselect" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when a row is deselected.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(RowSelectionModel), &quot;SelectionModel&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;rowIndex&quot;, typeof(int), &quot;The selected index&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;record&quot;, typeof(object), &quot;The selected record&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;rowdeselect&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a row is deselected." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RowSelect" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when a row is selected.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(RowSelectionModel), &quot;SelectionModel&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;rowIndex&quot;, typeof(int), &quot;The selected index&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;record&quot;, typeof(object), &quot;The selected record&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;rowselect&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a row is selected." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SelectionChange" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when the selection changes.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(RowSelectionModel), &quot;SelectionModel&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;selectionchange&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the selection changes." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeCheckAllClick" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when click on the check all.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(RowSelectionModel), &quot;SelectionModel&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;checked&quot;, typeof(bool), &quot;checked state&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforecheckallclick&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when click on the check all." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AfterCheckAllClick" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when click on the check all.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(RowSelectionModel), &quot;SelectionModel&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;checked&quot;, typeof(bool), &quot;checked state&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;aftercheckallclick&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when click on the check all." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="RowSelectionModelListeners" Extends="ComponentBaseListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="BeforeRowSelect" Type="ComponentListener">
          <Summary><![CDATA[Fires when a row is being selected, return false to cancel.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(RowSelectionModel), &quot;SelectionModel&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;rowIndex&quot;, typeof(int), &quot;The selected index&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;keepExisting&quot;, typeof(bool), &quot;False if other selections will be cleared&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;record&quot;, typeof(object), &quot;The record to be selected&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforerowselect&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a row is being selected, return false to cancel." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RowDeselect" Type="ComponentListener">
          <Summary><![CDATA[Fires when a row is deselected.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(RowSelectionModel), &quot;SelectionModel&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;rowIndex&quot;, typeof(int), &quot;The selected index&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;record&quot;, typeof(object), &quot;The selected record&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;rowdeselect&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a row is deselected." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RowSelect" Type="ComponentListener">
          <Summary><![CDATA[Fires when a row is selected.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(RowSelectionModel), &quot;SelectionModel&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;rowIndex&quot;, typeof(int), &quot;The selected index&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;record&quot;, typeof(object), &quot;The selected record&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;rowselect&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a row is selected." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SelectionChange" Type="ComponentListener">
          <Summary><![CDATA[Fires when the selection changes.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(RowSelectionModel), &quot;SelectionModel&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;selectionchange&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the selection changes." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeCheckAllClick" Type="ComponentListener">
          <Summary><![CDATA[Fires when click on the check all.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(RowSelectionModel), &quot;SelectionModel&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;checked&quot;, typeof(bool), &quot;checked state&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforecheckallclick&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when click on the check all." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AfterCheckAllClick" Type="ComponentListener">
          <Summary><![CDATA[Fires when click on the check all.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(RowSelectionModel), &quot;SelectionModel&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;checked&quot;, typeof(bool), &quot;checked state&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;aftercheckallclick&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when click on the check all." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="SaveMask" Extends="LoadMask">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Msg" Modifier="Override" Type="string" DefaultValue="&quot;Saving...&quot;">
          <Summary><![CDATA[The text to display in a centered saving message box (defaults to 'Saving...').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;Saving...&quot;" />
            <Attribute Type="Description" RawValue="The text to display in a centered saving message box (defaults to 'Saving...')." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="Scale" Extends="Fx">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="FxName" Modifier="Override" Type="string">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ScriptClass" Abstract="true" Extends="IScriptable" Inherits="IResourceManager">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="ScriptTagProxy" Extends="DataProxy">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="CallbackParam" Type="string" DefaultValue="&quot;callback&quot;">
          <Summary><![CDATA[The name of the parameter to pass to the server which tells the server the name of the callback function set up by the load call to process the returned data object.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;callback&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The name of the parameter to pass to the server which tells the server the name of the callback function set up by the load call to process the returned data object." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="NoCache" Type="bool" DefaultValue="true">
          <Summary><![CDATA[Whether a new request should abort any pending requests. (defaults to false)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;nocache&quot;" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Whether a new request should abort any pending requests. (defaults to false)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Timeout" Type="int" DefaultValue="30000">
          <Summary><![CDATA[(optional) The number of milliseconds to wait for a response. Defaults to 30 seconds.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="30000" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="(optional) The number of milliseconds to wait for a response. Defaults to 30 seconds." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Url" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The URL from which to request the data object.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Editor" RawValue="typeof(System.Web.UI.Design.UrlEditor), typeof(System.Drawing.Design.UITypeEditor)" />
            <Attribute Type="Description" RawValue="The URL from which to request the data object." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="SelectBox" Extends="ComboBox">
      <Attributes />
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="SelectedCell" Extends="StateManagedItem">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="RowIndex" Type="int" DefaultValue="-1">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="DefaultValue" RawValue="-1" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ColIndex" Type="int" DefaultValue="-1">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="DefaultValue" RawValue="-1" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RecordID" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Name" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="SelectedCellSerializable" Extends="SelectedCell">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="SelectedListItem" Extends="StateManagedItem">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Value" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Index" Type="int" DefaultValue="-1">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="-1" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="SelectedListItemCollection" Extends="StateManagedCollection&lt;SelectedListItem&gt;">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="SelectedRow" Extends="StateManagedItem">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="RecordID" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RowIndex" Type="int" DefaultValue="-1">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="DefaultValue" RawValue="-1" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="SelectedRowCollection" Extends="StateManagedCollection&lt;SelectedRow&gt;">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="SelectionModelCollection" Extends="SingleItemCollection&lt;AbstractSelectionModel&gt;">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Primary" Type="AbstractSelectionModel">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="typeof(LazyControlJsonConverter)" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="SelfRenderingPage" Extends="Page" Inherits="ISelfRenderingPage">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="ShadowJsonConverter" Extends="ExtJsonConverter">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="Shift" Extends="Fx">
      <Summary><![CDATA[Animates the transition of any combination of an element's dimensions, xy position and/or opacity. Any of these properties not specified in the config object will not be changed. This effect requires that at least one new dimension, position or opacity setting must be passed in on the config object in order for the function to have any effect. ]]></Summary>
      <Attributes>
        <Attribute Type="Description" RawValue="Animates the transition of any combination of an element's dimensions, xy position and/or opacity. Any of these properties not specified in the config object will not be changed. This effect requires that at least one new dimension, position or opacity setting must be passed in on the config object in order for the function to have any effect. " />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="FxName" Modifier="Override" Type="string">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ShiftConfig" Extends="FxConfig">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Width" Type="int?" DefaultValue="null">
          <Summary><![CDATA[Element's width]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="Element's width" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Height" Type="int?" DefaultValue="null">
          <Summary><![CDATA[Element's height]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="Element's height" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="X" Type="int?" DefaultValue="null">
          <Summary><![CDATA[Element's x position]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="Element's x position" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Y" Type="int?" DefaultValue="null">
          <Summary><![CDATA[Element's y position]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="Element's y position" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Opacity" Type="float?" DefaultValue="null">
          <Summary><![CDATA[Element's opacity]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="Element's opacity" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="SimpleListener" Extends="StateManagedItem">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="SimpleToolTip" Extends="StateManagedItem">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Title" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Text" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="SingleItemCollection&lt;T&gt; : Collection&lt;T&gt;" Inherits="IXObject">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="SingleItemStateCollection&lt;T&gt; : SingleItemCollection&lt;T&gt;" Inherits="IStateManagerwhereT:IStateManager">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="SlideIn" Extends="Fx">
      <Summary><![CDATA[Slides the element into view. An anchor point can be optionally passed to set the point of origin for the slide effect. This function automatically handles wrapping the element with a fixed-size container if needed. ]]></Summary>
      <Attributes>
        <Attribute Type="Description" RawValue="Slides the element into view. An anchor point can be optionally passed to set the point of origin for the slide effect. This function automatically handles wrapping the element with a fixed-size container if needed. " />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="FxName" Modifier="Override" Type="string">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="SlideOut" Extends="SlideIn">
      <Summary><![CDATA[Slides the element out of view. An anchor point can be optionally passed to set the end point for the slide effect. When the effect is completed, the element will be hidden (visibility = 'hidden') but block elements will still take up space in the document. The element must be removed from the DOM using the 'remove' config option if desired. This function automatically handles wrapping the element with a fixed-size container if needed.]]></Summary>
      <Attributes>
        <Attribute Type="Description" RawValue="Slides the element out of view. An anchor point can be optionally passed to set the end point for the slide effect. When the effect is completed, the element will be hidden (visibility = 'hidden') but block elements will still take up space in the document. The element must be removed from the DOM using the 'remove' config option if desired. This function automatically handles wrapping the element with a fixed-size container if needed." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="FxName" Modifier="Override" Type="string">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="Slider" Extends="SliderBase" Inherits="IPostBackDataHandler">
      <Summary><![CDATA[Slider which supports vertical or horizontal orientation, keyboard adjustments, configurable snapping, axis clicking and animation.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(Slider), &quot;Build.ToolboxIcons.Slider.bmp&quot;" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:Slider runat=\&quot;server\&quot; /&gt;&quot;" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="Description" RawValue="Slider which supports vertical or horizontal orientation, keyboard adjustments, configurable snapping, axis clicking and animation." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Listeners" Type="SliderListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="SliderDirectEvents">
          <Summary><![CDATA[Server-side DirectEventHandlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Server-side DirectEventHandlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="SliderBase" Abstract="true" Extends="BoxComponentBase">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Value" Type="int" DefaultValue="int.MinValue">
          <Summary><![CDATA[The Number (int) to initialize this field with.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;Appearance&quot;" />
            <Attribute Type="DefaultValue" RawValue="int.MinValue" />
            <Attribute Type="Bindable" RawValue="true, BindingDirection.TwoWay" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetValueProxy&quot;" />
            <Attribute Type="Description" RawValue="The Number (int) to initialize this field with." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Values" Type="int[]" DefaultValue="null">
          <Summary><![CDATA[Thumbs values list]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;values&quot;, typeof(IntArrayJsonConverter)" />
            <Attribute Type="TypeConverter" RawValue="typeof(IntArrayConverter)" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="Thumbs values list" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ValueProxy" Access="Protected" Type="int" DefaultValue="int.MinValue">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;value&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="int.MinValue" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Animate" Type="bool" DefaultValue="true">
          <Summary><![CDATA[Turn on or off animation. Defaults to true]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Slider&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Turn on or off animation. Defaults to true" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ClickToChange" Type="bool" DefaultValue="true">
          <Summary><![CDATA[Determines whether or not clicking on the Slider axis will change the slider. Defaults to true]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Slider&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Determines whether or not clicking on the Slider axis will change the slider. Defaults to true" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ConstrainThumbs" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to disallow thumbs from overlapping one another. Defaults to true]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Slider&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to disallow thumbs from overlapping one another. Defaults to true" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DecimalPrecision" Type="int" DefaultValue="0">
          <Summary><![CDATA[The number of decimal places to which to round the Slider's value. Defaults to 0.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Slider&quot;" />
            <Attribute Type="DefaultValue" RawValue="0" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The number of decimal places to which to round the Slider's value. Defaults to 0." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Increment" Type="int" DefaultValue="0">
          <Summary><![CDATA[How many units to change the slider when adjusting by drag and drop. Use this option to enable 'snapping'.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Slider&quot;" />
            <Attribute Type="DefaultValue" RawValue="0" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="How many units to change the slider when adjusting by drag and drop. Use this option to enable 'snapping'." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="KeyIncrement" Type="int" DefaultValue="1">
          <Summary><![CDATA[How many units to change the Slider when adjusting with keyboard navigation. Defaults to 1. If the increment config is larger, it will be used instead.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Slider&quot;" />
            <Attribute Type="DefaultValue" RawValue="1" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="How many units to change the Slider when adjusting with keyboard navigation. Defaults to 1. If the increment config is larger, it will be used instead." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MaxValue" Type="int" DefaultValue="100">
          <Summary><![CDATA[The maximum value for the Slider. Defaults to 100.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Slider&quot;" />
            <Attribute Type="DefaultValue" RawValue="100" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The maximum value for the Slider. Defaults to 100." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MinValue" Type="int" DefaultValue="0">
          <Summary><![CDATA[The minimum value for the Slider. Defaults to 0.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Slider&quot;" />
            <Attribute Type="DefaultValue" RawValue="0" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The minimum value for the Slider. Defaults to 0." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Vertical" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Orient the Slider vertically rather than horizontally, defaults to false.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Slider&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Orient the Slider vertically rather than horizontally, defaults to false." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TopThumbZIndex" Type="int" DefaultValue="10000">
          <Summary><![CDATA[The number used to set the z index of the top thumb]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. Slider&quot;" />
            <Attribute Type="DefaultValue" RawValue="10000" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The number used to set the z index of the top thumb" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods>
        <Method Name="SetValue" ParamsRaw="int value">
          <Summary><![CDATA[Programmatically sets the value of the Slider. Ensures that the value is constrained within the minValue and maxValue.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Programmatically sets the value of the Slider. Ensures that the value is constrained within the minValue and maxValue." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SetValue" ParamsRaw="int index, int value">
          <Summary><![CDATA[Programmatically sets the value of the Slider. Ensures that the value is constrained within the minValue and maxValue.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Programmatically sets the value of the Slider. Ensures that the value is constrained within the minValue and maxValue." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SetValue" ParamsRaw="int value, bool animate">
          <Summary><![CDATA[Programmatically sets the value of the Slider. Ensures that the value is constrained within the minValue and maxValue.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Programmatically sets the value of the Slider. Ensures that the value is constrained within the minValue and maxValue." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SetValue" ParamsRaw="int index, int value, bool animate">
          <Summary><![CDATA[Programmatically sets the value of the Slider. Ensures that the value is constrained within the minValue and maxValue.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Programmatically sets the value of the Slider. Ensures that the value is constrained within the minValue and maxValue." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SyncThumb">
          <Summary><![CDATA[Synchronizes the thumb position to the proper proportion of the total component width based on the current slider value. This will be called automatically when the Slider is resized by a layout, but if it is rendered auto width, this method can be called from another resize handler to sync the Slider if necessary.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Synchronizes the thumb position to the proper proportion of the total component width based on the current slider value. This will be called automatically when the Slider is resized by a layout, but if it is rendered auto width, this method can be called from another resize handler to sync the Slider if necessary." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="AddThumb" ParamsRaw="int value">
          <Summary><![CDATA[Creates a new thumb and adds it to the slider]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Creates a new thumb and adds it to the slider" />
          </Attributes>
          <Parameters />
        </Method>
      </Methods>
    </Class>
    <Class Name="SliderDirectEvents" Extends="BoxComponentDirectEvents">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="BeforeChange" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before the slider value is changed. By returning false from an event handler, you can cancel the event and prevent the slider from changing.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;slider&quot;, typeof(Slider), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;newValue&quot;, typeof(int), &quot;The new value which the slider is being changed to.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;oldValue&quot;, typeof(int), &quot;The old value which the slider was previously.&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforechange&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the slider value is changed. By returning false from an event handler, you can cancel the event and prevent the slider from changing." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Change" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when the slider value is changed.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;slider&quot;, typeof(Slider), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;newValue&quot;, typeof(int), &quot;The new value which the slider has been changed to.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;thumb&quot;, typeof(object), &quot;The thumb that was changed&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;change&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the slider value is changed." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ChangeComplete" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when the slider value is changed by the user and any drag operations have completed.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;slider&quot;, typeof(Slider), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;newValue&quot;, typeof(int), &quot;The new value which the slider has been changed to.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;thumb&quot;, typeof(object), &quot;The thumb that was changed&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;changecomplete&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the slider value is changed by the user and any drag operations have completed." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Drag" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires continuously during the drag operation while the mouse is moving.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;slider&quot;, typeof(Slider), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object), &quot; Ext.EventObject - The event fired from Ext.dd.DragTracker&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;drag&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires continuously during the drag operation while the mouse is moving." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DragEnd" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after the drag operation has completed.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;slider&quot;, typeof(Slider), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object), &quot; Ext.EventObject - The event fired from Ext.dd.DragTracker&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;dragend&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the drag operation has completed." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DragStart" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after a drag operation has started.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;slider&quot;, typeof(Slider), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object), &quot; Ext.EventObject - The event fired from Ext.dd.DragTracker&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;dragstart&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after a drag operation has started." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="SliderField" Extends="Field">
      <Summary><![CDATA[Basic Label field.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:SliderField runat=\&quot;server\&quot; /&gt;&quot;" />
        <Attribute Type="SupportsEventValidation" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(SliderField), &quot;Build.ToolboxIcons.Slider.bmp&quot;" />
        <Attribute Type="Description" RawValue="Basic Label field." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Slider" Type="Slider">
          <Summary><![CDATA[Slider object config]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;slider&quot;, typeof(LazyControlJsonConverter)" />
            <Attribute Type="Category" RawValue="&quot;5. SliderField&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="Slider object config" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="SliderListeners" Extends="BoxComponentListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="BeforeChange" Type="ComponentListener">
          <Summary><![CDATA[Fires before the slider value is changed. By returning false from an event handler, you can cancel the event and prevent the slider from changing.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;slider&quot;, typeof(Slider), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;newValue&quot;, typeof(int), &quot;The new value which the slider is being changed to.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;oldValue&quot;, typeof(int), &quot;The old value which the slider was previously.&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforechange&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the slider value is changed. By returning false from an event handler, you can cancel the event and prevent the slider from changing." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Change" Type="ComponentListener">
          <Summary><![CDATA[Fires when the slider value is changed.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;slider&quot;, typeof(Slider), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;newValue&quot;, typeof(int), &quot;The new value which the slider has been changed to.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;thumb&quot;, typeof(object), &quot;The thumb that was changed&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;change&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the slider value is changed." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ChangeComplete" Type="ComponentListener">
          <Summary><![CDATA[Fires when the slider value is changed by the user and any drag operations have completed.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;slider&quot;, typeof(Slider), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;newValue&quot;, typeof(int), &quot;The new value which the slider has been changed to.&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;thumb&quot;, typeof(object), &quot;The thumb that was changed&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;changecomplete&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the slider value is changed by the user and any drag operations have completed." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Drag" Type="ComponentListener">
          <Summary><![CDATA[Fires continuously during the drag operation while the mouse is moving.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;slider&quot;, typeof(Slider), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object), &quot; Ext.EventObject - The event fired from Ext.dd.DragTracker&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;drag&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires continuously during the drag operation while the mouse is moving." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DragEnd" Type="ComponentListener">
          <Summary><![CDATA[Fires after the drag operation has completed.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;slider&quot;, typeof(Slider), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object), &quot; Ext.EventObject - The event fired from Ext.dd.DragTracker&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;dragend&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the drag operation has completed." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DragStart" Type="ComponentListener">
          <Summary><![CDATA[Fires after a drag operation has started.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;slider&quot;, typeof(Slider), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object), &quot; Ext.EventObject - The event fired from Ext.dd.DragTracker&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;dragstart&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after a drag operation has started." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="SliderTip" Extends="Plugin">
      <Summary><![CDATA[Simple plugin for using an Ext.Tip with a slider to show the slider value]]></Summary>
      <Attributes>
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(SliderTip), &quot;Build.ToolboxIcons.Plugin.bmp&quot;" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:SliderTip runat=\&quot;server\&quot; /&gt;&quot;" />
        <Attribute Type="Description" RawValue="Simple plugin for using an Ext.Tip with a slider to show the slider value" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="GetText" Type="JFunction" DefaultValue="null">
          <Summary><![CDATA[Override this function to apply custom tip text]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;3. SliderTip&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="Override this function to apply custom tip text" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="SlidingPager" Extends="Plugin">
      <Attributes>
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(SlidingPager), &quot;Build.ToolboxIcons.Plugin.bmp&quot;" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:SlidingPager runat=\&quot;server\&quot; /&gt;&quot;" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="GetText" Type="JFunction" DefaultValue="null">
          <Summary><![CDATA[Override this function to apply custom tip text]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;3. SlidingPager&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="Override this function to apply custom tip text" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="SortInfo" Extends="StateManagedItem">
      <Summary><![CDATA[A config object in the format: {field: 'fieldName', direction: 'ASC|DESC'}. The direction property is case-sensitive.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="DefaultProperty" RawValue="&quot;Field&quot;" />
        <Attribute Type="Description" RawValue="A config object in the format: {field: 'fieldName', direction: 'ASC|DESC'}. The direction property is case-sensitive." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Field" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[Internal UI Event. Fired before the view is refreshed.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Internal UI Event. Fired before the view is refreshed." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Direction" Type="SortDirection" DefaultValue="SortDirection.Default">
          <Summary><![CDATA[The direction to sort (\"asc\" or \"desc\")]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="DefaultValue" RawValue="SortDirection.Default" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The direction to sort (\&quot;asc\&quot; or \&quot;desc\&quot;)" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="Spinner" Extends="Plugin">
      <Summary><![CDATA[Spinner plugin]]></Summary>
      <Attributes>
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:Spinner runat=\&quot;server\&quot;&gt;&lt;/{0}:Spinner&gt;&quot;" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(Spinner), &quot;Build.ToolboxIcons.Spinner.bmp&quot;" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="Description" RawValue="Spinner plugin" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="IncrementValue" Type="double" DefaultValue="1.0">
          <Summary><![CDATA[Increment Value]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. Spinner&quot;" />
            <Attribute Type="DefaultValue" RawValue="1.0" />
            <Attribute Type="Description" RawValue="Increment Value" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AlternateIncrementValue" Type="double" DefaultValue="5.0">
          <Summary><![CDATA[Alerternate Increment Value]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. Spinner&quot;" />
            <Attribute Type="DefaultValue" RawValue="5.0" />
            <Attribute Type="Description" RawValue="Alerternate Increment Value" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TriggerClass" Type="string" DefaultValue="&quot;x-form-spinner-trigger&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. Spinner&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;x-form-spinner-trigger&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SplitterClass" Type="string" DefaultValue="&quot;x-form-spinner-splitter&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. Spinner&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;x-form-spinner-splitter&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DefaultValue" Type="double" DefaultValue="0.0">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. Spinner&quot;" />
            <Attribute Type="DefaultValue" RawValue="0.0" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Accelerate" Type="bool" DefaultValue="false">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. Spinner&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MimicReadOnly" Type="bool" DefaultValue="false">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. Spinner&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Listeners" Type="SpinnerListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="SpinnerDirectEvents">
          <Summary><![CDATA[Server-side Ajax Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Server-side Ajax Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MaxValue" Type="int" DefaultValue="int.MaxValue">
          <Summary><![CDATA[The maximum allowed value (defaults to int.MaxValue)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. Spinner&quot;" />
            <Attribute Type="DefaultValue" RawValue="int.MaxValue" />
            <Attribute Type="Description" RawValue="The maximum allowed value (defaults to int.MaxValue)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MinValue" Type="int" DefaultValue="int.MinValue">
          <Summary><![CDATA[The minimum allowed value (defaults to int.MinValue)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. Spinner&quot;" />
            <Attribute Type="DefaultValue" RawValue="int.MinValue" />
            <Attribute Type="Description" RawValue="The minimum allowed value (defaults to int.MinValue)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Value" Type="int" DefaultValue="int.MinValue">
          <Summary><![CDATA[The minimum allowed value (defaults to int.MinValue)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. Spinner&quot;" />
            <Attribute Type="DefaultValue" RawValue="int.MinValue" />
            <Attribute Type="Description" RawValue="The minimum allowed value (defaults to int.MinValue)" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods>
        <Method Name="Spin">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Spin" ParamsRaw="bool down">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Spin" ParamsRaw="bool down, bool alternate">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="FixBoundries" ParamsRaw="double value">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" />
          </Attributes>
          <Parameters />
        </Method>
      </Methods>
    </Class>
    <Class Name="SpinnerDirectEvents" Extends="ComponentDirectEvents">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Spin" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Field), &quot;This field&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;spin&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SpinUp" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Field), &quot;This field&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;spinup&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SpinDown" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Field), &quot;This field&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;spindown&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="SpinnerField" Extends="NumberFieldBase">
      <Summary><![CDATA[Spinner Field]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:SpinnerField runat=\&quot;server\&quot;&gt;&lt;/{0}:SpinnerField&gt;&quot;" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(Spotlight), &quot;Build.ToolboxIcons.SpinnerField.bmp&quot;" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="Description" RawValue="Spinner Field" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="DeferHeight" Type="bool" DefaultValue="true">
          <Summary><![CDATA[Increment Value]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;8. SpinnerField&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="Increment Value" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IncrementValue" Type="double" DefaultValue="1.0">
          <Summary><![CDATA[Increment Value]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;8. SpinnerField&quot;" />
            <Attribute Type="DefaultValue" RawValue="1.0" />
            <Attribute Type="Description" RawValue="Increment Value" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AlternateIncrementValue" Type="double" DefaultValue="5.0">
          <Summary><![CDATA[Alerternate Increment Value]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;8. SpinnerField&quot;" />
            <Attribute Type="DefaultValue" RawValue="5.0" />
            <Attribute Type="Description" RawValue="Alerternate Increment Value" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TriggerClass" Type="string" DefaultValue="&quot;x-form-spinner-trigger&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;8. SpinnerField&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;x-form-spinner-trigger&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SplitterClass" Type="string" DefaultValue="&quot;x-form-spinner-splitter&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;8. SpinnerField&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;x-form-spinner-splitter&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DefaultValue" Type="double" DefaultValue="0.0">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;8. SpinnerField&quot;" />
            <Attribute Type="DefaultValue" RawValue="0.0" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Accelerate" Type="bool" DefaultValue="false">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;8. SpinnerField&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Listeners" Type="SpinnerFieldListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="SpinnerFieldDirectEvents">
          <Summary><![CDATA[Server-side Ajax Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Server-side Ajax Event Handlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods>
        <Method Name="Spin">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Spin" ParamsRaw="bool down">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Spin" ParamsRaw="bool down, bool alternate">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="FixBoundries" ParamsRaw="double value">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" />
          </Attributes>
          <Parameters />
        </Method>
      </Methods>
    </Class>
    <Class Name="SpinnerFieldDirectEvents" Extends="TextFieldDirectEvents">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Spin" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when the autosize function is triggered. The field may or may not have actually changed size according to the default logic, but this event provides a hook for the developer to apply additional logic at runtime to resize the field if needed.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Field), &quot;This text field&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;spin&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the autosize function is triggered. The field may or may not have actually changed size according to the default logic, but this event provides a hook for the developer to apply additional logic at runtime to resize the field if needed." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SpinUp" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when the autosize function is triggered. The field may or may not have actually changed size according to the default logic, but this event provides a hook for the developer to apply additional logic at runtime to resize the field if needed.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Field), &quot;This text field&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;spinup&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the autosize function is triggered. The field may or may not have actually changed size according to the default logic, but this event provides a hook for the developer to apply additional logic at runtime to resize the field if needed." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SpinDown" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when the autosize function is triggered. The field may or may not have actually changed size according to the default logic, but this event provides a hook for the developer to apply additional logic at runtime to resize the field if needed.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Field), &quot;This text field&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;spindown&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the autosize function is triggered. The field may or may not have actually changed size according to the default logic, but this event provides a hook for the developer to apply additional logic at runtime to resize the field if needed." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="SpinnerFieldListeners" Extends="NumberFieldListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Spin" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Field), &quot;This trigger field&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;spin&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SpinUp" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Field), &quot;This trigger field&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;spinup&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SpinDown" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Field), &quot;This trigger field&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;spindown&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="SpinnerListeners" Extends="ComponentListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Spin" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Field), &quot;This field&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;spin&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SpinUp" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Field), &quot;This field&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;spinup&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SpinDown" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Field), &quot;This field&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;spindown&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="SplitButton" Extends="SplitButtonBase">
      <Summary><![CDATA[A split button that provides a built-in dropdown arrow that can fire an event separately from the default click event of the button. Typically this would be used to display a dropdown menu that provides additional options to the primary button action, but any custom handler can provide the arrowclick implementation.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" RawValue="A split button that provides a built-in dropdown arrow that can fire an event separately from the default click event of the button. Typically this would be used to display a dropdown menu that provides additional options to the primary button action, but any custom handler can provide the arrowclick implementation." />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:SplitButton runat=\&quot;server\&quot; Text=\&quot;Split Button\&quot; /&gt;&quot;" />
        <Attribute Type="DefaultEvent" RawValue="&quot;Click&quot;" />
        <Attribute Type="DefaultProperty" RawValue="&quot;Text&quot;" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(SplitButton), &quot;Build.ToolboxIcons.SplitButton.bmp&quot;" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Listeners" Type="SplitButtonListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="SplitButtonDirectEvents">
          <Summary><![CDATA[Server-side Ajax Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="Description" RawValue="Server-side Ajax Event Handlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="SplitButtonBase" Abstract="true" Extends="ButtonBase">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="ArrowHandler" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A function called when the arrow button is clicked (can be used instead of click event).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;6. SplitButton&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="A function called when the arrow button is clicked (can be used instead of click event)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ArrowTooltip" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The title attribute of the arrow.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Category" RawValue="&quot;6. SplitButton&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The title attribute of the arrow." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="SplitButtonDirectEvents" Extends="ButtonDirectEvents">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="ArrowClick" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when this button's arrow is clicked.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(SplitButton), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object), &quot;The click event&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;arrowclick&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when this button's arrow is clicked." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="SplitButtonListeners" Extends="ButtonListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="ArrowClick" Type="ComponentListener">
          <Summary><![CDATA[Fires when this button's arrow is clicked.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(SplitButton), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object), &quot;The click event&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;arrowclick&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when this button's arrow is clicked." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="SplitCommand" Extends="GridCommand">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="XType" Modifier="Override" Access="ProtectedInternal" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;xtype&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="Spotlight" Extends="Observable" Inherits="IVirtual">
      <Summary><![CDATA[This control allows you to restrict input to a particular element by masking all other page content.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:Spotlight runat=\&quot;server\&quot;&gt;&lt;/{0}:Spotlight&gt;&quot;" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(Spotlight), &quot;Build.ToolboxIcons.Spotlight.bmp&quot;" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="Description" RawValue="This control allows you to restrict input to a particular element by masking all other page content." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Animate" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to animate the spot (defaults to true).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. Spotlight&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to animate the spot (defaults to true)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Duration" Type="double" DefaultValue="0.25">
          <Summary><![CDATA[Animation duration if animate = true (defaults to .25)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. Spotlight&quot;" />
            <Attribute Type="DefaultValue" RawValue="0.25" />
            <Attribute Type="Description" RawValue="Animation duration if animate = true (defaults to .25)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Easing" Type="Easing" DefaultValue="Easing.EaseNone">
          <Summary><![CDATA[Animation easing if animate = true (defaults to 'easeNone')]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToCamelLower" />
            <Attribute Type="Category" RawValue="&quot;3. Spotlight&quot;" />
            <Attribute Type="DefaultValue" RawValue="Easing.EaseNone" />
            <Attribute Type="Description" RawValue="Animation easing if animate = true (defaults to 'easeNone')" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods>
        <Method Name="Show" ParamsRaw="string id">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Show" ParamsRaw="XControl control">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Hide">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" />
          </Attributes>
          <Parameters />
        </Method>
      </Methods>
    </Class>
    <Class Name="StartButtonConfig" Extends="StateManagedItem">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Icon" Type="Icon" DefaultValue="Icon.None">
          <Summary><![CDATA[The icon to use for the start button. See also, IconCls to set an icon with a custom Css class.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. StartButtonConfig&quot;" />
            <Attribute Type="DefaultValue" RawValue="Icon.None" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The icon to use for the start button. See also, IconCls to set an icon with a custom Css class." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IconCls" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A css class to be added to the start button icon element for applying css background images]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;2. StartButtonConfig&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="A css class to be added to the start button icon element for applying css background images" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Text" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;2. StartButtonConfig&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="StartMenuConfig" Extends="StateManagedItem" Inherits="IIcon">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Icon" Type="Icon" DefaultValue="Icon.None">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. StartMenuConfig&quot;" />
            <Attribute Type="DefaultValue" RawValue="Icon.None" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IconCls" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. StartMenuConfig&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IconClsProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;iconCls&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Width" Type="int" DefaultValue="300">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;2. StartMenuConfig&quot;" />
            <Attribute Type="DefaultValue" RawValue="300" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ToolsWidth" Type="int" DefaultValue="100">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;2. StartMenuConfig&quot;" />
            <Attribute Type="DefaultValue" RawValue="100" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Height" Type="int" DefaultValue="300">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;2. StartMenuConfig&quot;" />
            <Attribute Type="DefaultValue" RawValue="300" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Title" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;2. StartMenuConfig&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Shadow" Type="bool" DefaultValue="true">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;2. StartMenuConfig&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ToolItems" Type="ItemsCollection&lt;Component&gt;">
          <Summary><![CDATA[Collection of Tool items]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;toolItems&quot;, typeof(ItemCollectionJsonConverter)" />
            <Attribute Type="Category" RawValue="&quot;2. StartMenuConfig&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="Collection of Tool items" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Items" Type="ItemsCollection&lt;Component&gt;">
          <Summary><![CDATA[Items collection]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;items&quot;, typeof(ItemCollectionJsonConverter)" />
            <Attribute Type="Category" RawValue="&quot;2. StartMenuConfig&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="Items collection" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="StateManagedCollection&lt;T&gt; : IList&lt;T&gt;" Abstract="true" Inherits="IStateManager,IXObject,IListwhereT:StateManagedItem">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="StateManagedItem" Abstract="true" Extends="IStateManager" Inherits="IXObject">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="StatusBar" Extends="ToolbarBase">
      <Summary><![CDATA[Basic status bar component that can be used as the bottom toolbar of any Ext.Panel.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:StatusBar runat=\&quot;server\&quot;&gt;&lt;Items&gt;&lt;/Items&gt;&lt;/{0}:StatusBar&gt;&quot;" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(StatusBar), &quot;Build.ToolboxIcons.StatusBar.bmp&quot;" />
        <Attribute Type="Description" RawValue="Basic status bar component that can be used as the bottom toolbar of any Ext.Panel." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="AutoClear" Type="int" DefaultValue="5000">
          <Summary><![CDATA[The number of milliseconds to wait after setting the status via setStatus before automatically clearing the status text and icon (defaults to 5000). Note that this only applies when passing the clear argument to setStatus since that is the only way to defer clearing the status. This can be overridden by specifying a different wait value in setStatus. Calls to clearStatus always clear the status bar immediately and ignore this value.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. StatusBar&quot;" />
            <Attribute Type="DefaultValue" RawValue="5000" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The number of milliseconds to wait after setting the status via setStatus before automatically clearing the status text and icon (defaults to 5000). Note that this only applies when passing the clear argument to setStatus since that is the only way to defer clearing the status. This can be overridden by specifying a different wait value in setStatus. Calls to clearStatus always clear the status bar immediately and ignore this value." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BusyIcon" Type="Icon" DefaultValue="Icon.None">
          <Summary><![CDATA[The default Icon applied when calling showBusy (defaults to 'Icon.None'). It can be overridden at any time by passing the iconCls argument into showBusy. See the Icon or IconCls docs for additional details about customizing the icon.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;7. StatusBar&quot;" />
            <Attribute Type="DefaultValue" RawValue="Icon.None" />
            <Attribute Type="Description" RawValue="The default Icon applied when calling showBusy (defaults to 'Icon.None'). It can be overridden at any time by passing the iconCls argument into showBusy. See the Icon or IconCls docs for additional details about customizing the icon." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BusyIconClsProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;busyIconCls&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BusyIconCls" Type="string" DefaultValue="&quot;x-status-busy&quot;">
          <Summary><![CDATA[The default iconCls applied when calling showBusy (defaults to 'x-status-busy'). It can be overridden at any time by passing the iconCls argument into showBusy. See the iconCls docs for additional details about customizing the icon.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. StatusBar&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;x-status-busy&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The default iconCls applied when calling showBusy (defaults to 'x-status-busy'). It can be overridden at any time by passing the iconCls argument into showBusy. See the iconCls docs for additional details about customizing the icon." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BusyText" Type="string" DefaultValue="&quot;Loading...&quot;">
          <Summary><![CDATA[The default text applied when calling showBusy (defaults to 'Loading...'). It can be overridden at any time by passing the text argument into showBusy.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. StatusBar&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;Loading...&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The default text applied when calling showBusy (defaults to 'Loading...'). It can be overridden at any time by passing the text argument into showBusy." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Cls" Modifier="Override" Type="string" DefaultValue="&quot;x-statusbar&quot;">
          <Summary><![CDATA[The base class applied to the containing element for this component on render (defaults to 'x-statusbar')]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. StatusBar&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;x-statusbar&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The base class applied to the containing element for this component on render (defaults to 'x-statusbar')" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DefaultIcon" Type="Icon" DefaultValue="Icon.None">
          <Summary><![CDATA[The default Icon (see the Icon or IconCls docs for additional details about customizing the icon). This will be used anytime the status bar is cleared with the useDefaults:true option (defaults to 'Icon.None').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;7. StatusBar&quot;" />
            <Attribute Type="DefaultValue" RawValue="Icon.None" />
            <Attribute Type="Description" RawValue="The default Icon (see the Icon or IconCls docs for additional details about customizing the icon). This will be used anytime the status bar is cleared with the useDefaults:true option (defaults to 'Icon.None')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DefaultIconClsProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;defaultIconCls&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DefaultIconCls" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The default iconCls value (see the iconCls docs for additional details about customizing the icon). This will be used anytime the status bar is cleared with the useDefaults:true option (defaults to '').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. StatusBar&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The default iconCls value (see the iconCls docs for additional details about customizing the icon). This will be used anytime the status bar is cleared with the useDefaults:true option (defaults to '')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DefaultText" Type="string" DefaultValue="&quot;&amp;nbsp;&quot;">
          <Summary><![CDATA[The default text value. This will be used anytime the status bar is cleared with the useDefaults:true option (defaults to '').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. StatusBar&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="DefaultValue" RawValue="&quot;&amp;nbsp;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The default text value. This will be used anytime the status bar is cleared with the useDefaults:true option (defaults to '')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Icon" Type="Icon" DefaultValue="Icon.None">
          <Summary><![CDATA[An Icon that will be applied to the status element and is expected to provide a background image that will serve as the status bar icon (defaults to 'Icon.None'). The Icons is applied directly to the div that also contains the status text, so the rule should provide the appropriate padding on the div to make room for the image.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;7. StatusBar&quot;" />
            <Attribute Type="DefaultValue" RawValue="Icon.None" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName=&quot;SetIcon&quot;" />
            <Attribute Type="Description" RawValue="An Icon that will be applied to the status element and is expected to provide a background image that will serve as the status bar icon (defaults to 'Icon.None'). The Icons is applied directly to the div that also contains the status text, so the rule should provide the appropriate padding on the div to make room for the image." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IconClsProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;iconCls&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IconCls" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A CSS class that will be applied to the status element and is expected to provide a background image that will serve as the status bar icon (defaults to ''). The class is applied directly to the div that also contains the status text, so the rule should provide the appropriate padding on the div to make room for the image.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;7. StatusBar&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetIconClass&quot;" />
            <Attribute Type="Description" RawValue="A CSS class that will be applied to the status element and is expected to provide a background image that will serve as the status bar icon (defaults to ''). The class is applied directly to the div that also contains the status text, so the rule should provide the appropriate padding on the div to make room for the image." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="StatusAlign" Type="StatusAlign" DefaultValue="StatusAlign.Left">
          <Summary><![CDATA[The alignment of the status element within the overall StatusBar layout. When the StatusBar is rendered, it creates an internal div containing the status text and icon. Any additional Toolbar items added in the StatusBar's items config, or added via add or any of the supported add* methods, will be rendered, in added order, to the opposite side. The status element is greedy, so it will automatically expand to take up all sapce left over by any other items.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="Category" RawValue="&quot;7. StatusBar&quot;" />
            <Attribute Type="DefaultValue" RawValue="StatusAlign.Left" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The alignment of the status element within the overall StatusBar layout. When the StatusBar is rendered, it creates an internal div containing the status text and icon. Any additional Toolbar items added in the StatusBar's items config, or added via add or any of the supported add* methods, will be rendered, in added order, to the opposite side. The status element is greedy, so it will automatically expand to take up all sapce left over by any other items." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Text" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A string that will be rendered into the status element as the status message (defaults to '').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. StatusBar&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetText&quot;" />
            <Attribute Type="Description" RawValue="A string that will be rendered into the status element as the status message (defaults to '')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Listeners" Type="ToolbarListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="StatusBarDirectEvents">
          <Summary><![CDATA[Server-side Ajax Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Server-side Ajax Event Handlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods>
        <Method Name="ClearStatus">
          <Summary><![CDATA[Clears the status text and iconCls. Also supports clearing via an optional fade out animation.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Clears the status text and iconCls. Also supports clearing via an optional fade out animation." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="ClearStatus" ParamsRaw="StatusBarClearStatusConfig config">
          <Summary><![CDATA[Clears the status text and iconCls. Also supports clearing via an optional fade out animation.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Clears the status text and iconCls. Also supports clearing via an optional fade out animation." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SetStatus" ParamsRaw="string text">
          <Summary><![CDATA[Sets the status text and/or iconCls. Also supports automatically clearing the status that was set after a specified interval.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Sets the status text and/or iconCls. Also supports automatically clearing the status that was set after a specified interval." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SetStatus" ParamsRaw="StatusBarStatusConfig config">
          <Summary><![CDATA[Sets the status text and/or iconCls. Also supports automatically clearing the status that was set after a specified interval.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Sets the status text and/or iconCls. Also supports automatically clearing the status that was set after a specified interval." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="ShowBusy" ParamsRaw="string text">
          <Summary><![CDATA[Convenience method for setting the status text and icon to special values that are pre-configured to indicate a 'busy' state, usually for loading or processing activities.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Convenience method for setting the status text and icon to special values that are pre-configured to indicate a 'busy' state, usually for loading or processing activities." />
          </Attributes>
          <Parameters />
        </Method>
      </Methods>
    </Class>
    <Class Name="StatusBarClearConfig" Extends="ExtObject">
      <Summary><![CDATA[A config object containing any or all of the following properties. If this object is not specified the status will be cleared using the defaults.]]></Summary>
      <Attributes>
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="Description" RawValue="A config object containing any or all of the following properties. If this object is not specified the status will be cleared using the defaults." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Anim" Type="bool" DefaultValue="false">
          <Summary><![CDATA[False to clear the status immediately once the callback executes (defaults to true which fades the status out).]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="False to clear the status immediately once the callback executes (defaults to true which fades the status out)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="UseDefaults" Type="bool" DefaultValue="true">
          <Summary><![CDATA[False to completely clear the status text and iconCls (defaults to true which uses defaultText and defaultIconCls).]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="False to completely clear the status text and iconCls (defaults to true which uses defaultText and defaultIconCls)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Wait" Type="int" DefaultValue="-1">
          <Summary><![CDATA[The number of milliseconds to wait before clearing (defaults to autoClear).]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="-1" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The number of milliseconds to wait before clearing (defaults to autoClear)." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="StatusBarClearStatusConfig" Extends="XControl">
      <Summary><![CDATA[A config object containing any or all of the following properties. If this object is not specified the status will be cleared using the defaults.]]></Summary>
      <Attributes>
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="Description" RawValue="A config object containing any or all of the following properties. If this object is not specified the status will be cleared using the defaults." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Anim" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to clear the status by fading out the status element (defaults to false which clears immediately)]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to clear the status by fading out the status element (defaults to false which clears immediately)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="UseDefaults" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to reset the text and icon using defaultText and defaultIconCls (defaults to false which sets the text to '' and removes any existing icon class).]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to reset the text and icon using defaultText and defaultIconCls (defaults to false which sets the text to '' and removes any existing icon class)." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="StatusBarDirectEvents" Extends="BoxComponentDirectEvents">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="StatusBarListeners" Extends="BoxComponentListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="StatusBarStatusConfig" Extends="XControl">
      <Summary><![CDATA[A config object containing any or all of the following properties. If this object is not specified the status will be cleared using the defaults.]]></Summary>
      <Attributes>
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="Description" RawValue="A config object containing any or all of the following properties. If this object is not specified the status will be cleared using the defaults." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Text" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The status text to display. If not specified, any current status text will remain unchanged.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetText&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The status text to display. If not specified, any current status text will remain unchanged." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IconClsProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;iconCls&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ClearIcon" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to clear icon]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to clear icon" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ClearProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;clear&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="Store" Extends="StoreDataBound" Inherits="IPostBackEventHandler">
      <Summary><![CDATA[The Store class encapsulates a client side cache of Record objects which provide input data for Components such as the GridPanel, the ComboBox, or the DataView.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:Store runat=\&quot;server\&quot;&gt;&lt;/{0}:Store&gt;&quot;" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(Store), &quot;Build.ToolboxIcons.Store.bmp&quot;" />
        <Attribute Type="Description" RawValue="The Store class encapsulates a client side cache of Record objects which provide input data for Components such as the GridPanel, the ComboBox, or the DataView." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="MemoryProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;proxy&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeLoadParamsProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;beforeLoadParams&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeSaveParamsProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;beforeSaveParams&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Listeners" Type="StoreListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="StoreDirectEvents">
          <Summary><![CDATA[Server-side Ajax Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Server-side Ajax Event Handlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="StoreBase" Abstract="true" Extends="LazyObservable">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="AutoDestroy" Type="bool" DefaultValue="false">
          <Summary><![CDATA[true to destroy the store when the component the store is bound to is destroyed (defaults to false). Note: this should be set to true when using stores that are bound to only 1 component.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. Store&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="true to destroy the store when the component the store is bound to is destroyed (defaults to false). Note: this should be set to true when using stores that are bound to only 1 component." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AutoLoad" Type="bool" DefaultValue="true">
          <Summary><![CDATA[If passed, this store's load method is automatically called after creation with the autoLoad object.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;3. Store&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="If passed, this store's load method is automatically called after creation with the autoLoad object." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AutoLoadProxy" Access="Protected" Type="bool" DefaultValue="false">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;autoLoad&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Restful" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Defaults to false. Set to true to have the Store and the set Proxy operate in a RESTful manner.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. Store&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="Defaults to false. Set to true to have the Store and the set Proxy operate in a RESTful manner." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SaveAllFields" Type="bool" DefaultValue="true">
          <Summary><![CDATA[Save ALL fields of a modified record -- not just those that changed.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. Store&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="Save ALL fields of a modified record -- not just those that changed." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AutoSave" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Defaults to true causing the store to automatically save records to the server when a record is modified (ie: becomes 'dirty'). Specify false to manually call save to send all modifiedRecords to the server.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. Store&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="Defaults to true causing the store to automatically save records to the server when a record is modified (ie: becomes 'dirty'). Specify false to manually call save to send all modifiedRecords to the server." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AutoDecode" Type="bool" DefaultValue="false">
          <Summary><![CDATA[If true then submitted data will be decoded]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="If true then submitted data will be decoded" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BaseParams" Type="ParameterCollection">
          <Summary><![CDATA[An object containing properties which are to be sent as parameters on any HTTP request.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;3. Store&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="An object containing properties which are to be sent as parameters on any HTTP request." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AutoLoadParams" Type="ParameterCollection">
          <Summary><![CDATA[An object containing properties which are to be sent as parameters on auto load HTTP request.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;3. Store&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="An object containing properties which are to be sent as parameters on auto load HTTP request." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AutoLoadParamsProxy" Access="Protected" Type="ParameterCollection">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;autoLoad&quot;, typeof(AutoLoadParamsJsonConverter)" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="WriteBaseParams" Type="ParameterCollection">
          <Summary><![CDATA[An object containing properties which are to be sent as parameters on any HTTP request.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;3. Store&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="An object containing properties which are to be sent as parameters on any HTTP request." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Proxy" Type="ProxyCollection">
          <Summary><![CDATA[The Proxy object which provides access to a data object.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;proxy&gt;Proxy&quot;" />
            <Attribute Type="Category" RawValue="&quot;3. Store&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="The Proxy object which provides access to a data object." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="UpdateProxy" Type="UpdateProxyCollection">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;updateProxy&gt;Proxy&quot;" />
            <Attribute Type="Category" RawValue="&quot;3. Store&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Reader" Type="ReaderCollection">
          <Summary><![CDATA[The DataReader object which processes the data object and returns an Array of Ext.data.Record objects which are cached keyed by their id property.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;reader&gt;Reader&quot;" />
            <Attribute Type="Category" RawValue="&quot;3. Store&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="The DataReader object which processes the data object and returns an Array of Ext.data.Record objects which are cached keyed by their id property." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="PruneModifiedRecords" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to clear all modified record information each time the store is loaded or when a record is removed. (defaults to false).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. Store&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to clear all modified record information each time the store is loaded or when a record is removed. (defaults to false)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RemoteSort" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True if sorting is to be handled by requesting the Proxy to provide a refreshed version of the data object in sorted order, as opposed to sorting the Record cache in place (defaults to false). If remote sorting is specified, then clicking on a column header causes the current page to be requested from the server with the addition of the following two parameters: sort: String - The name (as specified in the Record's Field definition) of the field to sort on. dir : String - The direction of the sort, 'ASC' or 'DESC' (case-sensitive).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. Store&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True if sorting is to be handled by requesting the Proxy to provide a refreshed version of the data object in sorted order, as opposed to sorting the Record cache in place (defaults to false). If remote sorting is specified, then clicking on a column header causes the current page to be requested from the server with the addition of the following two parameters: sort: String - The name (as specified in the Record's Field definition) of the field to sort on. dir : String - The direction of the sort, 'ASC' or 'DESC' (case-sensitive)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RemotePaging" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to perform remote paging.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;3. Store&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="True to perform remote paging." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SortInfo" Type="SortInfo">
          <Summary><![CDATA[An object which determines the Store sorting information.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;Data&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="An object which determines the Store sorting information." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="WarningOnDirty" Type="bool" DefaultValue="true">
          <Summary><![CDATA[If true show a warning before load/reload if store has dirty data]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. Store&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="If true show a warning before load/reload if store has dirty data" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirtyWarningTitle" Type="string" DefaultValue="&quot;Uncommitted Changes&quot;">
          <Summary><![CDATA[The title of window showing before load if the dirty data exists]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Category" RawValue="&quot;3. Store&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;Uncommitted Changes&quot;" />
            <Attribute Type="Description" RawValue="The title of window showing before load if the dirty data exists" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirtyWarningText" Type="string" DefaultValue="&quot;You have uncommitted changes.  Are you sure you want to load/reload data?&quot;">
          <Summary><![CDATA[The text of window showing before load if the dirty data exists]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. Store&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;You have uncommitted changes.  Are you sure you want to load/reload data?&quot;" />
            <Attribute Type="Description" RawValue="The text of window showing before load if the dirty data exists" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RefreshAfterSaving" Type="RefreshAfterSavingMode" DefaultValue="RefreshAfterSavingMode.Auto">
          <Summary><![CDATA[The refresh mode]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;refreshAfterSave&quot;, JsonMode.Value" />
            <Attribute Type="Category" RawValue="&quot;3. Store&quot;" />
            <Attribute Type="DefaultValue" RawValue="RefreshAfterSavingMode.Auto" />
            <Attribute Type="Description" RawValue="The refresh mode" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="UseIdConfirmation" Type="bool" DefaultValue="false">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;useIdConfirmation&quot;, JsonMode.Value" />
            <Attribute Type="Category" RawValue="&quot;3. Store&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEventConfig" Type="BaseDirectEvent">
          <Attributes>
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ObjectAllowEmpty" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="GroupField" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The field name by which to sort the store's data (defaults to '').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. Store&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The field name by which to sort the store's data (defaults to '')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="GroupDir" Type="SortDirection" DefaultValue="SortDirection.Default">
          <Summary><![CDATA[Group field sorting direction]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="Category" RawValue="&quot;3. Store&quot;" />
            <Attribute Type="DefaultValue" RawValue="SortDirection.Default" />
            <Attribute Type="Description" RawValue="Group field sorting direction" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="GroupOnSort" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to sort the data on the grouping field when a grouping operation occurs, false to sort based on the existing sort info (defaults to false).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. Store&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to sort the data on the grouping field when a grouping operation occurs, false to sort based on the existing sort info (defaults to false)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RemoteGroup" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True if the grouping should apply on the server side, false if it is local only (defaults to false). If the grouping is local, it can be applied immediately to the data. If it is remote, then it will simply act as a helper, automatically sending the grouping field name as the 'groupBy' param with each XHR call.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. Store&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True if the grouping should apply on the server side, false if it is local only (defaults to false). If the grouping is local, it can be applied immediately to the data. If it is remote, then it will simply act as a helper, automatically sending the grouping field name as the 'groupBy' param with each XHR call." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IgnoreExtraFields" Type="bool" DefaultValue="true">
          <Summary><![CDATA[If true then only properties included to reader will be converted to json]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;3. Store&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="If true then only properties included to reader will be converted to json" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ShowWarningOnFailure" Type="bool" DefaultValue="true">
          <Summary><![CDATA[Show a Window with error message is DirectEvent request fails.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Show a Window with error message is DirectEvent request fails." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SkipIdForNewRecords" Type="bool" DefaultValue="true">
          <Summary><![CDATA[Skip Id field from save data for new records.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. Store&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="Skip Id field from save data for new records." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods>
        <Method Name="LoadData" ParamsRaw="object data">
          <Summary><![CDATA[Loads data from a passed data block. A Reader which understands the format of the data must have been configured in the constructor.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Loads data from a passed data block. A Reader which understands the format of the data must have been configured in the constructor." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="LoadData" ParamsRaw="object data, bool append">
          <Summary><![CDATA[Loads data from a passed data block. A Reader which understands the format of the data must have been configured in the constructor.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Loads data from a passed data block. A Reader which understands the format of the data must have been configured in the constructor." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="AddRecord" ParamsRaw="object values">
          <Summary><![CDATA[Add Record to the Store and fires the add event.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Add Record to the Store and fires the add event." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="AddRecord" ParamsRaw="object values, bool commit">
          <Summary><![CDATA[Add Record to the Store and fires the add event.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Add Record to the Store and fires the add event." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="InsertRecord" ParamsRaw="int index, object values">
          <Summary><![CDATA[Inserts Record into the Store at the given index and fires the add event.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Inserts Record into the Store at the given index and fires the add event." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="InsertRecord" ParamsRaw="int index, object values, bool commit">
          <Summary><![CDATA[Inserts Record into the Store at the given index and fires the add event.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Inserts Record into the Store at the given index and fires the add event." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="AddSortedRecord" ParamsRaw="object values">
          <Summary><![CDATA[(Local sort only) Inserts the passed Record into the Store at the index where it should go based on the current sort information.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="(Local sort only) Inserts the passed Record into the Store at the index where it should go based on the current sort information." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="AddSortedRecord" ParamsRaw="object values, bool commit">
          <Summary><![CDATA[(Local sort only) Inserts the passed Record into the Store at the index where it should go based on the current sort information.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="(Local sort only) Inserts the passed Record into the Store at the index where it should go based on the current sort information." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="ClearFilter">
          <Summary><![CDATA[Revert to a view of the Record cache with no filtering applied.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Revert to a view of the Record cache with no filtering applied." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="ClearFilter" ParamsRaw="bool suppressEvent">
          <Summary><![CDATA[Revert to a view of the Record cache with no filtering applied.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Revert to a view of the Record cache with no filtering applied." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="CommitChanges">
          <Summary><![CDATA[Commit all Records with outstanding changes. To handle updates for changes, subscribe to the Store's \"update\" event, and perform updating when the third parameter is Ext.data.Record.COMMIT.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Commit all Records with outstanding changes. To handle updates for changes, subscribe to the Store's \&quot;update\&quot; event, and perform updating when the third parameter is Ext.data.Record.COMMIT." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Filter" ParamsRaw="string field, string value, bool anyMatch, bool caseSensitive">
          <Summary><![CDATA[Filter the records by a specified property.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Filter the records by a specified property." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="FilterBy" ParamsRaw="JFunction fn">
          <Summary><![CDATA[Filter by a function. The specified function will be called for each Record in this Store. If the function returns true the Record is included, otherwise it is filtered out.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Filter by a function. The specified function will be called for each Record in this Store. If the function returns true the Record is included, otherwise it is filtered out." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="FilterBy" ParamsRaw="JFunction fn, string scope">
          <Summary><![CDATA[Filter by a function. The specified function will be called for each Record in this Store. If the function returns true the Record is included, otherwise it is filtered out.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Filter by a function. The specified function will be called for each Record in this Store. If the function returns true the Record is included, otherwise it is filtered out." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="RejectChanges">
          <Summary><![CDATA[Cancel outstanding changes on all changed records.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Cancel outstanding changes on all changed records." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="RemoveAll">
          <Summary><![CDATA[Remove all Records from the Store and fires the clear event.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Remove all Records from the Store and fires the clear event." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SetDefaultSort" ParamsRaw="string field, SortDirection dir">
          <Summary><![CDATA[Sets the default sort column and order to be used by the next load operation.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Sets the default sort column and order to be used by the next load operation." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Sort" ParamsRaw="string field, SortDirection dir">
          <Summary><![CDATA[Sort the Records. If remote sorting is used, the sort is performed on the server, and the cache is reloaded. If local sorting is used, the cache is sorted internally.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Sort the Records. If remote sorting is used, the sort is performed on the server, and the cache is reloaded. If local sorting is used, the cache is sorted internally." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="AddField" ParamsRaw="RecordField field, bool clearMeta">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="AddField" ParamsRaw="RecordField field">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="AddField" ParamsRaw="RecordField field, int index, bool clearMeta">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="RemoveField" ParamsRaw="RecordField field">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="RemoveFields">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="ClearMeta">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="UpdateRecordField" ParamsRaw="int rowIndex, string dataIndex, object value">
          <Summary><![CDATA[Update record field value]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Update record field value" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="UpdateRecordField" ParamsRaw="object id, string dataIndex, object value">
          <Summary><![CDATA[Update record field value]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Update record field value" />
          </Attributes>
          <Parameters />
        </Method>
      </Methods>
    </Class>
    <Class Name="StoreCollection" Extends="SingleItemCollection&lt;Store&gt;">
      <Attributes />
      <ConfigOptions>
        <ConfigOption Name="Primary" Type="Store">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="typeof(LazyControlJsonConverter)" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="StoreDataBound" Abstract="true" Extends="StoreBase">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="DataSource" Type="object" DefaultValue="null">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Bindable" RawValue="true" />
            <Attribute Type="Themeable" RawValue="true" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="DesignerSerializationVisibilityAttribute" RawValue="DesignerSerializationVisibility.Hidden" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DataSourceID" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="ThemeableAttribute" RawValue="false" />
            <Attribute Type="IDReferencePropertyAttribute" RawValue="typeof(DataSourceControl)" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DataMember" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ThemeableAttribute" RawValue="false" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods>
        <Method Name="DataBind" Modifier="Override">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" />
          </Attributes>
          <Parameters />
        </Method>
      </Methods>
    </Class>
    <Class Name="StoreDataHandler">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="StoreDirectEvents" Extends="ComponentBaseDirectEvents">
      <Attributes>
        <Attribute Type="TypeConverter" RawValue="typeof(DirectEventsConverter)" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Add" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when Records have been added to the Store]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;store&quot;, typeof(Store), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;records&quot;, typeof(object), &quot;The array of Records added&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;index&quot;, typeof(object), &quot;The index at which the record(s) were added&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;add&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when Records have been added to the Store" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeLoad" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before a request is made for a new data object. If the beforeload handler returns false the load action will be canceled]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;store&quot;, typeof(Store), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;options&quot;, typeof(object), &quot;The loading options that were specified (see load for details)&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeload&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before a request is made for a new data object. If the beforeload handler returns false the load action will be canceled" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Clear" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when the data cache has been cleared.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;store&quot;, typeof(Store), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;clear&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the data cache has been cleared." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DataChanged" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when the data cache has changed, and a widget which is using this Store as a Record cache should refresh its view.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;store&quot;, typeof(Store), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;datachanged&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the data cache has changed, and a widget which is using this Store as a Record cache should refresh its view." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Load" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after a new set of Records has been loaded.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;store&quot;, typeof(Store), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;records&quot;, typeof(Store), &quot;The Records that were loaded&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;options&quot;, typeof(Store), &quot;The loading options that were specified (see load for details)&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;load&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after a new set of Records has been loaded." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="LoadException" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires if an exception occurs in the Proxy during loading. Called with the signature of the Proxy's \"loadexception\" event.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;store&quot;, typeof(Store), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;options&quot;, typeof(DataProxy), &quot;options&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;response&quot;, typeof(DataProxy), &quot;response&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;e&quot;, typeof(DataProxy), &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;loadexception&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires if an exception occurs in the Proxy during loading. Called with the signature of the Proxy's \&quot;loadexception\&quot; event." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MetaChange" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when this store's reader provides new metadata (fields). This is currently only supported for JsonReaders.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;store&quot;, typeof(Store), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;meta&quot;, typeof(Store), &quot;The JSON metadata&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;metachange&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when this store's reader provides new metadata (fields). This is currently only supported for JsonReaders." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Remove" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when a Record has been removed from the Store]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;store&quot;, typeof(Store), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;records&quot;, typeof(object), &quot;The Record that was removed&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;index&quot;, typeof(object), &quot;The index at which the record was removed&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;remove&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a Record has been removed from the Store" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Update" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when a Record has been updated]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;store&quot;, typeof(Store), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;records&quot;, typeof(object), &quot;The Record that was updated&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;operation&quot;, typeof(object), &quot;The update operation being performed&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;update&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a Record has been updated" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeSave" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before a network request is made to save a data object. If the beforesave handler returns false the save action will be canceled]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;store&quot;, typeof(Store), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;params&quot;, typeof(object), &quot;The saving params that were specified&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforesave&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before a network request is made to save a data object. If the beforesave handler returns false the save action will be canceled" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Save" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before the save method's callback is called.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;store&quot;, typeof(Store), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;o&quot;, typeof(DataProxy), &quot;o&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;arg&quot;, typeof(DataProxy), &quot;arg&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;save&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the save method's callback is called." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SaveException" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires if an exception occurs in the Proxy during writing.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;store&quot;, typeof(Store), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;o&quot;, typeof(DataProxy), &quot;o&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;response&quot;, typeof(DataProxy), &quot;response&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;e&quot;, typeof(DataProxy), &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;saveexception&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires if an exception occurs in the Proxy during writing." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CommitDone" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;store&quot;, typeof(Store), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;options&quot;, typeof(DataProxy), &quot;options&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;commitdone&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CommitFailed" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;store&quot;, typeof(Store), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;msg&quot;, typeof(DataProxy), &quot;error message&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;commitfailed&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Exception" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires if an exception occurs during request]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;store&quot;, typeof(Store), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;type&quot;, typeof(string), &quot;type&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;action&quot;, typeof(string), &quot;action&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;o&quot;, typeof(object), &quot;o&quot;" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;response&quot;, typeof(object), &quot;response&quot;" />
            <Attribute Type="ListenerArgument" RawValue="5, &quot;e&quot;, typeof(object), &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;exception&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires if an exception occurs during request" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="GroupChange" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;store&quot;, typeof(Store), &quot;The grouping store&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;groupField&quot;, typeof(object), &quot;The field that the store is now grouped by&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;groupchange&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="StoreListeners" Extends="ComponentBaseListeners">
      <Attributes>
        <Attribute Type="TypeConverter" RawValue="typeof(ListenersConverter)" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Add" Type="ComponentListener">
          <Summary><![CDATA[Fires when Records have been added to the Store]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;store&quot;, typeof(Store), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;records&quot;, typeof(object), &quot;The array of Records added&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;index&quot;, typeof(object), &quot;The index at which the record(s) were added&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;add&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when Records have been added to the Store" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeLoad" Type="ComponentListener">
          <Summary><![CDATA[Fires before a request is made for a new data object. If the beforeload handler returns false the load action will be canceled]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;store&quot;, typeof(Store), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;options&quot;, typeof(object), &quot;The loading options that were specified (see load for details)&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeload&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before a request is made for a new data object. If the beforeload handler returns false the load action will be canceled" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Clear" Type="ComponentListener">
          <Summary><![CDATA[Fires when the data cache has been cleared.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;store&quot;, typeof(Store), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;clear&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the data cache has been cleared." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DataChanged" Type="ComponentListener">
          <Summary><![CDATA[Fires when the data cache has changed, and a widget which is using this Store as a Record cache should refresh its view.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;store&quot;, typeof(Store), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;datachanged&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the data cache has changed, and a widget which is using this Store as a Record cache should refresh its view." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Load" Type="ComponentListener">
          <Summary><![CDATA[Fires after a new set of Records has been loaded.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;store&quot;, typeof(Store), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;records&quot;, typeof(object), &quot;The Records that were loaded&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;options&quot;, typeof(object), &quot;The loading options that were specified (see load for details)&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;load&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after a new set of Records has been loaded." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="LoadException" Type="ComponentListener">
          <Summary><![CDATA[Fires if an exception occurs in the Proxy during loading. Called with the signature of the Proxy's \"loadexception\" event.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;store&quot;, typeof(Store), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;options&quot;, typeof(object), &quot;options&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;response&quot;, typeof(object), &quot;response&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;e&quot;, typeof(object), &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;loadexception&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires if an exception occurs in the Proxy during loading. Called with the signature of the Proxy's \&quot;loadexception\&quot; event." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MetaChange" Type="ComponentListener">
          <Summary><![CDATA[Fires when this store's reader provides new metadata (fields). This is currently only supported for JsonReaders.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;store&quot;, typeof(Store), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;meta&quot;, typeof(object), &quot;The JSON metadata&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;metachange&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when this store's reader provides new metadata (fields). This is currently only supported for JsonReaders." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Remove" Type="ComponentListener">
          <Summary><![CDATA[Fires when a Record has been removed from the Store]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;store&quot;, typeof(Store), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;records&quot;, typeof(object), &quot;The Record that was removed&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;index&quot;, typeof(object), &quot;The index at which the record was removed&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;remove&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a Record has been removed from the Store" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Update" Type="ComponentListener">
          <Summary><![CDATA[Fires when a Record has been updated]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;store&quot;, typeof(Store), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;records&quot;, typeof(object), &quot;The Record that was updated&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;operation&quot;, typeof(object), &quot;The update operation being performed&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;update&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a Record has been updated" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeSave" Type="ComponentListener">
          <Summary><![CDATA[Fires before a network request is made to save a data object. If the beforesave handler returns false the save action will be canceled]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;store&quot;, typeof(Store), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;params&quot;, typeof(object), &quot;The saving params that were specified&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforesave&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before a network request is made to save a data object. If the beforesave handler returns false the save action will be canceled" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Save" Type="ComponentListener">
          <Summary><![CDATA[Fires before the save method's callback is called.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;store&quot;, typeof(Store), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;o&quot;, typeof(object), &quot;o&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;arg&quot;, typeof(object), &quot;arg&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;save&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the save method's callback is called." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SaveException" Type="ComponentListener">
          <Summary><![CDATA[Fires if an exception occurs in the Proxy during writing.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;store&quot;, typeof(Store), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;o&quot;, typeof(object), &quot;o&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;response&quot;, typeof(object), &quot;response&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;e&quot;, typeof(object), &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;saveexception&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires if an exception occurs in the Proxy during writing." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CommitDone" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;store&quot;, typeof(Store), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;options&quot;, typeof(object), &quot;options&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;commitdone&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CommitFailed" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;store&quot;, typeof(Store), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;msg&quot;, typeof(object), &quot;error message&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;commitfailed&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Exception" Type="ComponentListener">
          <Summary><![CDATA[Fires if an exception occurs during request]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;store&quot;, typeof(Store), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;type&quot;, typeof(string), &quot;type&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;action&quot;, typeof(string), &quot;action&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;o&quot;, typeof(object), &quot;o&quot;" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;response&quot;, typeof(object), &quot;response&quot;" />
            <Attribute Type="ListenerArgument" RawValue="5, &quot;e&quot;, typeof(object), &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;exception&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires if an exception occurs during request" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="GroupChange" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;store&quot;, typeof(Store), &quot;The grouping store&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;groupField&quot;, typeof(object), &quot;The field that the store is now grouped by&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;groupchange&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="StoreNotFoundException" Extends="Exception">
      <Attributes />
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="StoreRefreshDataEventArgs" Extends="EventArgs">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="StoreResponseData">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="StoreSubmitDataEventArgs" Extends="EventArgs">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="StringArrayJsonConverter" Extends="ExtJsonConverter">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="StringFilter" Extends="GridFilter">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Type" Modifier="Override" Type="FilterType">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="Category" RawValue="&quot;3. StringFilter&quot;" />
            <Attribute Type="Browsable" RawValue="false" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Hidden" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EmptyText" Type="string" DefaultValue="&quot;Enter Filter Text...&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. StringFilter&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;Enter Filter Text...&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Value" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[Predefined filter value]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. StringFilter&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="Predefined filter value" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="SubmitEventArgs" Extends="EventArgs">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="SubmitHandler">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="SubmittedNode">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="SwitchOff" Extends="Fx">
      <Summary><![CDATA[Blinks the element as if it was clicked and then collapses on its center (similar to switching off a television). When the effect is completed, the element will be hidden (visibility = 'hidden') but block elements will still take up space in the document. The element must be removed from the DOM using the 'remove' config option if desired.]]></Summary>
      <Attributes>
        <Attribute Type="Description" RawValue="Blinks the element as if it was clicked and then collapses on its center (similar to switching off a television). When the effect is completed, the element will be hidden (visibility = 'hidden') but block elements will still take up space in the document. The element must be removed from the DOM using the 'remove' config option if desired." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="FxName" Modifier="Override" Type="string">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="TabCloseMenu" Extends="Plugin" Inherits="IIcon">
      <Summary><![CDATA[Very simple plugin for adding a close context menu to tabs]]></Summary>
      <Attributes>
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(TabCloseMenu), &quot;Build.ToolboxIcons.Plugin.bmp&quot;" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:TabCloseMenu runat=\&quot;server\&quot; /&gt;&quot;" />
        <Attribute Type="Description" RawValue="Very simple plugin for adding a close context menu to tabs" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="CloseTabText" Type="string" DefaultValue="&quot;Close Tab&quot;">
          <Summary><![CDATA[Text to display in ContextMenu for menu option to close current Tab.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. TabCloseMenu&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;Close Tab&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Text to display in ContextMenu for menu option to close current Tab." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CloseOtherTabsText" Type="string" DefaultValue="&quot;Close Other Tabs&quot;">
          <Summary><![CDATA[Text to display in ContextMenu for menu option to close other Tabs.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. TabCloseMenu&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;Close Other Tabs&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Text to display in ContextMenu for menu option to close other Tabs." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CloseAllTabsText" Type="string" DefaultValue="&quot;Close All Tabs&quot;">
          <Summary><![CDATA[The text for closing all tabs. Defaults to 'Close All Tabs'.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. TabCloseMenu&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;Close All Tabs&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The text for closing all tabs. Defaults to 'Close All Tabs'." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ShowCloseAll" Type="bool" DefaultValue="true">
          <Summary><![CDATA[Indicates whether to show the 'Close All' option. Defaults to true.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. TabCloseMenu&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="Indicates whether to show the 'Close All' option. Defaults to true." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CloseTabIconClsProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;closeTabIconCls&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CloseOtherTabsIconClsProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;closeOtherTabsIconCls&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CloseAllTabsIconClsProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;closeAllTabsIconCls&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="TabCollection" Extends="List&lt;PanelBase&gt;">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="TabFx" Extends="Plugin">
      <Attributes>
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(TabFx), &quot;Build.ToolboxIcons.Plugin.bmp&quot;" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:TabFx runat=\&quot;server\&quot; /&gt;&quot;" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Name" Type="string" DefaultValue="&quot;Frame&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. TabFx&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;Frame&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Args" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;3. TabFx&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="TableGrid" Extends="GridPanel">
      <Summary><![CDATA[A Grid which creates itself from an existing HTML table element.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:TableGrid runat=\&quot;server\&quot;&gt;&lt;/{0}:TableGrid&gt;&quot;" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(TableGrid), &quot;Build.ToolboxIcons.TableGrid.bmp&quot;" />
        <Attribute Type="Description" RawValue="A Grid which creates itself from an existing HTML table element." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="RenderToProxy" Modifier="Override" Access="ProtectedInternal" Type="string">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Ignore" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TableProxy" Access="Protected" Type="string">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;table&quot;, JsonMode.Raw" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Table" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The table element from which this grid will be created.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;8. TableGrid&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The table element from which this grid will be created." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ColumnModel" Modifier="Override" Type="ColumnModel">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Ignore" />
            <Attribute Type="Browsable" RawValue="false" />
            <Attribute Type="EditorBrowsable" RawValue="EditorBrowsableState.Never" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Hidden" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Columns" Type="ColumnCollection">
          <Summary><![CDATA[The columns to use when rendering the grid (required).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;columns&quot;, JsonMode.AlwaysArray" />
            <Attribute Type="Category" RawValue="&quot;8. TableGrid&quot;" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="The columns to use when rendering the grid (required)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Fields" Type="RecordFieldCollection">
          <Summary><![CDATA[Either a Collection of RecordField definition objects]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;fields&quot;, JsonMode.AlwaysArray" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Either a Collection of RecordField definition objects" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AutoHeight" Modifier="Override" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to use height:'auto', false to use fixed height (defaults to false).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. BoxComponent&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to use height:'auto', false to use fixed height (defaults to false)." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="TableLayout" Extends="ContainerLayout">
      <Summary><![CDATA[This layout allows you to easily render content into an HTML table. The total number of columns can be specified, and rowspan and colspan can be used to create complex layouts within the table.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:TableLayout runat=\&quot;server\&quot; Columns=\&quot;2\&quot;&gt;&lt;{0}:Cell&gt;&lt;{0}:Panel runat=\&quot;server\&quot; Title=\&quot;Panel 1\&quot; Frame=\&quot;true\&quot; Width=\&quot;200\&quot; Height=\&quot;200\&quot; StyleSpec=\&quot;padding: 5px;\&quot; /&gt;&lt;/{0}:Cell&gt;&lt;{0}:Cell&gt;&lt;{0}:Panel runat=\&quot;server\&quot; Title=\&quot;Panel 2\&quot; Frame=\&quot;true\&quot; Width=\&quot;200\&quot; Height=\&quot;200\&quot;StyleSpec=\&quot;padding: 5px 0;\&quot; /&gt;&lt;/{0}:Cell&gt;&lt;{0}:Cell ColSpan=\&quot;2\&quot;&gt;&lt;{0}:Panel runat=\&quot;server\&quot; Title=\&quot;Panel 3\&quot; Frame=\&quot;true\&quot; Width=\&quot;400\&quot; Height=\&quot;200\&quot;StyleSpec=\&quot;padding: 0 0 5px 5px\&quot; /&gt;&lt;/{0}:Cell&gt;&lt;/{0}:TableLayout&gt;&quot;" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(TableLayout), &quot;Build.ToolboxIcons.Layout.bmp&quot;" />
        <Attribute Type="Description" RawValue="This layout allows you to easily render content into an HTML table. The total number of columns can be specified, and rowspan and colspan can be used to create complex layouts within the table." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="LayoutConfig" Modifier="Override" Access="ProtectedInternal" Type="LayoutConfig">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Object" />
            <Attribute Type="Browsable" RawValue="false" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TableAttrs" Type="DomObject">
          <Summary><![CDATA[An object containing properties which are added to the DomHelper specification used to create the layout's <table> element.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;6. TableLayout&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="An object containing properties which are added to the DomHelper specification used to create the layout's &lt;table&gt; element." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Columns" Type="int" DefaultValue="0">
          <Summary><![CDATA[The total number of columns to create in the table for this layout. If not specified, all panels added to this layout will be rendered into a single row using a column per panel.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;6. TableLayout&quot;" />
            <Attribute Type="DefaultValue" RawValue="0" />
            <Attribute Type="Description" RawValue="The total number of columns to create in the table for this layout. If not specified, all panels added to this layout will be rendered into a single row using a column per panel." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Cells" Type="CellCollection">
          <Summary><![CDATA[Cells collection]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;6. TableLayout&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Cells collection" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="TableLayoutConfig" Extends="LayoutConfig">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Columns" Type="int" DefaultValue="0">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="0" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TableAttrs" Type="DomObject">
          <Summary><![CDATA[An object containing properties which are added to the DomHelper specification used to create the layout's <table> element.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Object" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="An object containing properties which are added to the DomHelper specification used to create the layout's &lt;table&gt; element." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="TabMenu" Extends="Plugin">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(TabMenu), &quot;Build.ToolboxIcons.Plugin.bmp&quot;" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:TabScrollerMenu runat=\&quot;server\&quot; /&gt;&quot;" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="TabPanel" Extends="TabPanelBase" Inherits="IPostBackEventHandler">
      <Summary><![CDATA[A basic tab content Container. Tab panels can be used exactly like a standard Ext.Panel for layout purposes, but also have special support for containing child Panels that get automatically converted into tabs.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="DefaultEvent" RawValue="&quot;TabChanged&quot;" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:TabPanel runat=\&quot;server\&quot; Height=\&quot;300\&quot;&gt;&lt;Items&gt;&lt;{0}:Panel runat=\&quot;server\&quot; Title=\&quot;Tab 1\&quot;&gt;&lt;Items&gt;&lt;/Items&gt;&lt;/{0}:Panel&gt;&lt;{0}:Panel runat=\&quot;server\&quot; Title=\&quot;Tab 2\&quot;&gt;&lt;Items&gt;&lt;/Items&gt;&lt;/{0}:Panel&gt;&lt;{0}:Panel runat=\&quot;server\&quot; Title=\&quot;Tab 3\&quot;&gt;&lt;Items&gt;&lt;/Items&gt;&lt;/{0}:Panel&gt;&lt;/Items&gt;&lt;/{0}:TabPanel&gt;&quot;" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(TabPanel), &quot;Build.ToolboxIcons.TabPanel.bmp&quot;" />
        <Attribute Type="Designer" RawValue="typeof(TabPanelDesigner)" />
        <Attribute Type="Description" RawValue="A basic tab content Container. Tab panels can be used exactly like a standard Ext.Panel for layout purposes, but also have special support for containing child Panels that get automatically converted into tabs." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Listeners" Type="TabPanelListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="TabPanelDirectEvents">
          <Summary><![CDATA[Server-side Ajax Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Server-side Ajax Event Handlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="TabPanelBase" Abstract="true" Extends="PanelBase" Inherits="IItems,IAutoPostBack">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="ActiveTab" Type="BoxComponentBase" DefaultValue="null">
          <Summary><![CDATA[The numeric index of the tab that should be initially activated on render.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Browsable" RawValue="false" />
            <Attribute Type="Description" RawValue="The numeric index of the tab that should be initially activated on render." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ActiveTabIndex" Type="int" DefaultValue="-1">
          <Summary><![CDATA[The numeric index of the tab that should be initially activated on render.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetActiveTab&quot;" />
            <Attribute Type="Category" RawValue="&quot;7. TabPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="-1" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The numeric index of the tab that should be initially activated on render." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="VisibleIndex" Access="ProtectedInternal" Type="int" DefaultValue="-1">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;activeTab&quot;" />
            <Attribute Type="DefaultValue" RawValue="-1" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AnimScroll" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to animate tab scrolling so that hidden tabs slide smoothly into view (defaults to true). Only applies when EnableTabScroll = true.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. TabPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to animate tab scrolling so that hidden tabs slide smoothly into view (defaults to true). Only applies when EnableTabScroll = true." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AutoTabSelector" Type="string" DefaultValue="&quot;div.x-tab&quot;">
          <Summary><![CDATA[The CSS selector used to search for tabs in existing markup when autoTabs = true (defaults to 'div.x-tab'). This can be any valid selector supported by Ext.DomQuery.select. Note that the query will be executed within the scope of this tab panel only (so that multiple tab panels from markup can be supported on a page).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. TabPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;div.x-tab&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The CSS selector used to search for tabs in existing markup when autoTabs = true (defaults to 'div.x-tab'). This can be any valid selector supported by Ext.DomQuery.select. Note that the query will be executed within the scope of this tab panel only (so that multiple tab panels from markup can be supported on a page)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AutoTabs" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to animate tab scrolling so that hidden tabs slide smoothly into view (defaults to true). Only applies when EnableTabScroll = true.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. TabPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to animate tab scrolling so that hidden tabs slide smoothly into view (defaults to true). Only applies when EnableTabScroll = true." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BaseCls" Modifier="Override" Type="string" DefaultValue="&quot;x-tab-panel&quot;">
          <Summary><![CDATA[The base CSS class applied to the panel (defaults to 'x-tab-panel').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. TabPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;x-tab-panel&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The base CSS class applied to the panel (defaults to 'x-tab-panel')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DeferredRender" Type="bool" DefaultValue="true">
          <Summary><![CDATA[Determining whether or not each tab is rendered only when first accessed (defaults to true).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. TabPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Determining whether or not each tab is rendered only when first accessed (defaults to true)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EnableTabScroll" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to enable scrolling to tabs that may be invisible due to overflowing the overall TabPanel width. Only available with tabs on addToStart. (defaults to false).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. TabPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to enable scrolling to tabs that may be invisible due to overflowing the overall TabPanel width. Only available with tabs on addToStart. (defaults to false)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="LayoutOnTabChange" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Set to true to do a layout of tab items as tabs are changed.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. TabPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Set to true to do a layout of tab items as tabs are changed." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MinTabWidth" Type="Unit" DefaultValue="typeof(Unit), &quot;30&quot;">
          <Summary><![CDATA[The minimum width in pixels for each tab when ResizeTabs = true (defaults to 30).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. TabPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="typeof(Unit), &quot;30&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The minimum width in pixels for each tab when ResizeTabs = true (defaults to 30)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Plain" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to render the tab strip without a background content Container image (defaults to false).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. TabPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to render the tab strip without a background content Container image (defaults to false)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ResizeTabs" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to automatically resize each tab so that the tabs will completely fill the tab strip (defaults to false). Setting this to true may cause specific widths that might be set per tab to be overridden in order to fit them all into view (although MinTabWidth will always be honored).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. TabPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to automatically resize each tab so that the tabs will completely fill the tab strip (defaults to false). Setting this to true may cause specific widths that might be set per tab to be overridden in order to fit them all into view (although MinTabWidth will always be honored)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ScrollDuration" Type="float" DefaultValue="0.35f">
          <Summary><![CDATA[The number of milliseconds that each scroll animation should last (defaults to .35). Only applies when AnimScroll = true.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. TabPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="0.35f" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The number of milliseconds that each scroll animation should last (defaults to .35). Only applies when AnimScroll = true." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ScrollIncrement" Type="int" DefaultValue="100">
          <Summary><![CDATA[The number of pixels to scroll each time a tab scroll button is pressed (defaults to 100, or if ResizeTabs = true, the calculated tab width). Only applies when EnableTabScroll = true.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. TabPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="100" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The number of pixels to scroll each time a tab scroll button is pressed (defaults to 100, or if ResizeTabs = true, the calculated tab width). Only applies when EnableTabScroll = true." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ScrollRepeatInterval" Type="int" DefaultValue="400">
          <Summary><![CDATA[Number of milliseconds between each scroll while a tab scroll button is continuously pressed (defaults to 400).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. TabPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="400" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Number of milliseconds between each scroll while a tab scroll button is continuously pressed (defaults to 400)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TabMargin" Type="Unit" DefaultValue="typeof(Unit), &quot;2&quot;">
          <Summary><![CDATA[The number of pixels of space to calculate into the sizing and scrolling of tabs. If you change the margin in CSS, you will need to update this value so calculations are correct with either resizeTabs or scrolling tabs. (defaults to 2)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. TabPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="typeof(Unit), &quot;2&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The number of pixels of space to calculate into the sizing and scrolling of tabs. If you change the margin in CSS, you will need to update this value so calculations are correct with either resizeTabs or scrolling tabs. (defaults to 2)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TabAlign" Type="TabAlign" DefaultValue="TabAlign.Left">
          <Summary><![CDATA[The alignment of the Tabs (defaults to 'Left'). Other option includes 'Right'. Note that tab scrolling is only supported for TabAlign='Left'. Note that when 'Right', the Tabs will be rendered in reverse order.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;7. TabPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="TabAlign.Left" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The alignment of the Tabs (defaults to 'Left'). Other option includes 'Right'. Note that tab scrolling is only supported for TabAlign='Left'. Note that when 'Right', the Tabs will be rendered in reverse order." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TabAlignProxy" Access="Protected" Type="TabAlign" DefaultValue="TabAlign.Left">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;tabAlign&quot;, JsonMode.ToLower" />
            <Attribute Type="DefaultValue" RawValue="TabAlign.Left" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TabCls" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[This config option is used on child Components of ths TabPanel. A CSS class name applied to the tab strip item representing the child Component, allowing special styling to be applied.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. TabPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="This config option is used on child Components of ths TabPanel. A CSS class name applied to the tab strip item representing the child Component, allowing special styling to be applied." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TabPosition" Type="TabPosition" DefaultValue="TabPosition.Top">
          <Summary><![CDATA[The position where the tab strip should be rendered (defaults to 'addToStart'). The only other supported value is 'Bottom'. Note that tab scrolling is only supported for position 'addToStart'.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="Category" RawValue="&quot;7. TabPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="TabPosition.Top" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The position where the tab strip should be rendered (defaults to 'addToStart'). The only other supported value is 'Bottom'. Note that tab scrolling is only supported for position 'addToStart'." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TabWidth" Type="Unit" DefaultValue="typeof(Unit), &quot;120&quot;">
          <Summary><![CDATA[The initial width in pixels of each new tab (defaults to 120).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. TabPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="typeof(Unit), &quot;120&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The initial width in pixels of each new tab (defaults to 120)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="WheelIncrement" Type="int" DefaultValue="20">
          <Summary><![CDATA[For scrolling tabs, the number of pixels to increment on mouse wheel scrolling (defaults to 20).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. TabPanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="20" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="For scrolling tabs, the number of pixels to increment on mouse wheel scrolling (defaults to 20)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DefaultTabMenu" Type="MenuCollection">
          <Summary><![CDATA[Default menu for all tabs]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;defaultTabMenu&quot;, typeof(ItemCollectionJsonConverter)" />
            <Attribute Type="Category" RawValue="&quot;7. TabPanel&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="Default menu for all tabs" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AutoPostBack" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Gets or sets a value indicating whether the control state automatically posts back to the server when tab changed.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;Behavior&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Gets or sets a value indicating whether the control state automatically posts back to the server when tab changed." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CausesValidation" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Gets or sets a value indicating whether validation is performed when the control is set to validate when a postback occurs.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;Behavior&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Gets or sets a value indicating whether validation is performed when the control is set to validate when a postback occurs." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ValidationGroup" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[Gets or Sets the Controls ValidationGroup]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;Behavior&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Gets or Sets the Controls ValidationGroup" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods>
        <Method Name="Activate" ParamsRaw="BoxComponentBase item">
          <Summary><![CDATA[Sets the specified Panel as the active Tab. This method fires the beforetabchange event which can return false to cancel the tab change.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Sets the specified Panel as the active Tab. This method fires the beforetabchange event which can return false to cancel the tab change." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Activate" ParamsRaw="string item">
          <Summary><![CDATA[Sets the specified Panel as the active Panel. This method fires the beforetabchange event which can return false to cancel the tab change.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Sets the specified Panel as the active Panel. This method fires the beforetabchange event which can return false to cancel the tab change." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="BeginUpdate">
          <Summary><![CDATA[Suspends any internal calculations or scrolling while doing a bulk operation. See endUpdate]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Suspends any internal calculations or scrolling while doing a bulk operation. See endUpdate" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="EndUpdate">
          <Summary><![CDATA[Suspends any internal calculations or scrolling while doing a bulk operation. See endUpdate]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Suspends any internal calculations or scrolling while doing a bulk operation. See endUpdate" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="HideTabStripItem" ParamsRaw="int item">
          <Summary><![CDATA[Hides the tab strip item for the passed tab]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Hides the tab strip item for the passed tab" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="HideTabStripItem" ParamsRaw="BoxComponentBase item">
          <Summary><![CDATA[Hides the tab strip item for the passed tab]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Hides the tab strip item for the passed tab" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="HideTabStripItem" ParamsRaw="string item">
          <Summary><![CDATA[Hides the tab strip item for the passed tab]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Hides the tab strip item for the passed tab" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="ReadTabs" ParamsRaw="bool removeExisting">
          <Summary><![CDATA[True to scan the markup in this tab panel for autoTabs using the autoTabSelector]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="True to scan the markup in this tab panel for autoTabs using the autoTabSelector" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="ScrollToTab" ParamsRaw="BoxComponentBase item, bool animate">
          <Summary><![CDATA[Scrolls to a particular tab if tab scrolling is enabled]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Scrolls to a particular tab if tab scrolling is enabled" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SetActiveTab" ParamsRaw="int index">
          <Summary><![CDATA[Sets the specified tab as the active tab. This method fires the beforetabchange event which can return false to cancel the tab change.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Sets the specified tab as the active tab. This method fires the beforetabchange event which can return false to cancel the tab change." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SetActiveTab" ParamsRaw="BoxComponentBase item">
          <Summary><![CDATA[Sets the specified tab as the active tab. This method fires the beforetabchange event which can return false to cancel the tab change.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Sets the specified tab as the active tab. This method fires the beforetabchange event which can return false to cancel the tab change." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SetActiveTab" ParamsRaw="string id">
          <Summary><![CDATA[Sets the specified tab as the active tab. This method fires the beforetabchange event which can return false to cancel the tab change.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Sets the specified tab as the active tab. This method fires the beforetabchange event which can return false to cancel the tab change." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="UnhideTabStripItem" ParamsRaw="int index">
          <Summary><![CDATA[Unhides the tab strip item for the passed tab]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Unhides the tab strip item for the passed tab" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="UnhideTabStripItem" ParamsRaw="BoxComponentBase item">
          <Summary><![CDATA[Unhides the tab strip item for the passed tab]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Unhides the tab strip item for the passed tab" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="UnhideTabStripItem" ParamsRaw="string id">
          <Summary><![CDATA[Unhides the tab strip item for the passed tab]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Unhides the tab strip item for the passed tab" />
          </Attributes>
          <Parameters />
        </Method>
      </Methods>
    </Class>
    <Class Name="TabPanelDirectEvents" Extends="PanelDirectEvents">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="BeforeTabChange" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before the active tab changes. Handlers can return false to cancel the tab change.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(TabPanel), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;newTab&quot;, typeof(Panel), &quot;The tab being activated&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;currentTab&quot;, typeof(Panel), &quot;The current active tab&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;index&quot;, typeof(Panel), &quot;The index of the tab being activated (available for TabStrip only)&quot;" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;activeIndex&quot;, typeof(Panel), &quot;The index of the current active tab (available for TabStrip only)&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforetabchange&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the active tab changes. Handlers can return false to cancel the tab change." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ContextMenu" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when the original browser contextmenu event originated from a tab element.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(TabPanel), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;tab&quot;, typeof(Panel), &quot;The target tab&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;e&quot;, typeof(object), &quot;EventObject&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;contextmenu&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the original browser contextmenu event originated from a tab element." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TabChange" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after the active tab has changed.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(TabPanel), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;tab&quot;, typeof(Panel), &quot;The new active tab&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;index&quot;, typeof(Panel), &quot;The index of the new active tab (available for TabStrip only)&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;tabchange&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the active tab has changed." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeTabClose" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(PanelBase), &quot;tabpanel&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;tab&quot;, typeof(PanelBase), &quot;tab&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforetabclose&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeTabHide" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(PanelBase), &quot;tabpanel&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;tab&quot;, typeof(PanelBase), &quot;tab&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforetabhide&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TabClose" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(PanelBase), &quot;tabpanel&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;tab&quot;, typeof(PanelBase), &quot;tab&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;tabclose&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeTabMenuShow" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(TabPanel), &quot;el&quot;" />
            <Attribute Type="ListenerArgument" RawValue="0, &quot;tab&quot;, typeof(PanelBase), &quot;tab&quot;" />
            <Attribute Type="ListenerArgument" RawValue="0, &quot;menu&quot;, typeof(MenuBase), &quot;menu&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforetabmenushow&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="TabPanelListeners" Extends="PanelListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="BeforeTabChange" Type="ComponentListener">
          <Summary><![CDATA[Fires before the active tab changes. Handlers can return false to cancel the tab change.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(TabPanel), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;newTab&quot;, typeof(PanelBase), &quot;The tab being activated&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;currentTab&quot;, typeof(Panel), &quot;The current active tab&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;index&quot;, typeof(Panel), &quot;The index of the tab being activated (available for TabStrip only)&quot;" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;activeIndex&quot;, typeof(Panel), &quot;The index of the current active tab (available for TabStrip only)&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforetabchange&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the active tab changes. Handlers can return false to cancel the tab change." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ContextMenu" Type="ComponentListener">
          <Summary><![CDATA[Fires when the original browser contextmenu event originated from a tab element.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(TabPanel), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;tab&quot;, typeof(PanelBase), &quot;The target tab&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;e&quot;, typeof(object), &quot;EventObject&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;contextmenu&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the original browser contextmenu event originated from a tab element." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TabChange" Type="ComponentListener">
          <Summary><![CDATA[Fires after the active tab has changed.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(TabPanel), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;tab&quot;, typeof(Panel), &quot;The new active tab&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;index&quot;, typeof(Panel), &quot;The index of the new active tab (available for TabStrip only)&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;tabchange&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the active tab has changed." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeTabClose" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(PanelBase), &quot;tabpanel&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;tab&quot;, typeof(PanelBase), &quot;tab&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforetabclose&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeTabHide" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(PanelBase), &quot;tabpanel&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;tab&quot;, typeof(PanelBase), &quot;tab&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforetabhide&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TabClose" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(PanelBase), &quot;tabpanel&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;tab&quot;, typeof(PanelBase), &quot;tab&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;tabclose&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeTabMenuShow" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(TabPanel), &quot;el&quot;" />
            <Attribute Type="ListenerArgument" RawValue="0, &quot;tab&quot;, typeof(PanelBase), &quot;tab&quot;" />
            <Attribute Type="ListenerArgument" RawValue="0, &quot;menu&quot;, typeof(MenuBase), &quot;menu&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforetabmenushow&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="TabScrollerMenu" Extends="Plugin">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(TabScrollerMenu), &quot;Build.ToolboxIcons.Plugin.bmp&quot;" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:TabScrollerMenu runat=\&quot;server\&quot; /&gt;&quot;" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="PageSize" Type="int" DefaultValue="10">
          <Summary><![CDATA[The page size.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. TabScrollerMenu&quot;" />
            <Attribute Type="DefaultValue" RawValue="10" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The page size." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MaxText" Type="int" DefaultValue="15">
          <Summary><![CDATA[The maximum text length to truncate.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. TabScrollerMenu&quot;" />
            <Attribute Type="DefaultValue" RawValue="15" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The maximum text length to truncate." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MenuPrefixText" Type="string" DefaultValue="&quot;Items&quot;">
          <Summary><![CDATA[Menu prefix text.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. TabScrollerMenu&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="DefaultValue" RawValue="&quot;Items&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Menu prefix text." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="TabStrip" Extends="BoxComponentBase" Inherits="IItems,IAutoPostBack,IPostBackEventHandler,IPostBackDataHandler,IIcon">
      <Summary><![CDATA[A component which renders tabs similar to a TabPanel and can toggle visibility of other items.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="DefaultEvent" RawValue="&quot;TabChanged&quot;" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(TabStrip), &quot;Build.ToolboxIcons.TabPanel.bmp&quot;" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:TabStrip runat=\&quot;server\&quot;&gt;&lt;/{0}:TabStrip&gt;&quot;" />
        <Attribute Type="Description" RawValue="A component which renders tabs similar to a TabPanel and can toggle visibility of other items." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Items" Type="TabStripItems">
          <Summary><![CDATA[Items Collection]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DeferredRender" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.AlwaysArray" />
            <Attribute Type="Description" RawValue="Items Collection" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ActionContainerID" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The ID of the container which has card layout. TabStrip will switch active item automatically beased on the current index.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="IDReferenceProperty" RawValue="typeof(ContainerBase)" />
            <Attribute Type="Description" RawValue="The ID of the container which has card layout. TabStrip will switch active item automatically beased on the current index." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ActionContainer" Type="Container" DefaultValue="null">
          <Summary><![CDATA[The container which has card layout. TabStrip will switch active item automatically beased on the current index.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Browsable" RawValue="false" />
            <Attribute Type="EditorBrowsable" RawValue="EditorBrowsableState.Never" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Hidden" />
            <Attribute Type="Description" RawValue="The container which has card layout. TabStrip will switch active item automatically beased on the current index." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ActionContainerProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;actionContainer&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ActiveTabIndex" Type="int" DefaultValue="-1">
          <Summary><![CDATA[The numeric index of the tab that should be initially activated on render.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;activeTab&quot;" />
            <Attribute Type="DefaultValue" RawValue="-1" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetActiveTab&quot;" />
            <Attribute Type="Description" RawValue="The numeric index of the tab that should be initially activated on render." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AnimScroll" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to animate tab scrolling so that hidden tabs slide smoothly into view (defaults to true). Only applies when EnableTabScroll = true.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to animate tab scrolling so that hidden tabs slide smoothly into view (defaults to true). Only applies when EnableTabScroll = true." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EnableTabScroll" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to enable scrolling to tabs that may be invisible due to overflowing the overall TabPanel width. Only available with tabs on addToStart. (defaults to false).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to enable scrolling to tabs that may be invisible due to overflowing the overall TabPanel width. Only available with tabs on addToStart. (defaults to false)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MinTabWidth" Type="Unit" DefaultValue="typeof(Unit), &quot;30&quot;">
          <Summary><![CDATA[The minimum width in pixels for each tab when ResizeTabs = true (defaults to 30).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="typeof(Unit), &quot;30&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The minimum width in pixels for each tab when ResizeTabs = true (defaults to 30)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Plain" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to render the tab strip without a background content Container image (defaults to true).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to render the tab strip without a background content Container image (defaults to true)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ResizeTabs" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to automatically resize each tab so that the tabs will completely fill the tab strip (defaults to false). Setting this to true may cause specific widths that might be set per tab to be overridden in order to fit them all into view (although MinTabWidth will always be honored).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to automatically resize each tab so that the tabs will completely fill the tab strip (defaults to false). Setting this to true may cause specific widths that might be set per tab to be overridden in order to fit them all into view (although MinTabWidth will always be honored)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SyncOnTabChange" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Sync size after active tab change. This property is ignored if AutoGrow=false]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Sync size after active tab change. This property is ignored if AutoGrow=false" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AutoGrow" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to auto grow width]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to auto grow width" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ScrollDuration" Type="float" DefaultValue="0.35f">
          <Summary><![CDATA[The number of milliseconds that each scroll animation should last (defaults to .35). Only applies when AnimScroll = true.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="0.35f" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The number of milliseconds that each scroll animation should last (defaults to .35). Only applies when AnimScroll = true." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ScrollIncrement" Type="int" DefaultValue="100">
          <Summary><![CDATA[The number of pixels to scroll each time a tab scroll button is pressed (defaults to 100, or if ResizeTabs = true, the calculated tab width). Only applies when EnableTabScroll = true.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="100" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The number of pixels to scroll each time a tab scroll button is pressed (defaults to 100, or if ResizeTabs = true, the calculated tab width). Only applies when EnableTabScroll = true." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ScrollRepeatInterval" Type="int" DefaultValue="400">
          <Summary><![CDATA[Number of milliseconds between each scroll while a tab scroll button is continuously pressed (defaults to 400).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="400" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Number of milliseconds between each scroll while a tab scroll button is continuously pressed (defaults to 400)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TabMargin" Type="Unit" DefaultValue="typeof(Unit), &quot;2&quot;">
          <Summary><![CDATA[The number of pixels of space to calculate into the sizing and scrolling of tabs. If you change the margin in CSS, you will need to update this value so calculations are correct with either resizeTabs or scrolling tabs. (defaults to 2)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="typeof(Unit), &quot;2&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The number of pixels of space to calculate into the sizing and scrolling of tabs. If you change the margin in CSS, you will need to update this value so calculations are correct with either resizeTabs or scrolling tabs. (defaults to 2)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TabCls" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[This config option is used on child Components of ths TabPanel. A CSS class name applied to the tab strip item representing the child Component, allowing special styling to be applied.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="This config option is used on child Components of ths TabPanel. A CSS class name applied to the tab strip item representing the child Component, allowing special styling to be applied." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TabPosition" Type="TabPosition" DefaultValue="TabPosition.Top">
          <Summary><![CDATA[The position where the tab strip should be rendered (defaults to 'addToStart'). The only other supported value is 'Bottom'. Note that tab scrolling is only supported for position 'addToStart'.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="DefaultValue" RawValue="TabPosition.Top" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The position where the tab strip should be rendered (defaults to 'addToStart'). The only other supported value is 'Bottom'. Note that tab scrolling is only supported for position 'addToStart'." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TabWidth" Type="Unit" DefaultValue="typeof(Unit), &quot;120&quot;">
          <Summary><![CDATA[The initial width in pixels of each new tab (defaults to 120).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="typeof(Unit), &quot;120&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The initial width in pixels of each new tab (defaults to 120)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="WheelIncrement" Type="int" DefaultValue="20">
          <Summary><![CDATA[For scrolling tabs, the number of pixels to increment on mouse wheel scrolling (defaults to 20).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="20" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="For scrolling tabs, the number of pixels to increment on mouse wheel scrolling (defaults to 20)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DefaultTypeProxy" Access="Protected" Type="string" DefaultValue="&quot;box&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;defaultType&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;box&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Listeners" Type="TabStripListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="TabStripDirectEvents">
          <Summary><![CDATA[Server-side Ajax Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Server-side Ajax Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AutoPostBack" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Gets or sets a value indicating whether the control state automatically posts back to the server when tab changed.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;Behavior&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Gets or sets a value indicating whether the control state automatically posts back to the server when tab changed." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CausesValidation" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Gets or sets a value indicating whether validation is performed when the control is set to validate when a postback occurs.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;Behavior&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Gets or sets a value indicating whether validation is performed when the control is set to validate when a postback occurs." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ValidationGroup" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[Gets or Sets the Controls ValidationGroup]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;Behavior&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Gets or Sets the Controls ValidationGroup" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="TabStripDirectEvents" Extends="BoxComponentDirectEvents">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="BeforeTabChange" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before the active tab changes. Handlers can return false to cancel the tab change.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(TabPanel), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;newTab&quot;, typeof(Panel), &quot;The tab being activated&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;currentTab&quot;, typeof(Panel), &quot;The current active tab&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforetabchange&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the active tab changes. Handlers can return false to cancel the tab change." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ContextMenu" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when the original browser contextmenu event originated from a tab element.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(TabPanel), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;tab&quot;, typeof(Panel), &quot;The target tab&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;e&quot;, typeof(object), &quot;EventObject&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;contextmenu&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the original browser contextmenu event originated from a tab element." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TabChange" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after the active tab has changed.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(TabPanel), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;tab&quot;, typeof(Panel), &quot;The new active tab&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;tabchange&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the active tab has changed." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TabClose" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;tab&quot;, typeof(PanelBase), &quot;tab&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;tabclose&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeTabClose" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;tab&quot;, typeof(PanelBase), &quot;tab&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforetabclose&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="TabStripItem" Extends="StateManagedItem">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="ItemID" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;id&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ActionItemID" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[Managed container id. It will be shown when tab is activated]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="Managed container id. It will be shown when tab is activated" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ActionItem" Type="Component" DefaultValue="null">
          <Summary><![CDATA[Managed container. It will be shown when tab is activated]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Browsable" RawValue="false" />
            <Attribute Type="EditorBrowsable" RawValue="EditorBrowsableState.Never" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Hidden" />
            <Attribute Type="Description" RawValue="Managed container. It will be shown when tab is activated" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ActionItemProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;actionItem&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HideMode" Type="HideMode" DefaultValue="HideMode.Display">
          <Summary><![CDATA[How the action item. Supported values are 'visibility' (css visibility), 'offsets' (negative offset position) and 'display' (css display).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="Category" RawValue="&quot;3. Component&quot;" />
            <Attribute Type="DefaultValue" RawValue="HideMode.Display" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="How the action item. Supported values are 'visibility' (css visibility), 'offsets' (negative offset position) and 'display' (css display)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Title" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TabTip" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A string to be used as innerHTML (html tags are accepted) to show in a tooltip when mousing over the associated tab selector element. NOTE: TabTip config is used when a BoxComponent is a child of a TabPanel.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="A string to be used as innerHTML (html tags are accepted) to show in a tooltip when mousing over the associated tab selector element. NOTE: TabTip config is used when a BoxComponent is a child of a TabPanel." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Closable" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Panels themselves do not directly support being closed, but some Panel subclasses do (like Ext.Window) or a Panel Class within an Ext.TabPanel. Specify true to enable closing in such situations. Defaults to false.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Panels themselves do not directly support being closed, but some Panel subclasses do (like Ext.Window) or a Panel Class within an Ext.TabPanel. Specify true to enable closing in such situations. Defaults to false." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Hidden" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Render this component hidden (default is false). If true, the hide method will be called internally.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Render this component hidden (default is false). If true, the hide method will be called internally." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Icon" Type="Icon" DefaultValue="Icon.None">
          <Summary><![CDATA[The icon to use in the Button. See also, IconCls to set an icon with a custom Css class.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="Icon.None" />
            <Attribute Type="Description" RawValue="The icon to use in the Button. See also, IconCls to set an icon with a custom Css class." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IconClsProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;iconCls&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IconCls" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A css class which sets a background image to be used as the icon for this button.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="A css class which sets a background image to be used as the icon for this button." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CustomConfig" Type="ConfigItemCollection">
          <Summary><![CDATA[Collection of custom js config]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="ConfigOption" RawValue="&quot;-&quot;, typeof(CustomConfigJsonConverter)" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="Collection of custom js config" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="TabStripItems" Extends="StateManagedCollection&lt;TabStripItem&gt;">
      <Attributes />
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="TabStripListeners" Extends="BoxComponentListeners">
      <Attributes />
      <ConfigOptions>
        <ConfigOption Name="BeforeTabChange" Type="ComponentListener">
          <Summary><![CDATA[Fires before the active tab changes. Handlers can return false to cancel the tab change.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(TabPanel), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;newTab&quot;, typeof(PanelBase), &quot;The tab being activated&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;currentTab&quot;, typeof(Panel), &quot;The current active tab&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforetabchange&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before the active tab changes. Handlers can return false to cancel the tab change." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ContextMenu" Type="ComponentListener">
          <Summary><![CDATA[Fires when the original browser contextmenu event originated from a tab element.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(TabPanel), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;tab&quot;, typeof(PanelBase), &quot;The target tab&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;e&quot;, typeof(object), &quot;EventObject&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;contextmenu&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the original browser contextmenu event originated from a tab element." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TabChange" Type="ComponentListener">
          <Summary><![CDATA[Fires after the active tab has changed.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(TabPanel), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;tab&quot;, typeof(Panel), &quot;The new active tab&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;tabchange&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the active tab has changed." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TabClose" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;tab&quot;, typeof(PanelBase), &quot;tab&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;tabclose&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeTabClose" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;tab&quot;, typeof(PanelBase), &quot;tab&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforetabclose&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="Task" Extends="StateManagedItem">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="TaskID" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[(optional) The TaskID.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;id&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="(optional) The TaskID." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AutoRun" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to auto run task (defaults to false).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. TaskManager&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="True to auto run task (defaults to false)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Interval" Type="int" DefaultValue="1000">
          <Summary><![CDATA[The frequency in milliseconds with which the task should be executed (defaults to 1000)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. TaskManager&quot;" />
            <Attribute Type="DefaultValue" RawValue="1000" />
            <Attribute Type="Description" RawValue="The frequency in milliseconds with which the task should be executed (defaults to 1000)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Args" Type="string[]" DefaultValue="null">
          <Summary><![CDATA[(optional) An array of arguments to be passed to the function specified by run]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="typeof(StringArrayJsonConverter)" />
            <Attribute Type="TypeConverter" RawValue="typeof(StringArrayConverter)" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="(optional) An array of arguments to be passed to the function specified by run" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Scope" Type="string" DefaultValue="&quot;this&quot;">
          <Summary><![CDATA[(optional) The scope in which to execute the run function.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;this&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="(optional) The scope in which to execute the run function." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Duration" Type="int" DefaultValue="0">
          <Summary><![CDATA[(optional) The length of time in milliseconds to execute the task before stopping automatically (defaults to indefinite).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. TaskManager&quot;" />
            <Attribute Type="DefaultValue" RawValue="0" />
            <Attribute Type="Description" RawValue="(optional) The length of time in milliseconds to execute the task before stopping automatically (defaults to indefinite)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Repeat" Type="int" DefaultValue="0">
          <Summary><![CDATA[(optional) The number of times to execute the task before stopping automatically (defaults to indefinite).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. TaskManager&quot;" />
            <Attribute Type="DefaultValue" RawValue="0" />
            <Attribute Type="Description" RawValue="(optional) The number of times to execute the task before stopping automatically (defaults to indefinite)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEventProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="ConfigOption" RawValue="&quot;serverRun&quot;, JsonMode.Raw" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ListenerProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="ConfigOption" RawValue="&quot;clientRun&quot;, JsonMode.Raw" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="OnStart" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="ConfigOption" RawValue="&quot;onstart&quot;, typeof(FunctionJsonConverter)" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="OnStop" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="ConfigOption" RawValue="&quot;onstop&quot;, typeof(FunctionJsonConverter)" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Listeners" Type="TaskListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="TaskDirectEvents">
          <Summary><![CDATA[Server-side DirectEventHandlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Server-side DirectEventHandlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="TaskCollection" Extends="StateManagedCollection&lt;Task&gt;">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="TaskDirectEvents" Extends="StateManagedItem">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="TaskListeners" Extends="StateManagedItem">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Update" Type="SimpleListener">
          <Summary><![CDATA[The function to execute each time the task is run. The function will be called at each interval.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;clientRun&quot;, JsonMode.Raw" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The function to execute each time the task is run. The function will be called at each interval." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="TaskManager" Extends="Observable" Inherits="IAjaxPostBackEventHandler">
      <Summary><![CDATA[Provides the ability to execute one or more arbitrary tasks in a multithreaded manner.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:TaskManager runat=\&quot;server\&quot;&gt;&lt;/{0}:TaskManager&gt;&quot;" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(TaskManager), &quot;Build.ToolboxIcons.TaskManager.bmp&quot;" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="Description" RawValue="Provides the ability to execute one or more arbitrary tasks in a multithreaded manner." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Interval" Type="int" DefaultValue="10">
          <Summary><![CDATA[The minimum precision in milliseconds supported by this TaskRunner instance (defaults to 10)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. TaskManager&quot;" />
            <Attribute Type="DefaultValue" RawValue="10" />
            <Attribute Type="Description" RawValue="The minimum precision in milliseconds supported by this TaskRunner instance (defaults to 10)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AutoRunDelay" Type="int" DefaultValue="50">
          <Summary><![CDATA[The start delay in milliseconds for autorun tasks]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. TaskManager&quot;" />
            <Attribute Type="DefaultValue" RawValue="50" />
            <Attribute Type="Description" RawValue="The start delay in milliseconds for autorun tasks" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Tasks" Type="TaskCollection">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;tasksConfig&quot;, JsonMode.AlwaysArray" />
            <Attribute Type="Category" RawValue="&quot;3. TaskManager&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods>
        <Method Name="AddTask" ParamsRaw="Task task">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="RemoveTask" ParamsRaw="int index">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="RemoveTask" ParamsRaw="string name">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="StartAll">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="StopAll">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="StartTask" ParamsRaw="int index">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="StopTask" ParamsRaw="int index">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="StartTask" ParamsRaw="string name">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="StopTask" ParamsRaw="string name">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" />
          </Attributes>
          <Parameters />
        </Method>
      </Methods>
    </Class>
    <Class Name="TemplateColumn" Extends="Column">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="XType" Modifier="Override" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;xtype&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Template" Type="XTemplate" DefaultValue="null">
          <Summary><![CDATA[ An XTemplate to use to process a Record's data to produce a column's rendered value.]]></Summary>
          <Attributes>
            <Attribute Type="Category" RawValue="&quot;3. TemplateColumn&quot;" />
            <Attribute Type="ConfigOption" RawValue="&quot;tpl&quot;, typeof(LazyControlJsonConverter)" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue=" An XTemplate to use to process a Record's data to produce a column's rendered value." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TemplateSerializationProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;tpl&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="TextArea" Extends="TextFieldBase">
      <Summary><![CDATA[Multiline text field. Can be used as a direct replacement for traditional textarea <asp:TextBox TextMode='MultiLine'> fields, plus adds support for auto-sizing.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:TextArea runat=\&quot;server\&quot; /&gt;&quot;" />
        <Attribute Type="DefaultProperty" RawValue="&quot;Text&quot;" />
        <Attribute Type="DefaultEvent" RawValue="&quot;TextChanged&quot;" />
        <Attribute Type="ValidationProperty" RawValue="&quot;Text&quot;" />
        <Attribute Type="ControlValueProperty" RawValue="&quot;Text&quot;" />
        <Attribute Type="ParseChildren" RawValue="true" />
        <Attribute Type="PersistChildren" RawValue="false" />
        <Attribute Type="SupportsEventValidation" />
        <Attribute Type="Designer" RawValue="typeof(TextAreaDesigner)" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(TextArea), &quot;Build.ToolboxIcons.TextArea.bmp&quot;" />
        <Attribute Type="Description" RawValue="Multiline text field. Can be used as a direct replacement for traditional textarea &lt;asp:TextBox TextMode='MultiLine'&gt; fields, plus adds support for auto-sizing." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="GrowMax" Modifier="Override" Type="Unit" DefaultValue="typeof(Unit), &quot;1000&quot;">
          <Summary><![CDATA[The maximum width to allow when grow = true (defaults to 800).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. TextArea&quot;" />
            <Attribute Type="DefaultValue" RawValue="typeof(Unit), &quot;1000&quot;" />
            <Attribute Type="Description" RawValue="The maximum width to allow when grow = true (defaults to 800)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="GrowMin" Modifier="Override" Type="Unit" DefaultValue="typeof(Unit), &quot;60&quot;">
          <Summary><![CDATA[The minimum width to allow when grow = true (defaults to 60).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. TextArea&quot;" />
            <Attribute Type="DefaultValue" RawValue="typeof(Unit), &quot;60&quot;" />
            <Attribute Type="Description" RawValue="The minimum width to allow when grow = true (defaults to 60)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="PreventScrollbars" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to prevent scrollbars from appearing regardless of how much text is in the field (equivalent to setting overflow: hidden, defaults to false).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. TextArea&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to prevent scrollbars from appearing regardless of how much text is in the field (equivalent to setting overflow: hidden, defaults to false)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Listeners" Type="TextFieldListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="TextFieldDirectEvents">
          <Summary><![CDATA[Server-side Ajax Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Server-side Ajax Event Handlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="TextBoxConverter" Extends="StringConverter">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="TextField" Extends="TextFieldBase" Inherits="IPostBackEventHandler">
      <Summary><![CDATA[Basic text field. Can be used as a direct replacement for traditional text inputs, or as the base class for more sophisticated input controls (like Ext.form.TextArea and Ext.form.ComboBox).]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:TextField runat=\&quot;server\&quot; /&gt;&quot;" />
        <Attribute Type="DefaultProperty" RawValue="&quot;Text&quot;" />
        <Attribute Type="DefaultEvent" RawValue="&quot;TextChanged&quot;" />
        <Attribute Type="ValidationProperty" RawValue="&quot;Text&quot;" />
        <Attribute Type="ControlValueProperty" RawValue="&quot;Text&quot;" />
        <Attribute Type="ParseChildren" RawValue="true" />
        <Attribute Type="PersistChildren" RawValue="false" />
        <Attribute Type="SupportsEventValidation" />
        <Attribute Type="Designer" RawValue="typeof(TextFieldDesigner)" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(TextField), &quot;Build.ToolboxIcons.TextField.bmp&quot;" />
        <Attribute Type="Description" RawValue="Basic text field. Can be used as a direct replacement for traditional text inputs, or as the base class for more sophisticated input controls (like Ext.form.TextArea and Ext.form.ComboBox)." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Listeners" Type="TextFieldListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="TextFieldDirectEvents">
          <Summary><![CDATA[Server-side Ajax Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Server-side Ajax Event Handlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="TextFieldBase" Abstract="true" Extends="Field" Inherits="IEditableTextControl">
      <Summary><![CDATA[Base Class for all Text Field Web Controls.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" RawValue="Base Class for all Text Field Web Controls." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Text" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The Text value to initialize this field with.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Category" RawValue="&quot;6. TextField&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Bindable" RawValue="true, BindingDirection.TwoWay" />
            <Attribute Type="Description" RawValue="The Text value to initialize this field with." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RawText" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The Text value to initialize this field with.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Category" RawValue="&quot;6. TextField&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Description" RawValue="The Text value to initialize this field with." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AllowBlank" Type="bool" DefaultValue="true">
          <Summary><![CDATA[False to validate that the value length > 0 (defaults to true).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. TextField&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="False to validate that the value length &gt; 0 (defaults to true)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BlankText" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[Error text to display if the allow blank validation fails (defaults to 'This field is required').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. TextField&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Description" RawValue="Error text to display if the allow blank validation fails (defaults to 'This field is required')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DisableKeyFilter" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to disable input keystroke filtering (defaults to false).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. TextField&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to disable input keystroke filtering (defaults to false)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EmptyClass" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The CSS class to apply to an empty field to style the emptyText (defaults to 'x-form-empty-field'). This class is automatically added and removed as needed depending on the current field value.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. TextField&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The CSS class to apply to an empty field to style the emptyText (defaults to 'x-form-empty-field'). This class is automatically added and removed as needed depending on the current field value." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EmptyText" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The default text to display in an empty field (defaults to null).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. TextField&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Description" RawValue="The default text to display in an empty field (defaults to null)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EnableKeyEvents" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to enable the proxying of key events for the HTML input field (defaults to false)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. TextField&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to enable the proxying of key events for the HTML input field (defaults to false)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Grow" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True if this field should automatically grow and shrink to its content (defaults to false).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. TextField&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True if this field should automatically grow and shrink to its content (defaults to false)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="GrowMax" Type="Unit" DefaultValue="typeof(Unit), &quot;800&quot;">
          <Summary><![CDATA[The maximum width to allow when grow = true (defaults to 800).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. TextField&quot;" />
            <Attribute Type="DefaultValue" RawValue="typeof(Unit), &quot;800&quot;" />
            <Attribute Type="Description" RawValue="The maximum width to allow when grow = true (defaults to 800)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="GrowMin" Type="Unit" DefaultValue="typeof(Unit), &quot;30&quot;">
          <Summary><![CDATA[The minimum width to allow when grow = true (defaults to 30).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. TextField&quot;" />
            <Attribute Type="DefaultValue" RawValue="typeof(Unit), &quot;30&quot;" />
            <Attribute Type="Description" RawValue="The minimum width to allow when grow = true (defaults to 30)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="InputType" Type="InputType" DefaultValue="InputType.Text">
          <Summary><![CDATA[The type attribute for input fields.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="Category" RawValue="&quot;6. TextField&quot;" />
            <Attribute Type="DefaultValue" RawValue="InputType.Text" />
            <Attribute Type="Description" RawValue="The type attribute for input fields." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MaskRe" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[An input mask regular expression that will be used to filter keystrokes that don't match (defaults to null).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="typeof(RegexJsonConverter)" />
            <Attribute Type="Category" RawValue="&quot;6. TextField&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Editor" RawValue="&quot;System.Web.UI.Design.WebControls.RegexTypeEditor&quot;, typeof(UITypeEditor)" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName=&quot;SetMaskRe&quot;" />
            <Attribute Type="Description" RawValue="An input mask regular expression that will be used to filter keystrokes that don't match (defaults to null)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MaxLength" Type="int" DefaultValue="-1">
          <Summary><![CDATA[Maximum input field length allowed (defaults to Number.MAX_VALUE).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. TextField&quot;" />
            <Attribute Type="DefaultValue" RawValue="-1" />
            <Attribute Type="Description" RawValue="Maximum input field length allowed (defaults to Number.MAX_VALUE)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MaxLengthText" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[Error text to display if the maximum length validation fails (defaults to 'The maximum length for this field is {maxLength}').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. TextField&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Description" RawValue="Error text to display if the maximum length validation fails (defaults to 'The maximum length for this field is {maxLength}')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MinLength" Type="int" DefaultValue="0">
          <Summary><![CDATA[Minimum input field length required (defaults to 0).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. TextField&quot;" />
            <Attribute Type="DefaultValue" RawValue="0" />
            <Attribute Type="Description" RawValue="Minimum input field length required (defaults to 0)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MinLengthText" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[Error text to display if the minimum length validation fails (defaults to 'The minimum length for this field is {minLength}').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. TextField&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Description" RawValue="Error text to display if the minimum length validation fails (defaults to 'The minimum length for this field is {minLength}')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Regex" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A JavaScript RegExp object to be tested against the field value during validation (defaults to null). If available, this regex will be evaluated only after the basic validators all return true, and will be passed the current field value. If the test fails, the field will be marked invalid using RegexText.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="typeof(RegexJsonConverter)" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetRegex&quot;" />
            <Attribute Type="Category" RawValue="&quot;6. TextField&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Editor" RawValue="&quot;System.Web.UI.Design.WebControls.RegexTypeEditor&quot;, typeof(UITypeEditor)" />
            <Attribute Type="Description" RawValue="A JavaScript RegExp object to be tested against the field value during validation (defaults to null). If available, this regex will be evaluated only after the basic validators all return true, and will be passed the current field value. If the test fails, the field will be marked invalid using RegexText." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RegexText" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The error text to display if regex is used and the test fails during validation (defaults to '').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. TextField&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Description" RawValue="The error text to display if regex is used and the test fails during validation (defaults to '')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SelectOnFocus" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to automatically select any existing field text when the field receives input focus (defaults to false).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. TextField&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to automatically select any existing field text when the field receives input focus (defaults to false)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Truncate" Type="bool" DefaultValue="true">
          <Summary><![CDATA[If MaxLength property has been set, more characters than the MaxLength can be entered if Truncate='false'. If 'false', then a validation error is rendered if more characters entered (or pasted) than the MaxLength property. Default value is 'true'.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. TextField&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="If MaxLength property has been set, more characters than the MaxLength can be entered if Truncate='false'. If 'false', then a validation error is rendered if more characters entered (or pasted) than the MaxLength property. Default value is 'true'." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Validator" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A custom validation function to be called during field validation (defaults to null). If available, this function will be called only after the basic validators all return true, and will be passed the current field value and expected to return boolean true if the value is valid or a string error message if invalid.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;6. TextField&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Editor" RawValue="&quot;System.Web.UI.Design.WebControls.RegexTypeEditor&quot;, typeof(UITypeEditor)" />
            <Attribute Type="Description" RawValue="A custom validation function to be called during field validation (defaults to null). If available, this function will be called only after the basic validators all return true, and will be passed the current field value and expected to return boolean true if the value is valid or a string error message if invalid." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Vtype" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A validation type name as defined in Ext.form.VTypes (defaults to null).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. TextField&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="A validation type name as defined in Ext.form.VTypes (defaults to null)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="VtypeText" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A custom error message to display in place of the default message provided for the vtype currently set for this field (defaults to ''). Only applies if vtype is set, else ignored.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. TextField&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Description" RawValue="A custom error message to display in place of the default message provided for the vtype currently set for this field (defaults to ''). Only applies if vtype is set, else ignored." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Icon" Type="Icon" DefaultValue="Icon.None">
          <Summary><![CDATA[The icon to use in the input field. See also, IconCls to set an icon with a custom Css class.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;5. Button&quot;" />
            <Attribute Type="DefaultValue" RawValue="Icon.None" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetIconClass&quot;" />
            <Attribute Type="Description" RawValue="The icon to use in the input field. See also, IconCls to set an icon with a custom Css class." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IconClsProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;iconCls&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IconCls" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A css class which sets a background image to be used as the icon for this field.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetIconClass&quot;" />
            <Attribute Type="Category" RawValue="&quot;5. Button&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="A css class which sets a background image to be used as the icon for this field." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods>
        <Method Name="AutoSize">
          <Summary><![CDATA[Automatically grows the field to accomodate the width of the text up to the maximum field width allowed. This only takes effect if grow = true, and fires the autosize event.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Automatically grows the field to accomodate the width of the text up to the maximum field width allowed. This only takes effect if grow = true, and fires the autosize event." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SelectText">
          <Summary><![CDATA[Selects text in this field]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Selects text in this field" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SelectText" ParamsRaw="int start">
          <Summary><![CDATA[Selects text in this field]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Selects text in this field" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SelectText" ParamsRaw="int start, int end">
          <Summary><![CDATA[Selects text in this field]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Selects text in this field" />
          </Attributes>
          <Parameters />
        </Method>
      </Methods>
    </Class>
    <Class Name="TextFieldDirectEvents" Extends="FieldDirectEvents">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="AutoSize" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when the autosize function is triggered. The field may or may not have actually changed size according to the default logic, but this event provides a hook for the developer to apply additional logic at runtime to resize the field if needed.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Field), &quot;This text field&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;width&quot;, typeof(int), &quot;The new field width&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;autosize&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the autosize function is triggered. The field may or may not have actually changed size according to the default logic, but this event provides a hook for the developer to apply additional logic at runtime to resize the field if needed." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="KeyDown" Type="ComponentDirectEvent">
          <Summary><![CDATA[Keydown input field event. This event only fires if enableKeyEvents is set to true.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Field), &quot;This text field&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object), &quot;EventObject&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;keydown&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Keydown input field event. This event only fires if enableKeyEvents is set to true." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="KeyPress" Type="ComponentDirectEvent">
          <Summary><![CDATA[Keypress input field event. This event only fires if enableKeyEvents is set to true.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Field), &quot;This text field&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object), &quot;EventObject&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;keypress&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Keypress input field event. This event only fires if enableKeyEvents is set to true." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="KeyUp" Type="ComponentDirectEvent">
          <Summary><![CDATA[Keyup input field event. This event only fires if enableKeyEvents is set to true.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Field), &quot;This text field&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object), &quot;EventObject&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;keyup&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Keyup input field event. This event only fires if enableKeyEvents is set to true." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IconClick" Type="ComponentDirectEvent">
          <Summary><![CDATA[Icon click event]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Field), &quot;This text field&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object), &quot;The Ext.EventObject encapsulating the DOM event&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;t&quot;, typeof(object), &quot;The target of the event&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;iconclick&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Icon click event" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="TextFieldListeners" Extends="FieldListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="AutoSize" Type="ComponentListener">
          <Summary><![CDATA[Fires when the autosize function is triggered. The field may or may not have actually changed size according to the default logic, but this event provides a hook for the developer to apply additional logic at runtime to resize the field if needed.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Field), &quot;This text field&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;width&quot;, typeof(int), &quot;The new field width&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;autosize&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the autosize function is triggered. The field may or may not have actually changed size according to the default logic, but this event provides a hook for the developer to apply additional logic at runtime to resize the field if needed." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="KeyDown" Type="ComponentListener">
          <Summary><![CDATA[Keydown input field event. This event only fires if enableKeyEvents is set to true.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Field), &quot;This text field&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object), &quot;EventObject&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;keydown&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Keydown input field event. This event only fires if enableKeyEvents is set to true." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="KeyPress" Type="ComponentListener">
          <Summary><![CDATA[Keypress input field event. This event only fires if enableKeyEvents is set to true.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Field), &quot;This text field&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object), &quot;EventObject&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;keypress&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Keypress input field event. This event only fires if enableKeyEvents is set to true." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="KeyUp" Type="ComponentListener">
          <Summary><![CDATA[Keyup input field event. This event only fires if enableKeyEvents is set to true.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Field), &quot;This text field&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object), &quot;EventObject&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;keyup&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Keyup input field event. This event only fires if enableKeyEvents is set to true." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IconClick" Type="ComponentListener">
          <Summary><![CDATA[Icon click event]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Field), &quot;This text field&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;, typeof(object), &quot;The Ext.EventObject encapsulating the DOM event&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;t&quot;, typeof(object), &quot;The target of the event&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;iconclick&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Icon click event" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ThreeStateBoolJsonConverter" Extends="ExtJsonConverter">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="TimeField" Extends="ComboBox">
      <Summary><![CDATA[Provides a time input field with a time dropdown and automatic time validation.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:TimeField runat=\&quot;server\&quot;&gt;&lt;/{0}:TimeField&gt;&quot;" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(TimeField), &quot;Build.ToolboxIcons.TimeField.bmp&quot;" />
        <Attribute Type="Description" RawValue="Provides a time input field with a time dropdown and automatic time validation." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="EmptyValue" Modifier="Override" Type="object" DefaultValue="typeof(TimeSpan), &quot;-9223372036854775808&quot;">
          <Summary><![CDATA[The fields null value.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;5. Field&quot;" />
            <Attribute Type="DefaultValue" RawValue="typeof(TimeSpan), &quot;-9223372036854775808&quot;" />
            <Attribute Type="Description" RawValue="The fields null value." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ItemsProxy" Modifier="Override" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;store&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SelectedTime" Type="TimeSpan" DefaultValue="typeof(TimeSpan), &quot;-9223372036854775808&quot;">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="TypeConverter" RawValue="typeof(TimeSpanConverter)" />
            <Attribute Type="Category" RawValue="&quot;9. TimeField&quot;" />
            <Attribute Type="DefaultValue" RawValue="typeof(TimeSpan), &quot;-9223372036854775808&quot;" />
            <Attribute Type="Bindable" RawValue="true, BindingDirection.TwoWay" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ValueProxy" Modifier="Override" Access="ProtectedInternal" Type="object" DefaultValue="null">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;value&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SelectedValue" Type="object" DefaultValue="null">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;9. TimeField&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Bindable" RawValue="true, BindingDirection.TwoWay" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Value" Modifier="Override" Type="object" DefaultValue="null">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Browsable" RawValue="false" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetTimeValue&quot;" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Hidden" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AltFormats" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[Multiple date formats separated by \" | \" to try when parsing a user input value and it doesn't match the defined format (defaults to 'm/d/Y|m-d-y|m-d-Y|m/d|m-d|d').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;9. TimeField&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="Multiple date formats separated by \&quot; | \&quot; to try when parsing a user input value and it doesn't match the defined format (defaults to 'm/d/Y|m-d-y|m-d-Y|m/d|m-d|d')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AltFormatsProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;altFormats&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Format" Type="string" DefaultValue="&quot;t&quot;">
          <Summary><![CDATA[The default date format string which can be overriden for localization support. The format must be valid according to Date.parseDate (defaults to 'h:mm tt', e.g., '3:15 PM'). For 24-hour time format try 'H:mm' instead.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;9. TimeField&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;t&quot;" />
            <Attribute Type="Description" RawValue="The default date format string which can be overriden for localization support. The format must be valid according to Date.parseDate (defaults to 'h:mm tt', e.g., '3:15 PM'). For 24-hour time format try 'H:mm' instead." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="FormatProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;format&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Increment" Type="int" DefaultValue="15">
          <Summary><![CDATA[The number of minutes between each time value in the list (defaults to 15).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;9. TimeField&quot;" />
            <Attribute Type="DefaultValue" RawValue="15" />
            <Attribute Type="Description" RawValue="The number of minutes between each time value in the list (defaults to 15)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MaxText" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The error text to display when the time is after maxValue (defaults to 'The time in this field must be equal to or before {0}').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;9. TimeField&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Description" RawValue="The error text to display when the time is after maxValue (defaults to 'The time in this field must be equal to or before {0}')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MaxTime" Type="TimeSpan" DefaultValue="typeof(TimeSpan), &quot;9223372036854775807&quot;">
          <Summary><![CDATA[The maximum allowed time. Can be either a Javascript date object or a string date in a valid format (defaults to null).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;9. TimeField&quot;" />
            <Attribute Type="DefaultValue" RawValue="typeof(TimeSpan), &quot;9223372036854775807&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(TimeSpanConverter)" />
            <Attribute Type="Description" RawValue="The maximum allowed time. Can be either a Javascript date object or a string date in a valid format (defaults to null)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MaxTimeProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;maxValue&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MinTime" Type="TimeSpan" DefaultValue="typeof(TimeSpan), &quot;-9223372036854775808&quot;">
          <Summary><![CDATA[The minimum allowed time. Can be either a Javascript date object or a string date in a valid format (defaults to null).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;9. TimeField&quot;" />
            <Attribute Type="DefaultValue" RawValue="typeof(TimeSpan), &quot;-9223372036854775808&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(TimeSpanConverter)" />
            <Attribute Type="Description" RawValue="The minimum allowed time. Can be either a Javascript date object or a string date in a valid format (defaults to null)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MinTimeProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;minValue&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MinText" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The error text to display when the date in the cell is before minValue (defaults to 'The time in this field must be equal to or after {0}').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;9. TimeField&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Description" RawValue="The error text to display when the date in the cell is before minValue (defaults to 'The time in this field must be equal to or after {0}')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AllQuery" Modifier="Override" Type="string">
          <Attributes>
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Hidden" />
            <Attribute Type="Browsable" RawValue="false" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Ignore" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="QueryDelay" Modifier="Override" Type="int">
          <Attributes>
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Hidden" />
            <Attribute Type="Browsable" RawValue="false" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Ignore" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="QueryParam" Modifier="Override" Type="string">
          <Attributes>
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Hidden" />
            <Attribute Type="Browsable" RawValue="false" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Ignore" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="StoreID" Modifier="Override" Type="string">
          <Attributes>
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Hidden" />
            <Attribute Type="Browsable" RawValue="false" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Ignore" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SelectedItem" Modifier="Override" Type="ListItem">
          <Attributes>
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Hidden" />
            <Attribute Type="Browsable" RawValue="false" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Ignore" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ValueField" Modifier="Override" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Hidden" />
            <Attribute Type="Browsable" RawValue="false" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DisplayField" Modifier="Override" Type="string">
          <Attributes>
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Hidden" />
            <Attribute Type="Browsable" RawValue="false" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Ignore" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TriggerAction" Modifier="Override" Type="TriggerAction">
          <Attributes>
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Hidden" />
            <Attribute Type="Browsable" RawValue="false" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Ignore" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Mode" Modifier="Override" Type="DataLoadMode">
          <Attributes>
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Hidden" />
            <Attribute Type="Browsable" RawValue="false" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Ignore" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="Tip" Abstract="true" Extends="PanelBase">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Closable" Modifier="Override" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to render a close tool button into the tooltip header (defaults to false).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. Tip&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to render a close tool button into the tooltip header (defaults to false)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ConstrainPosition" Type="bool" DefaultValue="false">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. Tip&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DefaultAlign" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[Experimental. The default Ext.Element.alignTo anchor position value for this tip relative to its element of origin (defaults to 'tl-bl?').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. Tip&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Experimental. The default Ext.Element.alignTo anchor position value for this tip relative to its element of origin (defaults to 'tl-bl?')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MaxWidth" Modifier="Override" Type="Unit" DefaultValue="typeof(Unit), &quot;300&quot;">
          <Summary><![CDATA[The maximum width of the tip in pixels (defaults to 300). The maximum supported value is 500.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. Tip&quot;" />
            <Attribute Type="DefaultValue" RawValue="typeof(Unit), &quot;300&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The maximum width of the tip in pixels (defaults to 300). The maximum supported value is 500." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MinWidth" Modifier="Override" Type="Unit" DefaultValue="typeof(Unit), &quot;40&quot;">
          <Summary><![CDATA[The minimum width of the tip in pixels (defaults to 40).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. Tip&quot;" />
            <Attribute Type="DefaultValue" RawValue="typeof(Unit), &quot;40&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The minimum width of the tip in pixels (defaults to 40)." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods>
        <Method Name="ShowAt" ParamsRaw="Unit x, Unit y">
          <Summary><![CDATA[Shows this tip at the specified XY position.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Shows this tip at the specified XY position." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="ShowBy" ParamsRaw="string id">
          <Summary><![CDATA[Experimental. Shows this tip at a position relative to another element using a standard Ext.Element.alignTo anchor position value.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Experimental. Shows this tip at a position relative to another element using a standard Ext.Element.alignTo anchor position value." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="ShowBy" ParamsRaw="string id, string position">
          <Summary><![CDATA[Experimental. Shows this tip at a position relative to another element using a standard Ext.Element.alignTo anchor position value.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Experimental. Shows this tip at a position relative to another element using a standard Ext.Element.alignTo anchor position value." />
          </Attributes>
          <Parameters />
        </Method>
      </Methods>
    </Class>
    <Class Name="TokenJsonConverter" Extends="ExtJsonConverter">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="TokenUtils">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="ToLowerCamelCase" Extends="ExtJsonConverter">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="Tool" Extends="StateManagedItem">
      <Attributes>
        <Attribute Type="DefaultProperty" RawValue="&quot;Handler&quot;" />
        <Attribute Type="TypeConverter" RawValue="typeof(ToolConverter)" />
        <Attribute Type="ToolboxItem" RawValue="false" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Type" Type="ToolType" DefaultValue="ToolType.None">
          <Summary><![CDATA[The type of tool to create.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;id&quot;, JsonMode.ToLower" />
            <Attribute Type="DefaultValue" RawValue="ToolType.None" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The type of tool to create." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CustomType" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The custom type of tool to create.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;id&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The custom type of tool to create." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="FnProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;handler&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Scope" Type="string" DefaultValue="&quot;this&quot;">
          <Summary><![CDATA[The scope in which to call the handler.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;this&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The scope in which to call the handler." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Qtip" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A tip string.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="A tip string." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="QTipCfg" Type="QTipCfg" DefaultValue="null">
          <Summary><![CDATA[A tip string.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;qtip&quot;, JsonMode.Object" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="A tip string." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Hidden" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to initially render hidden.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to initially render hidden." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="Toolbar" Extends="ToolbarBase">
      <Summary><![CDATA[Basic Toolbar class. Toolbar elements can be created explicitly via their constructors, or implicitly via their xtypes. Some items also have shortcut strings for creation.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:Toolbar runat=\&quot;server\&quot;&gt;&lt;Items&gt;&lt;/Items&gt;&lt;/{0}:Toolbar&gt;&quot;" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(Toolbar), &quot;Build.ToolboxIcons.Toolbar.bmp&quot;" />
        <Attribute Type="Description" RawValue="Basic Toolbar class. Toolbar elements can be created explicitly via their constructors, or implicitly via their xtypes. Some items also have shortcut strings for creation." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Listeners" Type="ToolbarListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="ToolbarDirectEvents">
          <Summary><![CDATA[Server-side Ajax Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Server-side Ajax Event Handlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ToolbarBase" Abstract="true" Extends="ContainerBase">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="DefaultType" Modifier="Override" Type="string" DefaultValue="&quot;Button&quot;">
          <Summary><![CDATA[The default type of content Container represented by this object as registered in Ext.ComponentMgr (defaults to 'panel').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;5. Container&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;Button&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The default type of content Container represented by this object as registered in Ext.ComponentMgr (defaults to 'panel')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DefaultTypeProxy" Access="Protected" Type="string" DefaultValue="&quot;button&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;defaultType&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;button&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Flat" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to use flat style.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. Toolbar&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to use flat style." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ClassicButtonStyle" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to use classic (none-flat) style.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. Toolbar&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to use classic (none-flat) style." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EnableOverflow" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Defaults to false. Configure <tt>true</tt> to make the toolbar provide a button which activates a dropdown Menu to show items which overflow the Toolbar's width.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. Toolbar&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Defaults to false. Configure &lt;tt&gt;true&lt;/tt&gt; to make the toolbar provide a button which activates a dropdown Menu to show items which overflow the Toolbar's width." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ToolbarCollection" Extends="ItemsCollection&lt;ToolbarBase&gt;">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Toolbar" Type="ToolbarBase">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Object" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ToolbarCollectionEditor" Extends="CollectionEditor">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="ToolbarDirectEvents" Extends="ContainerDirectEvents">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="ToolbarDroppable" Extends="Plugin" Inherits="IAjaxPostBackEventHandler">
      <Summary><![CDATA[Plugin which allows items to be dropped onto a toolbar and be turned into new Toolbar items.]]></Summary>
      <Attributes>
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(ToolbarDroppable), &quot;Build.ToolboxIcons.Plugin.bmp&quot;" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:ToolbarDroppable runat=\&quot;server\&quot; /&gt;&quot;" />
        <Attribute Type="Description" RawValue="Plugin which allows items to be dropped onto a toolbar and be turned into new Toolbar items." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="ConfigIDProxy" Modifier="Override" Access="Protected" Type="string">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;proxyId&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CreateItem" Type="JFunction" DefaultValue="null">
          <Summary><![CDATA[Creates the new toolbar item based on drop data.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;3. ToolbarDroppable&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="Creates the new toolbar item based on drop data." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CanDrop" Type="JFunction" DefaultValue="null">
          <Summary><![CDATA[Returns true if the drop is allowed on the drop target.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;3. ToolbarDroppable&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="Returns true if the drop is allowed on the drop target." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CalculateEntryIndex" Type="JFunction" DefaultValue="null">
          <Summary><![CDATA[Calculates the location on the toolbar to create the new sorter button based on the XY of the drag event]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;3. ToolbarDroppable&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="Calculates the location on the toolbar to create the new sorter button based on the XY of the drag event" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEventConfig" Type="BaseDirectEvent">
          <Attributes>
            <Attribute Type="Category" RawValue="&quot;3. ToolbarDroppable&quot;" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Object" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Mode" Type="DataLoadMode" DefaultValue="DataLoadMode.Local">
          <Summary><![CDATA[Set to 'remote' if need remote item creation.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="Category" RawValue="&quot;3. ToolbarDroppable&quot;" />
            <Attribute Type="DefaultValue" RawValue="DataLoadMode.Local" />
            <Attribute Type="Description" RawValue="Set to 'remote' if need remote item creation." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeRemoteCreate" Type="JFunction" DefaultValue="null">
          <Summary><![CDATA[Calls before remote request]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;3. ToolbarDroppable&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="Calls before remote request" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AfterRemoteCreate" Type="JFunction" DefaultValue="null">
          <Summary><![CDATA[Calls before remote request]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;3. ToolbarDroppable&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="Calls before remote request" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ToolbarFill" Extends="ToolbarItem">
      <Summary><![CDATA[A simple element that adds a greedy (100% width) horizontal space between items in a toolbar.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="Description" RawValue="A simple element that adds a greedy (100% width) horizontal space between items in a toolbar." />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="ToolbarHtmlElement" Extends="ToolbarItem">
      <Summary><![CDATA[Any standard HTML element.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="Description" RawValue="Any standard HTML element." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="TargetProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;target&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Target" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The target element which will be placed to toolbar.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The target element which will be placed to toolbar." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ToolbarItem" Abstract="true" Extends="BoxComponentBase" Inherits="IToolbarItem">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods>
        <Method Name="Disable">
          <Summary><![CDATA[Disable this component.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Disable this component." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Enable">
          <Summary><![CDATA[Enable this component.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Enable this component." />
          </Attributes>
          <Parameters />
        </Method>
      </Methods>
    </Class>
    <Class Name="ToolbarItemCreateEventArgs" Extends="EventArgs">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="ToolbarListeners" Extends="ContainerListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="ToolbarReorderer" Extends="Plugin">
      <Summary><![CDATA[Plugin which can be attached to any Ext.Toolbar instance. Provides ability to reorder toolbar items with drag and drop.]]></Summary>
      <Attributes>
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(ToolbarReorderer), &quot;Build.ToolboxIcons.Plugin.bmp&quot;" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:ToolbarReorderer runat=\&quot;server\&quot; /&gt;&quot;" />
        <Attribute Type="Description" RawValue="Plugin which can be attached to any Ext.Toolbar instance. Provides ability to reorder toolbar items with drag and drop." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Animate" Type="bool" DefaultValue="true">
          <Summary><![CDATA[If set to true, the rearranging of the toolbar items is animated]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. ToolbarReorderer&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="If set to true, the rearranging of the toolbar items is animated" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AnimationDuration" Type="double" DefaultValue="0.2">
          <Summary><![CDATA[The duration of the animation used to move other toolbar items out of the way]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;3. ToolbarReorderer&quot;" />
            <Attribute Type="DefaultValue" RawValue="0.2" />
            <Attribute Type="Description" RawValue="The duration of the animation used to move other toolbar items out of the way" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DefaultReorderable" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to make every toolbar draggable unless reorderable is specifically set to false. This defaults to false]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. ToolbarReorderer&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to make every toolbar draggable unless reorderable is specifically set to false. This defaults to false" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Listeners" Type="ToolbarReordererListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="ToolbarReordererDirectEvents">
          <Summary><![CDATA[Server-side DirectEventHandlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Server-side DirectEventHandlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ToolbarReordererDirectEvents" Extends="ComponentDirectEvents">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Reorder" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after a reorder has occured.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;button&quot;, typeof(object), &quot;moved button&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;tbar&quot;, typeof(Toolbar), &quot;&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;reorder&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after a reorder has occured." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ToolbarReordererListeners" Extends="ComponentListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Reorder" Type="ComponentListener">
          <Summary><![CDATA[Fires after a reorder has occured.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;button&quot;, typeof(object), &quot;moved button&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;tbar&quot;, typeof(Toolbar), &quot;&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;reorder&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after a reorder has occured." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ToolbarSeparator" Extends="ToolbarItem">
      <Summary><![CDATA[A simple class that adds a vertical separator bar between toolbar items.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="Description" RawValue="A simple class that adds a vertical separator bar between toolbar items." />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="ToolbarSpacer" Extends="ToolbarItem">
      <Summary><![CDATA[A simple element that adds extra horizontal space between items in a toolbar.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="Description" RawValue="A simple element that adds extra horizontal space between items in a toolbar." />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="ToolbarTextItem" Extends="ToolbarItem">
      <Summary><![CDATA[A simple class that renders text directly into a toolbar.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="Description" RawValue="A simple class that renders text directly into a toolbar." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Text" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A Toolbar Text item.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetText&quot;" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="A Toolbar Text item." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Listeners" Type="BoxComponentListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="BoxComponentDirectEvents">
          <Summary><![CDATA[Server-side Ajax Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="Description" RawValue="Server-side Ajax Event Handlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ToolsCollection" Extends="StateManagedCollection&lt;Tool&gt;">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="ToolTip" Extends="Tip">
      <Summary><![CDATA[A standard tooltip implementation for providing additional information when hovering over a target element.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:ToolTip runat=\&quot;server\&quot; Title=\&quot;Message\&quot;&gt;&lt;/{0}:ToolTip&gt;&quot;" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(ToolTip), &quot;Build.ToolboxIcons.ToolTip.bmp&quot;" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="Description" RawValue="A standard tooltip implementation for providing additional information when hovering over a target element." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="AnchorOffset" Type="int" DefaultValue="0">
          <Summary><![CDATA[A numeric pixel value used to offset the default position of the anchor arrow (defaults to 0). When the anchor position is on the top or bottom of the tooltip, anchorOffset will be used as a horizontal offset. Likewise, when the anchor position is on the left or right side, anchorOffset will be used as a vertical offset.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;8. ToolTip&quot;" />
            <Attribute Type="DefaultValue" RawValue="0" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="A numeric pixel value used to offset the default position of the anchor arrow (defaults to 0). When the anchor position is on the top or bottom of the tooltip, anchorOffset will be used as a horizontal offset. Likewise, when the anchor position is on the left or right side, anchorOffset will be used as a vertical offset." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AnchorToTarget" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to automatically hide the tooltip after the mouse exits the target element or after the dismissDelay has expired if set (defaults to true). If closable = true a close tool button will be rendered into the tooltip header.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;8. ToolTip&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to automatically hide the tooltip after the mouse exits the target element or after the dismissDelay has expired if set (defaults to true). If closable = true a close tool button will be rendered into the tooltip header." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AutoHide" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to automatically hide the tooltip after the mouse exits the target element or after the dismissDelay has expired if set (defaults to true). If closable = true a close tool button will be rendered into the tooltip header.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;8. ToolTip&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to automatically hide the tooltip after the mouse exits the target element or after the dismissDelay has expired if set (defaults to true). If closable = true a close tool button will be rendered into the tooltip header." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Delegate" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A DomQuery selector which allows selection of individual elements within the target element to trigger showing and hiding the ToolTip as the mouse moves within the target.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;8. ToolTip&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="A DomQuery selector which allows selection of individual elements within the target element to trigger showing and hiding the ToolTip as the mouse moves within the target." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DismissDelay" Type="int" DefaultValue="5000">
          <Summary><![CDATA[Delay in milliseconds before the tooltip automatically hides (defaults to 5000). To disable automatic hiding, set dismissDelay = 0.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;8. ToolTip&quot;" />
            <Attribute Type="DefaultValue" RawValue="5000" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Delay in milliseconds before the tooltip automatically hides (defaults to 5000). To disable automatic hiding, set dismissDelay = 0." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HideDelay" Type="int" DefaultValue="200">
          <Summary><![CDATA[Delay in milliseconds after the mouse exits the target element but before the tooltip actually hides (defaults to 200). Set to 0 for the tooltip to hide immediately.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;8. ToolTip&quot;" />
            <Attribute Type="DefaultValue" RawValue="200" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Delay in milliseconds after the mouse exits the target element but before the tooltip actually hides (defaults to 200). Set to 0 for the tooltip to hide immediately." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MouseOffset" Type="int[]" DefaultValue="null">
          <Summary><![CDATA[An XY offset from the mouse position where the tooltip should be shown (defaults to [15,18]).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="typeof(IntArrayJsonConverter)" />
            <Attribute Type="TypeConverter" RawValue="typeof(IntArrayConverter)" />
            <Attribute Type="Category" RawValue="&quot;8. ToolTip&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="An XY offset from the mouse position where the tooltip should be shown (defaults to [15,18])." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ShowDelay" Type="int" DefaultValue="500">
          <Summary><![CDATA[Delay in milliseconds before the tooltip displays after the mouse enters the target element (defaults to 500).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;8. ToolTip&quot;" />
            <Attribute Type="DefaultValue" RawValue="500" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Delay in milliseconds before the tooltip displays after the mouse enters the target element (defaults to 500)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TargetControl" Type="Control">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Target" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The target id to associate with this tooltip.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;8. ToolTip&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The target id to associate with this tooltip." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TargetProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;target&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TrackMouse" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to have the tooltip follow the mouse as it moves over the target element (defaults to false).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;8. ToolTip&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to have the tooltip follow the mouse as it moves over the target element (defaults to false)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Listeners" Type="PanelListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="PanelDirectEvents">
          <Summary><![CDATA[Server-side Ajax Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="Description" RawValue="Server-side Ajax Event Handlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods>
        <Method Name="Update" Modifier="Override" ParamsRaw="string html">
          <Summary><![CDATA[Update the html of the Body, optionally searching for and processing scripts.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Update the html of the Body, optionally searching for and processing scripts." />
          </Attributes>
          <Parameters />
        </Method>
      </Methods>
    </Class>
    <Class Name="TreeDragZone" Extends="DragZone">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="TreeDropZone" Extends="DropZone">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="DragOverDataProxy" Access="ProtectedInternal" Type="string" DefaultValue="&quot;{}&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;dragOverData&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;{}&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AllowContainerDrop" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True if drops on the tree container (outside of a specific tree node) are allowed (defaults to false)]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. TreeDropZone&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True if drops on the tree container (outside of a specific tree node) are allowed (defaults to false)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AllowParentInsert" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Allow inserting a dragged node between an expanded parent node and its first child that will become a sibling of the parent when dropped (defaults to false)]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. TreeDropZone&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Allow inserting a dragged node between an expanded parent node and its first child that will become a sibling of the parent when dropped (defaults to false)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AppendOnly" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True if the tree should only allow append drops (use for trees which are sorted, defaults to false)]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. TreeDropZone&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True if the tree should only allow append drops (use for trees which are sorted, defaults to false)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ExpandDelay" Type="int" DefaultValue="1000">
          <Summary><![CDATA[The delay in milliseconds to wait before expanding a target tree node while dragging a droppable node over the target (defaults to 1000)]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. TreeDropZone&quot;" />
            <Attribute Type="DefaultValue" RawValue="1000" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The delay in milliseconds to wait before expanding a target tree node while dragging a droppable node over the target (defaults to 1000)" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="TreeEditor" Extends="Editor">
      <Summary><![CDATA[Provides editor functionality for inline tree node editing. Any valid Ext.form.Field subclass can be used as the editor field.]]></Summary>
      <Attributes>
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:TreeEditor runat=\&quot;server\&quot; /&gt;&quot;" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(Editor), &quot;Build.ToolboxIcons.Editor.bmp&quot;" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="Description" RawValue="Provides editor functionality for inline tree node editing. Any valid Ext.form.Field subclass can be used as the editor field." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="EditDelay" Type="int" DefaultValue="350">
          <Summary><![CDATA[The number of milliseconds between clicks to register a double-click that will trigger editing on the current node (defaults to 350). If two clicks occur on the same node within this time span, the editor for the node will display, otherwise it will be processed as a regular click.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. TreeEditor&quot;" />
            <Attribute Type="DefaultValue" RawValue="350" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The number of milliseconds between clicks to register a double-click that will trigger editing on the current node (defaults to 350). If two clicks occur on the same node within this time span, the editor for the node will display, otherwise it will be processed as a regular click." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AutoEdit" Type="bool" DefaultValue="true">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. TreeEditor&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HideEl" Modifier="Override" Type="bool" DefaultValue="false">
          <Summary><![CDATA[False to keep the bound element visible while the editor is displayed (defaults to false)]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. TreeEditor&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="False to keep the bound element visible while the editor is displayed (defaults to false)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MaxWidth" Type="int" DefaultValue="250">
          <Summary><![CDATA[The maximum width in pixels of the editor field (defaults to 250). Note that if the maxWidth would exceed the containing tree element's size, it will be automatically limited for you to the container width, taking scroll and client offsets into account prior to each edit.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. TreeEditor&quot;" />
            <Attribute Type="DefaultValue" RawValue="250" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The maximum width in pixels of the editor field (defaults to 250). Note that if the maxWidth would exceed the containing tree element's size, it will be automatically limited for you to the container width, taking scroll and client offsets into account prior to each edit." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Shim" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to shim the editor if selects/iframes could be displayed beneath it (defaults to false)]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;5. TreeEditor&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to shim the editor if selects/iframes could be displayed beneath it (defaults to false)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TreePanelID" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The tree panel to use.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;tree&quot;, JsonMode.ToClientID" />
            <Attribute Type="Category" RawValue="&quot;5. TreeEditor&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="IDReferenceProperty" RawValue="typeof(TreePanel)" />
            <Attribute Type="Description" RawValue="The tree panel to use." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Filter" Type="TreeEditorFilter">
          <Summary><![CDATA[The tree editor filter to edit particular nodes]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;5. TreeEditor&quot;" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="The tree editor filter to edit particular nodes" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="UpdateEl" Modifier="Override" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to update the innerHTML of the bound element when the update completes (defaults to false)]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;4. Editor&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to update the innerHTML of the bound element when the update completes (defaults to false)" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="TreeEditorFilter" Extends="StateManagedItem">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Attribute" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[Attribute name to retrieve the value]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Attribute name to retrieve the value" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Value" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[Value of attribute, the editor will be shown if a node has attribute with the same value]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Value of attribute, the editor will be shown if a node has attribute with the same value" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="TreeGrid" Extends="TreePanel">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="AutoExpandColumn" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The index (or data index) of a column in this tree grid that should expand to fill unused space]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;8. TreeGrid&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The index (or data index) of a column in this tree grid that should expand to fill unused space" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AutoExpandMax" Type="Unit" DefaultValue="typeof(Unit), &quot;1000&quot;">
          <Summary><![CDATA[The maximum width the autoExpandColumn can have (if enabled). Defaults to 1000.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;8. TreeGrid&quot;" />
            <Attribute Type="DefaultValue" RawValue="typeof(Unit), &quot;1000&quot;" />
            <Attribute Type="Description" RawValue="The maximum width the autoExpandColumn can have (if enabled). Defaults to 1000." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AutoExpandMin" Type="Unit" DefaultValue="typeof(Unit), &quot;50&quot;">
          <Summary><![CDATA[The minimum width the autoExpandColumn can have (if enabled). defaults to 50.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;8. TreeGrid&quot;" />
            <Attribute Type="DefaultValue" RawValue="typeof(Unit), &quot;50&quot;" />
            <Attribute Type="Description" RawValue="The minimum width the autoExpandColumn can have (if enabled). defaults to 50." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Columns" Type="TreeGridColumnCollection">
          <Summary><![CDATA[An array of column configuration objects]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;columns&quot;, JsonMode.AlwaysArray" />
            <Attribute Type="Category" RawValue="&quot;8. TreeGrid&quot;" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="An array of column configuration objects" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RootVisible" Modifier="Override" Type="bool" DefaultValue="false">
          <Summary><![CDATA[false to hide the root node (defaults to true)]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. TreePanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="false to hide the root node (defaults to true)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="UseArrows" Modifier="Override" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to use Vista-style arrows in the tree (defaults to false)]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. TreePanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to use Vista-style arrows in the tree (defaults to false)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Lines" Modifier="Override" Type="bool" DefaultValue="false">
          <Summary><![CDATA[False to disable tree lines (defaults to true)]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. TreePanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="False to disable tree lines (defaults to true)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ColumnResize" Type="bool" DefaultValue="true">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;8. TreeGrid&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EnableSort" Type="bool" DefaultValue="true">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;8. TreeGrid&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ReserveScrollOffset" Type="bool" DefaultValue="true">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;8. TreeGrid&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EnableHdMenu" Type="bool" DefaultValue="true">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;8. TreeGrid&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ColumnsText" Type="string" DefaultValue="&quot;Columns&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;8. TreeGrid&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;Columns&quot;" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HideHeaders" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to hide the grid's header (defaults to false).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetHideHeaders&quot;" />
            <Attribute Type="Category" RawValue="&quot;8. TreeGrid&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to hide the grid's header (defaults to false)." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="TreeGridBooleanColumn" Extends="TreeGridColumn">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="XType" Type="string">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;xtype&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="FalseText" Type="string" DefaultValue="&quot;false&quot;">
          <Summary><![CDATA[The string returned by the renderer when the column value is falsey (but not undefined) (defaults to 'false').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. ListView&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;false&quot;" />
            <Attribute Type="Description" RawValue="The string returned by the renderer when the column value is falsey (but not undefined) (defaults to 'false')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TrueText" Type="string" DefaultValue="&quot;true&quot;">
          <Summary><![CDATA[The string returned by the renderer when the column value is not falsey (defaults to 'true').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. ListView&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;true&quot;" />
            <Attribute Type="Description" RawValue="The string returned by the renderer when the column value is not falsey (defaults to 'true')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="UndefinedText" Type="string" DefaultValue="&quot;&amp;#160;&quot;">
          <Summary><![CDATA[The string returned by the renderer when the column value is undefined (defaults to ' ').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. ListView&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&amp;#160;&quot;" />
            <Attribute Type="Description" RawValue="The string returned by the renderer when the column value is undefined (defaults to ' ')." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="TreeGridColumn" Extends="StateManagedItem">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Align" Type="TextAlign" DefaultValue="TextAlign.Left">
          <Summary><![CDATA[Set the CSS text-align property of the column. Defaults to 'left'.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="Category" RawValue="&quot;6. ListView&quot;" />
            <Attribute Type="DefaultValue" RawValue="TextAlign.Left" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Set the CSS text-align property of the column. Defaults to 'left'." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Cls" Type="string" DefaultValue="null">
          <Summary><![CDATA[Optional. This option can be used to add a CSS class to the cell of each row for this column.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. ListView&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="Optional. This option can be used to add a CSS class to the cell of each row for this column." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DataIndex" Type="string" DefaultValue="null">
          <Summary><![CDATA[(optional) The name of the field in the grid's Ext.data.Store's Ext.data.Record definition from which to draw the column's value. If not specified, the column's index is used as an index into the Record's data Array.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. ListView&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="(optional) The name of the field in the grid's Ext.data.Store's Ext.data.Record definition from which to draw the column's value. If not specified, the column's index is used as an index into the Record's data Array." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Header" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The header text to display in the Grid view.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. ListView&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The header text to display in the Grid view." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Template" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[Specify a string to pass as the configuration string for Ext.XTemplate. By default an Ext.XTemplate will be implicitly created using the dataIndex.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;tpl&quot;" />
            <Attribute Type="Category" RawValue="&quot;6. ListView&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="Specify a string to pass as the configuration string for Ext.XTemplate. By default an Ext.XTemplate will be implicitly created using the dataIndex." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="XTemplate" Type="XTemplate">
          <Summary><![CDATA[An XTemplate to use to process a Record's data to produce a column's rendered value.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;3. TemplateColumn&quot;" />
            <Attribute Type="ConfigOption" RawValue="&quot;tpl&quot;, typeof(LazyControlJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="An XTemplate to use to process a Record's data to produce a column's rendered value." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Width" Type="double" DefaultValue="0.0">
          <Summary><![CDATA[Percentage of the container width this column should be allocated. Columns that have no width specified will be allocated with an equal percentage to fill 100% of the container width. To easily take advantage of the full container width, leave the width of at least one column undefined. Note that if you do not want to take up the full width of the container, the width of every column needs to be explicitly defined.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. ListView&quot;" />
            <Attribute Type="DefaultValue" RawValue="0.0" />
            <Attribute Type="Description" RawValue="Percentage of the container width this column should be allocated. Columns that have no width specified will be allocated with an equal percentage to fill 100% of the container width. To easily take advantage of the full container width, leave the width of at least one column undefined. Note that if you do not want to take up the full width of the container, the width of every column needs to be explicitly defined." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SortType" Type="SortTypeMethod" DefaultValue="SortTypeMethod.None">
          <Summary><![CDATA[Sort method]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="typeof(ToLowerCamelCase)" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="SortTypeMethod.None" />
            <Attribute Type="Description" RawValue="Sort method" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Hidden" Type="bool" DefaultValue="false">
          <Summary><![CDATA[(optional) True to hide the column. Defaults to false.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. ListView&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="(optional) True to hide the column. Defaults to false." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="TreeGridColumnCollection" Extends="StateManagedCollection&lt;TreeGridColumn&gt;">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="TreeGridDateColumn" Extends="TreeGridColumn">
      <Attributes />
      <ConfigOptions>
        <ConfigOption Name="XType" Type="string">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;xtype&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Format" Type="string" DefaultValue="&quot;d&quot;">
          <Summary><![CDATA[A formatting string as used by Date.format to format a Date for this Column (defaults to 'd').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. ListView&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;d&quot;" />
            <Attribute Type="Description" RawValue="A formatting string as used by Date.format to format a Date for this Column (defaults to 'd')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="FormatProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;format&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="TreeGridNumberColumn" Extends="TreeGridColumn">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="XType" Type="string">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;xtype&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Format" Type="string" DefaultValue="&quot;0,000.00&quot;">
          <Summary><![CDATA[A formatting string as used by Ext.util.Format.number to format a numeric value for this Column (defaults to '0,000.00').]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. ListView&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;0,000.00&quot;" />
            <Attribute Type="Description" RawValue="A formatting string as used by Ext.util.Format.number to format a numeric value for this Column (defaults to '0,000.00')." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="TreeLoader" Extends="TreeLoaderBase">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Listeners" Type="TreeLoaderListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="TreeLoaderBase" Abstract="true" Extends="StateManagedItem">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="BaseAttributes" Type="ParameterCollection">
          <Summary><![CDATA[(optional) An object containing attributes to be added to all nodes created by this loader. If the attributes sent by the server have an attribute in this object, they take priority.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;baseAttrs&quot;, JsonMode.ArrayToObject" />
            <Attribute Type="Category" RawValue="&quot;2. TreeLoader&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="(optional) An object containing attributes to be added to all nodes created by this loader. If the attributes sent by the server have an attribute in this object, they take priority." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Json" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Send params as JSON object]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;2. TreeLoader&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="Send params as JSON object" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ClearOnLoad" Type="bool" DefaultValue="true">
          <Summary><![CDATA[(optional) Default to true. Remove previously existing child nodes before loading.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;2. TreeLoader&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="(optional) Default to true. Remove previously existing child nodes before loading." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="UrlProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;url&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="PreloadChildren" Type="bool" DefaultValue="false">
          <Summary><![CDATA[If set to true, the loader recursively loads 'children' attributes when doing the first load on nodes.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;2. TreeLoader&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="If set to true, the loader recursively loads 'children' attributes when doing the first load on nodes." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RequestMethod" Type="HttpMethod" DefaultValue="HttpMethod.Default">
          <Summary><![CDATA[The HTTP request method for loading data.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;2. TreeLoader&quot;" />
            <Attribute Type="DefaultValue" RawValue="HttpMethod.Default" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The HTTP request method for loading data." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Timeout" Type="int" DefaultValue="30000">
          <Summary><![CDATA[The timeout in milliseconds to be used for requests. (defaults to 30000)]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="DefaultValue" RawValue="30000" />
            <Attribute Type="Description" RawValue="The timeout in milliseconds to be used for requests. (defaults to 30000)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="UIProvidersProxy" Access="Protected" Type="string" DefaultValue="&quot;{}&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;uiProviders&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;{}&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="TreeLoaderCollection" Extends="StateManagedCollection&lt;TreeLoaderBase&gt;">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Primary" Type="TreeLoaderBase">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.ObjectAllowEmpty" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="TreeLoaderListeners" Extends="ComponentListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="BeforeLoad" Type="ComponentListener">
          <Summary><![CDATA[Fires before a network request is made to retrieve the Json text which specifies a node's children.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;loader&quot;, typeof(TreeLoader), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;node&quot;, typeof(Node)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;callback&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeload&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before a network request is made to retrieve the Json text which specifies a node's children." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Load" Type="ComponentListener">
          <Summary><![CDATA[Fires when the node has been successfuly loaded.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;loader&quot;, typeof(TreeLoader), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;node&quot;, typeof(Node)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;response&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;load&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the node has been successfuly loaded." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="LoadException" Type="ComponentListener">
          <Summary><![CDATA[Fires if the network request failed.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;loader&quot;, typeof(TreeLoader), &quot;this&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;node&quot;, typeof(Node)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;response&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;errorMessage&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;loadexception&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires if the network request failed." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="TreeNode" Extends="TreeNodeBase">
      <Attributes>
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="NodeType" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Listeners" Type="TreeNodeListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="TreeNodeBase" Abstract="true" Extends="Node" Inherits="IIcon">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="AllowChildren" Type="bool" DefaultValue="true">
          <Summary><![CDATA[False to not allow this node to have child nodes (defaults to true)]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. TreeNode&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="False to not allow this node to have child nodes (defaults to true)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AllowDrag" Type="bool" DefaultValue="true">
          <Summary><![CDATA[False to make this node undraggable if draggable = true (defaults to true)]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. TreeNode&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="False to make this node undraggable if draggable = true (defaults to true)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AllowDrop" Type="bool" DefaultValue="true">
          <Summary><![CDATA[False if this node cannot have child nodes dropped on it (defaults to true)]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. TreeNode&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="False if this node cannot have child nodes dropped on it (defaults to true)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Checked" Type="ThreeStateBool" DefaultValue="ThreeStateBool.Undefined">
          <Summary><![CDATA[True to render a checked checkbox for this node, false to render an unchecked checkbox (defaults to undefined with no checkbox rendered)]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="typeof(ThreeStateBoolJsonConverter)" />
            <Attribute Type="Category" RawValue="&quot;3. TreeNode&quot;" />
            <Attribute Type="DefaultValue" RawValue="ThreeStateBool.Undefined" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to render a checked checkbox for this node, false to render an unchecked checkbox (defaults to undefined with no checkbox rendered)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Cls" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A css class to be added to the node.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. TreeNode&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="A css class to be added to the node." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Disabled" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to start the node disabled]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. TreeNode&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to start the node disabled" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Draggable" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to make this node draggable (defaults to false)]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. TreeNode&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to make this node draggable (defaults to false)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Editable" Type="bool" DefaultValue="true">
          <Summary><![CDATA[False to not allow this node to be edited by an TreeEditor (defaults to true)]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. TreeNode&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="False to not allow this node to be edited by an TreeEditor (defaults to true)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Expandable" Type="ThreeStateBool" DefaultValue="ThreeStateBool.Undefined">
          <Summary><![CDATA[If set to true, the node will always show a plus/minus icon, even when empty]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="typeof(ThreeStateBoolJsonConverter)" />
            <Attribute Type="Category" RawValue="&quot;3. TreeNode&quot;" />
            <Attribute Type="DefaultValue" RawValue="ThreeStateBool.Undefined" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="If set to true, the node will always show a plus/minus icon, even when empty" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Expanded" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to start the node expanded]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. TreeNode&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to start the node expanded" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Hidden" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to render hidden. (Defaults to false).]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. TreeNode&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to render hidden. (Defaults to false)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Href" Type="string" DefaultValue="&quot;#&quot;">
          <Summary><![CDATA[URL of the link used for the node (defaults to #)]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. TreeNode&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;#&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="URL of the link used for the node (defaults to #)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HrefTarget" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[Target frame for the link]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. TreeNode&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Target frame for the link" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IconFile" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The path to an icon for the node. The preferred way to do this is to use the cls or iconCls attributes and add the icon via a CSS background image.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;icon&quot;" />
            <Attribute Type="Category" RawValue="&quot;3. TreeNode&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The path to an icon for the node. The preferred way to do this is to use the cls or iconCls attributes and add the icon via a CSS background image." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IconClsProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;iconCls&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="IsTarget" Type="bool" DefaultValue="true">
          <Summary><![CDATA[False to not allow this node to act as a drop target (defaults to true)]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. TreeNode&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="False to not allow this node to act as a drop target (defaults to true)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Qtip" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[An Ext QuickTip for the node]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. TreeNode&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="An Ext QuickTip for the node" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="QtipConfig" Type="QTipCfg">
          <Summary><![CDATA[An Ext QuickTip config for the node (used instead of qtip)]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;qtipCfg&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;3. TreeNode&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="Description" RawValue="An Ext QuickTip config for the node (used instead of qtip)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SingleClickExpand" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True for single click expand on this node]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. TreeNode&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True for single click expand on this node" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Text" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The text for this node]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. TreeNode&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The text for this node" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CustomAttributes" Type="ConfigItemCollection">
          <Summary><![CDATA[Collection of custom node attributes]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;-&quot;, typeof(CustomConfigJsonConverter)" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="Collection of custom node attributes" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="UIProvider" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A UI class to use for this node]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;uiProvider&quot;, JsonMode.Value" />
            <Attribute Type="Category" RawValue="&quot;3. TreeNode&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="A UI class to use for this node" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="UIProviderClass" Type="string" DefaultValue="&quot;Ext.tree.TreeNodeUI&quot;">
          <Summary><![CDATA[A UI class to use for this node]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;uiProvider&quot;, JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;3. TreeNode&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;Ext.tree.TreeNodeUI&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="A UI class to use for this node" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="TreeNodeCollection" Extends="StateManagedCollection&lt;TreeNodeBase&gt;" Inherits="IXmlSerializable,ISerializable">
      <Attributes>
        <Attribute Type="Serializable" />
        <Attribute Type="XmlSchemaProvider" RawValue="&quot;MySchema&quot;" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="TreeNodeDirectEvents" Extends="ComponentDirectEvents">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="BeforeChildrenRendered" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires right before the child nodes for this node are rendered]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;node&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforechildrenrendered&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires right before the child nodes for this node are rendered" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeClick" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before click processing. Return false to cancel the default action.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;node&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeclick&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before click processing. Return false to cancel the default action." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeCollapse" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before this node is collapsed, return false to cancel.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;node&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;deep&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;anim&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforecollapse&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before this node is collapsed, return false to cancel." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeExpand" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before this node is collapsed, return false to cancel.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;node&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;deep&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;anim&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeexpand&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before this node is collapsed, return false to cancel." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CheckChange" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when a node with a checkbox's checked property changes.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;node&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;checked&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;checkchange&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a node with a checkbox's checked property changes." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Click" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when this node is clicked]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;node&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;click&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when this node is clicked" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Collapse" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when this node is collapsed]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;node&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;collapse&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when this node is collapsed" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ContextMenu" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when this node is right clicked]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;node&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;contextmenu&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when this node is right clicked" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DblClick" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when this node is double clicked]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;node&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;dblclick&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when this node is double clicked" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DisabledChange" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when the disabled status of this node changes]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;node&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;disabled&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;disabledchange&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the disabled status of this node changes" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Expand" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when this node is expanded]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;node&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;expand&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when this node is expanded" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TextChange" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when the text for this node is changed]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;node&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;text&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;oldText&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;textchange&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the text for this node is changed" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="TreeNodeListeners" Extends="NodeListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="BeforeChildrenRendered" Type="ComponentListener">
          <Summary><![CDATA[Fires right before the child nodes for this node are rendered]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;node&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforechildrenrendered&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires right before the child nodes for this node are rendered" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeClick" Type="ComponentListener">
          <Summary><![CDATA[Fires before click processing. Return false to cancel the default action.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;node&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeclick&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before click processing. Return false to cancel the default action." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeCollapse" Type="ComponentListener">
          <Summary><![CDATA[Fires before this node is collapsed, return false to cancel.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;node&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;deep&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;anim&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforecollapse&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before this node is collapsed, return false to cancel." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeExpand" Type="ComponentListener">
          <Summary><![CDATA[Fires before this node is collapsed, return false to cancel.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;node&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;deep&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;anim&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeexpand&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before this node is collapsed, return false to cancel." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CheckChange" Type="ComponentListener">
          <Summary><![CDATA[Fires when a node with a checkbox's checked property changes.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;node&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;checked&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;checkchange&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a node with a checkbox's checked property changes." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Click" Type="ComponentListener">
          <Summary><![CDATA[Fires when this node is clicked]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;node&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;click&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when this node is clicked" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Collapse" Type="ComponentListener">
          <Summary><![CDATA[Fires when this node is collapsed]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;node&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;collapse&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when this node is collapsed" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ContextMenu" Type="ComponentListener">
          <Summary><![CDATA[Fires when this node is right clicked]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;node&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;contextmenu&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when this node is right clicked" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DblClick" Type="ComponentListener">
          <Summary><![CDATA[Fires when this node is double clicked]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;node&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;dblclick&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when this node is double clicked" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DisabledChange" Type="ComponentListener">
          <Summary><![CDATA[Fires when the disabled status of this node changes]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;node&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;disabled&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;disabledchange&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the disabled status of this node changes" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Expand" Type="ComponentListener">
          <Summary><![CDATA[Fires when this node is expanded]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;node&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;expand&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when this node is expanded" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TextChange" Type="ComponentListener">
          <Summary><![CDATA[Fires when the text for this node is changed]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;node&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;text&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;oldText&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;textchange&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the text for this node is changed" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="TreeNodeUIProvider" Extends="StateManagedItem">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Alias" Type="string">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ClassName" Type="string">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="TreeNodeUIProviders" Extends="StateManagedCollection&lt;TreeNodeUIProvider&gt;">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="TreePanel" Extends="TreePanelBase" Inherits="IAjaxPostBackEventHandler">
      <Summary><![CDATA[The TreePanel provides tree-structured UI representation of tree-structured data.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:TreePanel runat=\&quot;server\&quot; Title=\&quot;Title\&quot; Height=\&quot;300\&quot;&gt;&lt;/{0}:TreePanel&gt;&quot;" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(TreePanel), &quot;Build.ToolboxIcons.TreePanel.bmp&quot;" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="Description" RawValue="The TreePanel provides tree-structured UI representation of tree-structured data." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="RemoteRenameUrl" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;raRenameUrl&quot;, JsonMode.Url" />
            <Attribute Type="Category" RawValue="&quot;7. TreePanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RemoteRemoveUrl" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;raRemoveUrl&quot;, JsonMode.Url" />
            <Attribute Type="Category" RawValue="&quot;7. TreePanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RemoteAppendUrl" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;raAppendUrl&quot;, JsonMode.Url" />
            <Attribute Type="Category" RawValue="&quot;7. TreePanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RemoteInsertUrl" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;raInsertUrl&quot;, JsonMode.Url" />
            <Attribute Type="Category" RawValue="&quot;7. TreePanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RemoteMoveUrl" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;raMoveUrl&quot;, JsonMode.Url" />
            <Attribute Type="Category" RawValue="&quot;7. TreePanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Listeners" Type="TreePanelListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="TreePanelDirectEvents">
          <Summary><![CDATA[Server-side DirectEventHandlers]]></Summary>
          <Attributes>
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Server-side DirectEventHandlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="TreePanelBase" Abstract="true" Extends="PanelBase" Inherits="INoneContentable">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="AllowLeafDrop" Type="bool" DefaultValue="false">
          <Summary><![CDATA[true to allow append to the leaf node]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. TreePanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="true to allow append to the leaf node" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Animate" Type="bool" DefaultValue="true">
          <Summary><![CDATA[true to enable animated expand/collapse (defaults to the value of Ext.enableFx)]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. TreePanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="true to enable animated expand/collapse (defaults to the value of Ext.enableFx)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ContainerScroll" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to register this container with ScrollManager]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. TreePanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to register this container with ScrollManager" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DDAppendOnly" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True if the tree should only allow append drops (use for trees which are sorted)]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;ddAppendOnly&quot;" />
            <Attribute Type="Category" RawValue="&quot;7. TreePanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True if the tree should only allow append drops (use for trees which are sorted)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DDGroup" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The DD group this TreePanel belongs to]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;ddGroup&quot;" />
            <Attribute Type="Category" RawValue="&quot;7. TreePanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The DD group this TreePanel belongs to" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DDScroll" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to enable body scrolling]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;ddScroll&quot;" />
            <Attribute Type="Category" RawValue="&quot;7. TreePanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to enable body scrolling" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DragConfigProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;dragConfig&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DropConfigProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;dropConfig&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EnableDD" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to enable drag and drop]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. TreePanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to enable drag and drop" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EnableDrag" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to enable just drag]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. TreePanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to enable just drag" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EnableDrop" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to enable just drop]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. TreePanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to enable just drop" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HighlightColor" Type="string" DefaultValue="&quot;C3DAF9&quot;">
          <Summary><![CDATA[The color of the node highlight (defaults to C3DAF9)]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;hlColor&quot;" />
            <Attribute Type="Category" RawValue="&quot;7. TreePanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;C3DAF9&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The color of the node highlight (defaults to C3DAF9)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HighlightDrop" Type="bool" DefaultValue="true">
          <Summary><![CDATA[False to disable node highlight on drop (defaults to the value of Ext.enableFx)]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;hlDrop&quot;" />
            <Attribute Type="Category" RawValue="&quot;7. TreePanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="False to disable node highlight on drop (defaults to the value of Ext.enableFx)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Lines" Type="bool" DefaultValue="true">
          <Summary><![CDATA[False to disable tree lines (defaults to true)]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. TreePanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="False to disable tree lines (defaults to true)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="PathSeparator" Type="string" DefaultValue="&quot;/&quot;">
          <Summary><![CDATA[The token used to separate sub-paths in path strings (defaults to '/')]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. TreePanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;/&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The token used to separate sub-paths in path strings (defaults to '/')" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ActiveEditor" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[Active editor id]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. TreePanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Active editor id" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Loader" Type="TreeLoaderCollection" DefaultValue="null">
          <Summary><![CDATA[The root node for the tree.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;loader&gt;Primary&quot;" />
            <Attribute Type="Category" RawValue="&quot;7. TreePanel&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="The root node for the tree." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RootVisible" Type="bool" DefaultValue="true">
          <Summary><![CDATA[false to hide the root node (defaults to true)]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. TreePanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="false to hide the root node (defaults to true)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SelectionModel" Type="TreeSelectionModelCollection" DefaultValue="null">
          <Summary><![CDATA[A tree selection model to use with this TreePanel (defaults to an Ext.tree.DefaultSelectionModel)]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;selModel&gt;Primary&quot;" />
            <Attribute Type="Category" RawValue="&quot;7. TreePanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="A tree selection model to use with this TreePanel (defaults to an Ext.tree.DefaultSelectionModel)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SingleExpand" Type="bool" DefaultValue="false">
          <Summary><![CDATA[true if only 1 node per branch may be expanded]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. TreePanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="true if only 1 node per branch may be expanded" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TrackMouseOver" Type="bool" DefaultValue="true">
          <Summary><![CDATA[False to disable mouse over highlighting]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. TreePanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="False to disable mouse over highlighting" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="UseArrows" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to use Vista-style arrows in the tree (defaults to false)]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. TreePanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to use Vista-style arrows in the tree (defaults to false)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="NoLeafIcon" Type="bool" DefaultValue="false">
          <Summary><![CDATA[if true then leaf node has no icon]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;8. TreeGrid&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="if true then leaf node has no icon" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Editors" Type="ItemsCollection&lt;TreeEditor&gt;">
          <Summary><![CDATA[A collection of editors configs]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;editors&quot;, typeof(ItemCollectionJsonConverter)" />
            <Attribute Type="Category" RawValue="&quot;7. TreePanel&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="A collection of editors configs" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SelectionSubmitConfig" Type="TreeSubmitConfig">
          <Summary><![CDATA[Selection submit config]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;7. TreePanel&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="Selection submit config" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Sorter" Type="TreeSorter">
          <Summary><![CDATA[Provides sorting of nodes in a Ext.tree.TreePanel.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;7. TreePanel&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" RawValue="Provides sorting of nodes in a Ext.tree.TreePanel." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEventConfig" Type="BaseDirectEvent">
          <Attributes>
            <Attribute Type="Category" RawValue="&quot;7. TreePanel&quot;" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Object" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Mode" Type="TreePanelMode" DefaultValue="TreePanelMode.Local">
          <Summary><![CDATA[Set to Remote need perform remote confirmation for basic operations.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="Category" RawValue="&quot;7. TreePanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="TreePanelMode.Local" />
            <Attribute Type="Description" RawValue="Set to Remote need perform remote confirmation for basic operations." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RemoteJson" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to use json mode]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. TreePanel&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to use json mode" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="LocalActions" Type="string[]" DefaultValue="null">
          <Summary><![CDATA[The list of actions which must be local (even if Mode='Remote')]]></Summary>
          <Attributes>
            <Attribute Type="Category" RawValue="&quot;7. TreePanel&quot;" />
            <Attribute Type="ConfigOption" RawValue="typeof(StringArrayJsonConverter)" />
            <Attribute Type="TypeConverter" RawValue="typeof(StringArrayConverter)" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="Description" RawValue="The list of actions which must be local (even if Mode='Remote')" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RemoteExtraParams" Type="ParameterCollection">
          <Summary><![CDATA[An object containing properties which are to be sent as parameters on any remote action request.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;7. TreePanel&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="An object containing properties which are to be sent as parameters on any remote action request." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Nodes" Access="ProtectedInternal" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="TreePanelDirectEvents" Extends="PanelDirectEvents">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Append" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when a new child node is appended to a node in this tree.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;tree&quot;, typeof(TreePanel)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;parent&quot;, typeof(Node)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;node&quot;, typeof(Node)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;index&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;append&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a new child node is appended to a node in this tree." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeAppend" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before a new child is appended to a node in this tree, return false to cancel the append.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;tree&quot;, typeof(TreePanel)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;parent&quot;, typeof(Node)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;node&quot;, typeof(Node)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeappend&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before a new child is appended to a node in this tree, return false to cancel the append." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeChildrenRendered" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires right before the child nodes for a node are rendered]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;node&quot;, typeof(Node)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforechildrenrendered&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires right before the child nodes for a node are rendered" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeClick" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before click processing on a node. Return false to cancel the default action.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;node&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeclick&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before click processing on a node. Return false to cancel the default action." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeCollapseNode" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before a node is collapsed, return false to cancel.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;node&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;deep&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;anim&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforecollapsenode&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before a node is collapsed, return false to cancel." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeExpandNode" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before a node is expanded, return false to cancel.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;node&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;deep&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;anim&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeexpandnode&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before a node is expanded, return false to cancel." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeInsert" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before a new child is inserted in a node in this tree, return false to cancel the insert.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;tree&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;parent&quot;, typeof(Node)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;node&quot;, typeof(Node)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;refNode&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeinsert&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before a new child is inserted in a node in this tree, return false to cancel the insert." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeLoad" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before a node is loaded, return false to cancel.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;node&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeload&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before a node is loaded, return false to cancel." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeMoveNode" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before a node is moved to a new location in the tree. Return false to cancel the move.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;tree&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;node&quot;, typeof(Node)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;oldParent&quot;, typeof(Node)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;newParent&quot;, typeof(Node)" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;index&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforemovenode&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before a node is moved to a new location in the tree. Return false to cancel the move." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeNodeDrop" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when a DD object is dropped on a node in this tree for preprocessing. Return false to cancel the drop.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;dropEvent&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforenodedrop&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a DD object is dropped on a node in this tree for preprocessing. Return false to cancel the drop." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeRemoveNode" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before a child is removed from a node in this tree, return false to cancel the remove.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;tree&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;parent&quot;, typeof(Node)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;node&quot;, typeof(Node)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeremove&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before a child is removed from a node in this tree, return false to cancel the remove." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CheckChange" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when a node with a checkbox's checked property changes]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;node&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;checked&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;checkchange&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a node with a checkbox's checked property changes" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Click" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when a node is clicked]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;node&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;click&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a node is clicked" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CollapseNode" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when a node is collapsed]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;node&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;collapsenode&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a node is collapsed" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ContextMenu" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when a node is right clicked.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;node&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;contextmenu&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a node is right clicked." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DblClick" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when a node is double clicked]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;node&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;dblclick&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a node is double clicked" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DisabledChange" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when the disabled status of a node changes]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;node&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;disabled&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;disabledchange&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the disabled status of a node changes" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DragDrop" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when a dragged node is dropped on a valid DD target]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;tree&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;node&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;dd&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;dragdrop&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a dragged node is dropped on a valid DD target" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EndDrag" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when a drag operation is complete]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;tree&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;node&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;enddrag&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a drag operation is complete" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ExpandNode" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when a node is expanded]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;node&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;expandnode&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a node is expanded" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Insert" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when a new child node is inserted in a node in this tree.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;tree&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;parent&quot;, typeof(Node)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;node&quot;, typeof(Node)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;refNode&quot;, typeof(Node)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;insert&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a new child node is inserted in a node in this tree." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Load" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when a node is loaded]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;node&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;load&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a node is loaded" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MoveNode" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when a node is moved to a new location in the tree]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;tree&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;node&quot;, typeof(Node)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;oldParent&quot;, typeof(Node)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;newParent&quot;, typeof(Node)" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;index&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;movenode&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a node is moved to a new location in the tree" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="NodeDragOver" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when a tree node is being targeted for a drag drop, return false to signal drop not allowed.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;dragOverEvent&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;nodedragover&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a tree node is being targeted for a drag drop, return false to signal drop not allowed." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="NodeDrop" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after a DD object is dropped on a node in this tree.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;dropEvent&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;nodedrop&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after a DD object is dropped on a node in this tree." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RemoveNode" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when a child node is removed from a node in this tree.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;tree&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;parent&quot;, typeof(Node)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;node&quot;, typeof(Node)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;remove&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a child node is removed from a node in this tree." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="StartDrag" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when a node starts being dragged]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;tree&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;node&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;startdrag&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a node starts being dragged" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TextChange" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when the text for a node is changed]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;node&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;text&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;oldText&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;textchange&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the text for a node is changed" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Submit" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when the submit is success]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;tree&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;o&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;submit&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the submit is success" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SubmitException" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when the submit is success]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;tree&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;o&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;response&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;submitexception&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the submit is success" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeRemoteAction" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before remote action request]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;tree&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;node&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;action&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;o&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeremoteaction&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before remote action request" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RemoteActionException" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when an remote action exception occurs]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;tree&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;response&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;e&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;o&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;remoteactionexception&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when an remote action exception occurs" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RemoteActionRefusal" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when remote action is finished but contains refusal answer]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;tree&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;response&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;e&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;o&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;remoteactionrefusal&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when remote action is finished but contains refusal answer" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RemoteActionSuccess" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires when remote action successful]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;tree&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;node&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;action&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;o&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;remoteactionsuccess&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when remote action successful" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeRemoteMove" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before remote move request]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;tree&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;node&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;target&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;e&quot;" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;params&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeremotemove&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before remote move request" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeRemoteRename" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before remote rename request]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;tree&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;node&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;params&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeremoterename&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before remote rename request" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeRemoteRemove" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before remote remove request]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;tree&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;node&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;params&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeremoteremove&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before remote remove request" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeRemoteAppend" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires before remote insert/append request]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;tree&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;node&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;params&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;insert&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeremoteappend&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before remote insert/append request" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="TreePanelListeners" Extends="PanelListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Append" Type="ComponentListener">
          <Summary><![CDATA[Fires when a new child node is appended to a node in this tree.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;tree&quot;, typeof(TreePanel)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;parent&quot;, typeof(Node)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;node&quot;, typeof(Node)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;index&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;append&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a new child node is appended to a node in this tree." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeAppend" Type="ComponentListener">
          <Summary><![CDATA[Fires before a new child is appended to a node in this tree, return false to cancel the append.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;tree&quot;, typeof(TreePanel)" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;parent&quot;, typeof(Node)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;node&quot;, typeof(Node)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeappend&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before a new child is appended to a node in this tree, return false to cancel the append." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeChildrenRendered" Type="ComponentListener">
          <Summary><![CDATA[Fires right before the child nodes for a node are rendered]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;node&quot;, typeof(Node)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforechildrenrendered&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires right before the child nodes for a node are rendered" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeClick" Type="ComponentListener">
          <Summary><![CDATA[Fires before click processing on a node. Return false to cancel the default action.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;node&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeclick&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before click processing on a node. Return false to cancel the default action." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeCollapseNode" Type="ComponentListener">
          <Summary><![CDATA[Fires before a node is collapsed, return false to cancel.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;node&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;deep&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;anim&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforecollapsenode&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before a node is collapsed, return false to cancel." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeExpandNode" Type="ComponentListener">
          <Summary><![CDATA[Fires before a node is expanded, return false to cancel.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;node&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;deep&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;anim&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeexpandnode&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before a node is expanded, return false to cancel." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeInsert" Type="ComponentListener">
          <Summary><![CDATA[Fires before a new child is inserted in a node in this tree, return false to cancel the insert.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;tree&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;parent&quot;, typeof(Node)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;node&quot;, typeof(Node)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;refNode&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeinsert&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before a new child is inserted in a node in this tree, return false to cancel the insert." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeLoad" Type="ComponentListener">
          <Summary><![CDATA[Fires before a node is loaded, return false to cancel.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;node&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeload&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before a node is loaded, return false to cancel." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeMoveNode" Type="ComponentListener">
          <Summary><![CDATA[Fires before a node is moved to a new location in the tree. Return false to cancel the move.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;tree&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;node&quot;, typeof(Node)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;oldParent&quot;, typeof(Node)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;newParent&quot;, typeof(Node)" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;index&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforemovenode&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before a node is moved to a new location in the tree. Return false to cancel the move." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeNodeDrop" Type="ComponentListener">
          <Summary><![CDATA[Fires when a DD object is dropped on a node in this tree for preprocessing. Return false to cancel the drop.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;dropEvent&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforenodedrop&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a DD object is dropped on a node in this tree for preprocessing. Return false to cancel the drop." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeRemoveNode" Type="ComponentListener">
          <Summary><![CDATA[Fires before a child is removed from a node in this tree, return false to cancel the remove.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;tree&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;parent&quot;, typeof(Node)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;node&quot;, typeof(Node)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeremove&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before a child is removed from a node in this tree, return false to cancel the remove." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CheckChange" Type="ComponentListener">
          <Summary><![CDATA[Fires when a node with a checkbox's checked property changes]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;node&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;checked&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;checkchange&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a node with a checkbox's checked property changes" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Click" Type="ComponentListener">
          <Summary><![CDATA[Fires when a node is clicked]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;node&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;click&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a node is clicked" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CollapseNode" Type="ComponentListener">
          <Summary><![CDATA[Fires when a node is collapsed]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;node&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;collapsenode&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a node is collapsed" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ContextMenu" Type="ComponentListener">
          <Summary><![CDATA[Fires when a node is right clicked.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;node&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;contextmenu&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a node is right clicked." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DblClick" Type="ComponentListener">
          <Summary><![CDATA[Fires when a node is double clicked]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;node&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;dblclick&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a node is double clicked" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DisabledChange" Type="ComponentListener">
          <Summary><![CDATA[Fires when the disabled status of a node changes]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;node&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;disabled&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;disabledchange&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the disabled status of a node changes" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DragDrop" Type="ComponentListener">
          <Summary><![CDATA[Fires when a dragged node is dropped on a valid DD target]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;tree&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;node&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;dd&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;dragdrop&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a dragged node is dropped on a valid DD target" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="EndDrag" Type="ComponentListener">
          <Summary><![CDATA[Fires when a drag operation is complete]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;tree&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;node&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;enddrag&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a drag operation is complete" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ExpandNode" Type="ComponentListener">
          <Summary><![CDATA[Fires when a node is expanded]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;node&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;expandnode&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a node is expanded" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Insert" Type="ComponentListener">
          <Summary><![CDATA[Fires when a new child node is inserted in a node in this tree.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;tree&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;parent&quot;, typeof(Node)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;node&quot;, typeof(Node)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;refNode&quot;, typeof(Node)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;insert&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a new child node is inserted in a node in this tree." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Load" Type="ComponentListener">
          <Summary><![CDATA[Fires when a node is loaded]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;node&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;load&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a node is loaded" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MoveNode" Type="ComponentListener">
          <Summary><![CDATA[Fires when a node is moved to a new location in the tree]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;tree&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;node&quot;, typeof(Node)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;oldParent&quot;, typeof(Node)" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;newParent&quot;, typeof(Node)" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;index&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;movenode&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a node is moved to a new location in the tree" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="NodeDragOver" Type="ComponentListener">
          <Summary><![CDATA[Fires when a tree node is being targeted for a drag drop, return false to signal drop not allowed.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;dragOverEvent&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;nodedragover&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a tree node is being targeted for a drag drop, return false to signal drop not allowed." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="NodeDrop" Type="ComponentListener">
          <Summary><![CDATA[Fires after a DD object is dropped on a node in this tree.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;dropEvent&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;nodedrop&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after a DD object is dropped on a node in this tree." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RemoveNode" Type="ComponentListener">
          <Summary><![CDATA[Fires when a child node is removed from a node in this tree.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;tree&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;parent&quot;, typeof(Node)" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;node&quot;, typeof(Node)" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;remove&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a child node is removed from a node in this tree." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="StartDrag" Type="ComponentListener">
          <Summary><![CDATA[Fires when a node starts being dragged]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;tree&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;node&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;startdrag&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when a node starts being dragged" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TextChange" Type="ComponentListener">
          <Summary><![CDATA[Fires when the text for a node is changed]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;node&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;text&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;oldText&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;textchange&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the text for a node is changed" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Submit" Type="ComponentListener">
          <Summary><![CDATA[Fires when the submit is success]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;tree&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;o&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;submit&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the submit is success" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SubmitException" Type="ComponentListener">
          <Summary><![CDATA[Fires when the submit is success]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;tree&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;o&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;response&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;e&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;submitexception&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when the submit is success" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeRemoteAction" Type="ComponentListener">
          <Summary><![CDATA[Fires before remote action request]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;tree&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;node&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;action&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;o&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeremoteaction&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before remote action request" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RemoteActionException" Type="ComponentListener">
          <Summary><![CDATA[Fires when an remote action exception occurs]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;tree&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;response&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;e&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;o&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;remoteactionexception&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when an remote action exception occurs" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RemoteActionRefusal" Type="ComponentListener">
          <Summary><![CDATA[Fires when remote action is finished but contains refusal answer]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;tree&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;response&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;e&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;o&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;remoteactionrefusal&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when remote action is finished but contains refusal answer" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RemoteActionSuccess" Type="ComponentListener">
          <Summary><![CDATA[Fires when remote action successful]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;tree&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;node&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;action&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;o&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;remoteactionsuccess&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires when remote action successful" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeRemoteMove" Type="ComponentListener">
          <Summary><![CDATA[Fires before remote move request]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;tree&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;node&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;target&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;e&quot;" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;params&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeremotemove&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before remote move request" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeRemoteRename" Type="ComponentListener">
          <Summary><![CDATA[Fires before remote rename request]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;tree&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;node&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;params&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeremoterename&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before remote rename request" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeRemoteRemove" Type="ComponentListener">
          <Summary><![CDATA[Fires before remote remove request]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;tree&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;node&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;params&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeremoteremove&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before remote remove request" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="BeforeRemoteAppend" Type="ComponentListener">
          <Summary><![CDATA[Fires before remote insert/append request]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;tree&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;node&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;params&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;insert&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;beforeremoteappend&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires before remote insert/append request" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="TreeSelectionModelCollection" Extends="SingleItemCollection&lt;AbstractTreeSelectionModel&gt;">
      <Attributes />
      <ConfigOptions>
        <ConfigOption Name="Primary" Type="AbstractTreeSelectionModel">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="typeof(LazyControlJsonConverter)" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="TreeSorter" Extends="StateManagedItem">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="CaseSensitive" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True for case-sensitive sort (defaults to false)]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;1. TreeSorter&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True for case-sensitive sort (defaults to false)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Direction" Type="SortDirection" DefaultValue="SortDirection.Default">
          <Summary><![CDATA[The direction to sort (\"asc\" or \"desc\" case-insensitive, defaults to \"asc\")]]></Summary>
          <Attributes>
            <Attribute Type="Category" RawValue="&quot;1. TreeSorter&quot;" />
            <Attribute Type="ConfigOption" RawValue="&quot;dir&quot;, JsonMode.ToLower" />
            <Attribute Type="DefaultValue" RawValue="SortDirection.Default" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The direction to sort (\&quot;asc\&quot; or \&quot;desc\&quot; case-insensitive, defaults to \&quot;asc\&quot;)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="FolderSort" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to sort leaf nodes under non-leaf nodes (defaults to false)]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;1. TreeSorter&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="True to sort leaf nodes under non-leaf nodes (defaults to false)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="LeafAttr" Type="string" DefaultValue="&quot;leaf&quot;">
          <Summary><![CDATA[The attribute used to determine leaf nodes when folderSort = true (defaults to \"leaf\")]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;1. TreeSorter&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;leaf&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The attribute used to determine leaf nodes when folderSort = true (defaults to \&quot;leaf\&quot;)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Property" Type="string" DefaultValue="&quot;text&quot;">
          <Summary><![CDATA[The named attribute on the node to sort by (defaults to \"text\"). Note that this property is only used if no sortType function is specified, otherwise it is ignored.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;1. TreeSorter&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;text&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The named attribute on the node to sort by (defaults to \&quot;text\&quot;). Note that this property is only used if no sortType function is specified, otherwise it is ignored." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="SortType" Type="JFunction" DefaultValue="null">
          <Summary><![CDATA[A custom \"casting\" function used to convert node values before sorting.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;1. TreeSorter&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="A custom \&quot;casting\&quot; function used to convert node values before sorting." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="TreeSubmitConfig" Extends="StateManagedItem">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="WithChildren" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Serialize node with children]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;2. TreeSubmitConfig&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="Serialize node with children" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DisableAutomaticSubmit" Type="bool" DefaultValue="false">
          <Summary><![CDATA[Disable automatic submit]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;2. TreeSubmitConfig&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="Disable automatic submit" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Encode" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to encode node's text]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;2. TreeSubmitConfig&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to encode node's text" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="PathAttribute" Type="string" DefaultValue="&quot;id&quot;">
          <Summary><![CDATA[The attr to use for the path (defaults to the node's id)]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. TreeSubmitConfig&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;id&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The attr to use for the path (defaults to the node's id)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="NodeFilter" Type="JFunction" DefaultValue="null">
          <Summary><![CDATA[Node filter functon, return false to exclude the node]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;3. TreeSubmitConfig&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="Node filter functon, return false to exclude the node" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AttributeFilter" Type="JFunction" DefaultValue="null">
          <Summary><![CDATA[Attribute filter functon, return false to exclude the attribute]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;3. TreeSubmitConfig&quot;" />
            <Attribute Type="DefaultValue" RawValue="null" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="Description" RawValue="Attribute filter functon, return false to exclude the attribute" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="TriggerEventArgs" Extends="EventArgs">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="TriggerField" Extends="BaseTriggerField">
      <Summary><![CDATA[Provides a convenient wrapper for TextFields that adds a clickable trigger button (looks like a combobox by default).]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(TriggerField), &quot;Build.ToolboxIcons.TriggerField.bmp&quot;" />
        <Attribute Type="DefaultProperty" RawValue="&quot;Text&quot;" />
        <Attribute Type="ValidationProperty" RawValue="&quot;Text&quot;" />
        <Attribute Type="ControlValueProperty" RawValue="&quot;Text&quot;" />
        <Attribute Type="ParseChildren" RawValue="true" />
        <Attribute Type="PersistChildren" RawValue="false" />
        <Attribute Type="SupportsEventValidation" />
        <Attribute Type="Description" RawValue="Provides a convenient wrapper for TextFields that adds a clickable trigger button (looks like a combobox by default)." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Listeners" Type="TriggerFieldListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="TriggerFieldDirectEvents">
          <Summary><![CDATA[Server-side Ajax Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Server-side Ajax Event Handlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="TriggerFieldBase" Abstract="true" Extends="TextFieldBase">
      <Summary><![CDATA[Provides a convenient wrapper for TextFields that adds a clickable trigger button (looks like a combobox by default). The trigger has no default action, so you must assign a function to implement the trigger click handler by overriding onTriggerClick. You can create a TriggerField directly, as it renders exactly like a combobox for which you can provide a custom implementation.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" RawValue="Provides a convenient wrapper for TextFields that adds a clickable trigger button (looks like a combobox by default). The trigger has no default action, so you must assign a function to implement the trigger click handler by overriding onTriggerClick. You can create a TriggerField directly, as it renders exactly like a combobox for which you can provide a custom implementation." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Triggers" Type="FieldTrigerCollection">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;triggersConfig&quot;, JsonMode.AlwaysArray" />
            <Attribute Type="Category" RawValue="&quot;8. ComboBox&quot;" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HideTrigger" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to hide the trigger element and display only the base text field (defaults to false).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. TriggerField&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetHideTrigger&quot;" />
            <Attribute Type="Description" RawValue="True to hide the trigger element and display only the base text field (defaults to false)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Editable" Type="bool" DefaultValue="true">
          <Summary><![CDATA[False to prevent the user from typing text directly into the field, the field will only respond to a click on the trigger to set the value. (defaults to true).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetEditable&quot;" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. TriggerField&quot;" />
            <Attribute Type="Bindable" RawValue="true" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="False to prevent the user from typing text directly into the field, the field will only respond to a click on the trigger to set the value. (defaults to true)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="FirstBaseTrigger" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to show base trigger first]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. TriggerField&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to show base trigger first" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TriggerClass" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A CSS class to apply to the trigger.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;7. TriggerField&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="A CSS class to apply to the trigger." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TriggerIcon" Type="TriggerIcon" DefaultValue="Net.TriggerIcon.Combo">
          <Summary><![CDATA[The icon to use in the trigger.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="Net.TriggerIcon.Combo" />
            <Attribute Type="Description" RawValue="The icon to use in the trigger." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TriggerIconClsProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;triggerClass&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods>
        <Method Name="ShowTrigger" ParamsRaw="int index">
          <Summary><![CDATA[Show a trigger]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Show a trigger" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="ConcealTrigger" ParamsRaw="int index">
          <Summary><![CDATA[Hide a trigger]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Hide a trigger" />
          </Attributes>
          <Parameters />
        </Method>
      </Methods>
    </Class>
    <Class Name="TriggerFieldDirectEvents" Extends="TextFieldDirectEvents">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="TriggerClick" Type="ComponentDirectEvent">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Field), &quot;This trigger field&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;trigger&quot;, typeof(object), &quot;trigger&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;index&quot;, typeof(int), &quot;trigger index&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;tag&quot;, typeof(string), &quot;trigger tag&quot;" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;e&quot;, typeof(int), &quot;click event&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;triggerclick&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="TriggerFieldListeners" Extends="TextFieldListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="TriggerClick" Type="ComponentListener">
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Field), &quot;This trigger field&quot;" />
            <Attribute Type="ListenerArgument" RawValue="1, &quot;trigger&quot;, typeof(object), &quot;trigger&quot;" />
            <Attribute Type="ListenerArgument" RawValue="2, &quot;index&quot;, typeof(int), &quot;trigger index&quot;" />
            <Attribute Type="ListenerArgument" RawValue="3, &quot;tag&quot;, typeof(string), &quot;trigger tag&quot;" />
            <Attribute Type="ListenerArgument" RawValue="4, &quot;e&quot;, typeof(int), &quot;click event&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;triggerclick&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="UnitJsonConverter" Extends="ExtJsonConverter">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="UpdateOptions" Extends="StateManagedItem">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Url" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The URL to request or a function which returns the URL.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The URL to request or a function which returns the URL." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Method" Type="HttpMethod" DefaultValue="HttpMethod.Default">
          <Summary><![CDATA[The HTTP method to use. Defaults to POST if params are present, or GET if not.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="HttpMethod.Default" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The HTTP method to use. Defaults to POST if params are present, or GET if not." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Params" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The parameters to pass to the server.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The parameters to pass to the server." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Scripts" Type="bool" DefaultValue="false">
          <Summary><![CDATA[If true any &lt;script> tags embedded in the response text will be extracted and executed. If this option is specified, the callback will be called after the execution of the scripts.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="If true any &amp;lt;script&gt; tags embedded in the response text will be extracted and executed. If this option is specified, the callback will be called after the execution of the scripts." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Callback" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A function to be called when the response from the server arrives.(el : Ext.Element, success : Boolean, response : XMLHttpRequest, options : Object)]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="A function to be called when the response from the server arrives.(el : Ext.Element, success : Boolean, response : XMLHttpRequest, options : Object)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DiscardUrl" Type="bool" DefaultValue="true">
          <Summary><![CDATA[If not passed as false the URL of this request becomes the default URL for this UpdateOptions object, and will be subsequently used in refresh calls.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="If not passed as false the URL of this request becomes the default URL for this UpdateOptions object, and will be subsequently used in refresh calls." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Timeout" Type="int" DefaultValue="30">
          <Summary><![CDATA[The timeout to use when waiting for a response.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="30" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The timeout to use when waiting for a response." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Nocache" Type="bool" DefaultValue="false">
          <Summary><![CDATA[If not passed as false the URL of this request becomes the default URL for this UpdateOptions object, and will be subsequently used in refresh calls.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="If not passed as false the URL of this request becomes the default URL for this UpdateOptions object, and will be subsequently used in refresh calls." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Text" Type="string" DefaultValue="&quot;Loading...&quot;">
          <Summary><![CDATA[Text for loading indicator]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;Loading...&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Localizable" RawValue="true" />
            <Attribute Type="Description" RawValue="Text for loading indicator" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="UpdateProxyCollection" Extends="SingleItemStateCollection&lt;HttpWriteProxy&gt;">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Proxy" Type="HttpWriteProxy">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Object" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="UserControlRenderer">
      <Attributes />
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="ValidationStatus" Extends="Plugin" Inherits="IIcon">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(ValidationStatus), &quot;Build.ToolboxIcons.Plugin.bmp&quot;" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:ValidationStatus runat=\&quot;server\&quot; /&gt;&quot;" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="FormPanelID" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The FormPanel to use.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;{raw}form&quot;, JsonMode.ToClientID" />
            <Attribute Type="Category" RawValue="&quot;3. ValidationStatus&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="IDReferenceProperty" RawValue="typeof(FormPanel)" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The FormPanel to use." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ErrorIcon" Type="Icon" DefaultValue="Icon.None">
          <Summary><![CDATA[The error icon]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;3. ValidationStatus&quot;" />
            <Attribute Type="DefaultValue" RawValue="Icon.None" />
            <Attribute Type="Description" RawValue="The error icon" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ErrorIconCls" Type="string" DefaultValue="&quot;x-status-error&quot;">
          <Summary><![CDATA[The error icon css class]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;3. ValidationStatus&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;x-status-error&quot;" />
            <Attribute Type="IDReferenceProperty" RawValue="typeof(Store)" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The error icon css class" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ErrorIconClsProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;errorIconCls&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ErrorListCls" Type="string" DefaultValue="&quot;x-status-error-list&quot;">
          <Summary><![CDATA[The error list css class]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. ValidationStatus&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;x-status-error-list&quot;" />
            <Attribute Type="IDReferenceProperty" RawValue="typeof(Store)" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The error list css class" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ValidIcon" Type="Icon" DefaultValue="Icon.None">
          <Summary><![CDATA[The valid icon]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;3. ValidationStatus&quot;" />
            <Attribute Type="DefaultValue" RawValue="Icon.None" />
            <Attribute Type="Description" RawValue="The valid icon" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ValidIconCls" Type="string" DefaultValue="&quot;x-status-valid&quot;">
          <Summary><![CDATA[The valid icon css class]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. ValidationStatus&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;x-status-valid&quot;" />
            <Attribute Type="IDReferenceProperty" RawValue="typeof(Store)" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The valid icon css class" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ValidIconClsProxy" Access="Protected" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;validIconCls&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ShowText" Type="string" DefaultValue="&quot;The form has errors (click for details...)&quot;">
          <Summary><![CDATA[The text which shown when errors exist]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. ValidationStatus&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;The form has errors (click for details...)&quot;" />
            <Attribute Type="IDReferenceProperty" RawValue="typeof(Store)" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The text which shown when errors exist" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HideText" Type="string" DefaultValue="&quot;Click again to hide the error list&quot;">
          <Summary><![CDATA[The text which hide error list when click on it]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;3. ValidationStatus&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;Click again to hide the error list&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The text which hide error list when click on it" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="VBoxLayout" Extends="BoxLayout">
      <Summary><![CDATA[A layout that arranges items vertically]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:VBoxLayout runat=\&quot;server\&quot;&gt;&lt;/{0}:VBoxLayout&gt;&quot;" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(VBoxLayout), &quot;Build.ToolboxIcons.Layout.bmp&quot;" />
        <Attribute Type="Description" RawValue="A layout that arranges items vertically" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="LayoutConfig" Modifier="Override" Access="ProtectedInternal" Type="LayoutConfig">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Object" />
            <Attribute Type="Browsable" RawValue="false" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Align" Type="VBoxAlign" DefaultValue="VBoxAlign.Left">
          <Summary><![CDATA[Controls how the child items of the container are aligned.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;7. VBoxLayout&quot;" />
            <Attribute Type="DefaultValue" RawValue="VBoxAlign.Left" />
            <Attribute Type="Description" RawValue="Controls how the child items of the container are aligned." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="VBoxLayoutConfig" Extends="BoxLayoutConfig">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Align" Type="VBoxAlign" DefaultValue="VBoxAlign.Left">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="DefaultValue" RawValue="VBoxAlign.Left" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="Viewport" Extends="ViewportBase">
      <Summary><![CDATA[A specialized content Container representing the viewable application area (the browser viewport).]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:Viewport runat=\&quot;server\&quot; Layout=\&quot;border\&quot;&gt;&lt;Items&gt;&lt;{0}:Panel runat=\&quot;server\&quot; Height=\&quot;100\&quot; Title=\&quot;North\&quot; Region=\&quot;North\&quot; Collapsible=\&quot;True\&quot; Split=\&quot;True\&quot;&gt;&lt;Items&gt;&lt;/Items&gt;&lt;/{0}:Panel&gt;&lt;{0}:Panel runat=\&quot;server\&quot; Layout=\&quot;Fit\&quot; Title=\&quot;East\&quot; Width=\&quot;175\&quot; Region=\&quot;East\&quot; Collapsible=\&quot;true\&quot; Split=\&quot;true\&quot;&gt;&lt;Items&gt;&lt;{0}:TabPanel runat=\&quot;server\&quot; ActiveTabIndex=\&quot;0\&quot; Border=\&quot;false\&quot; TabPosition=\&quot;Bottom\&quot; Title=\&quot;Title\&quot;&gt;&lt;Items&gt;&lt;{0}:Panel runat=\&quot;server\&quot; Title=\&quot;Tab 1\&quot;&gt;&lt;Items&gt;&lt;/Items&gt;&lt;/{0}:Panel&gt;&lt;{0}:Panel runat=\&quot;server\&quot; Title=\&quot;Tab 2\&quot;&gt;&lt;Items&gt;&lt;/Items&gt;&lt;/{0}:Panel&gt;&lt;/Items&gt;&lt;/{0}:TabPanel&gt;&lt;/Items&gt;&lt;/{0}:Panel&gt;&lt;{0}:Panel runat=\&quot;server\&quot; Height=\&quot;100\&quot; Title=\&quot;South\&quot; Region=\&quot;South\&quot; Collapsible=\&quot;true\&quot; Split=\&quot;true\&quot;&gt;&lt;Items&gt;&lt;/Items&gt;&lt;/{0}:Panel&gt;&lt;{0}:Panel runat=\&quot;server\&quot; Title=\&quot;West\&quot; Width=\&quot;175\&quot; Region=\&quot;West\&quot; Collapsible=\&quot;true\&quot; Split=\&quot;true\&quot; Layout=\&quot;accordion\&quot;&gt;&lt;Items&gt;&lt;{0}:Panel runat=\&quot;server\&quot; Border=\&quot;false\&quot; Collapsed=\&quot;True\&quot; Icon=\&quot;FolderGo\&quot; Title=\&quot;Item 1\&quot;&gt;&lt;Items&gt;&lt;/Items&gt;&lt;/{0}:Panel&gt;&lt;{0}:Panel runat=\&quot;server\&quot; Border=\&quot;false\&quot; Collapsed=\&quot;true\&quot; Icon=\&quot;FolderWrench\&quot; Title=\&quot;Item 2\&quot;&gt;&lt;Items&gt;&lt;/Items&gt;&lt;/{0}:Panel&gt;&lt;/Items&gt;&lt;/{0}:Panel&gt;&lt;{0}:Panel runat=\&quot;server\&quot; Layout=\&quot;Fit\&quot; Title=\&quot;Center\&quot; Region=\&quot;Center\&quot;&gt;&lt;Items&gt;&lt;{0}:TabPanel runat=\&quot;server\&quot; ActiveTabIndex=\&quot;0\&quot; Border=\&quot;false\&quot; Title=\&quot;Center\&quot;&gt;&lt;Items&gt;&lt;{0}:Panel runat=\&quot;server\&quot; Closable=\&quot;true\&quot; Title=\&quot;Tab 1\&quot;&gt;&lt;Items&gt;&lt;/Items&gt;&lt;/{0}:Panel&gt;&lt;{0}:Panel runat=\&quot;server\&quot; Title=\&quot;Tab 2\&quot;&gt;&lt;Items&gt;&lt;/Items&gt;&lt;/{0}:Panel&gt;&lt;/Items&gt;&lt;/{0}:TabPanel&gt;&lt;/Items&gt;&lt;/{0}:Panel&gt;&lt;/Items&gt;&lt;/{0}:Viewport&gt;&quot;" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(Viewport), &quot;Build.ToolboxIcons.Viewport.bmp&quot;" />
        <Attribute Type="Designer" RawValue="typeof(ViewportDesigner)" />
        <Attribute Type="ParseChildren" RawValue="true" />
        <Attribute Type="PersistChildren" RawValue="false" />
        <Attribute Type="DefaultProperty" RawValue="&quot;Body&quot;" />
        <Attribute Type="Description" RawValue="A specialized content Container representing the viewable application area (the browser viewport)." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Listeners" Type="ContainerListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="ContainerDirectEvents">
          <Summary><![CDATA[Server-side Ajax Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Server-side Ajax Event Handlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ViewportBase" Abstract="true" Extends="ContainerBase" Inherits="IContent">
      <Summary><![CDATA[A specialized container representing the viewable application area (the browser viewport).]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" RawValue="A specialized container representing the viewable application area (the browser viewport)." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Height" Modifier="Override" Type="Unit">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Ignore" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="ReadOnly" RawValue="true" />
            <Attribute Type="Browsable" RawValue="false" />
            <Attribute Type="EditorBrowsable" RawValue="EditorBrowsableState.Never" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Hidden" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Width" Modifier="Override" Type="Unit">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Ignore" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="ReadOnly" RawValue="true" />
            <Attribute Type="Browsable" RawValue="false" />
            <Attribute Type="EditorBrowsable" RawValue="EditorBrowsableState.Never" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Hidden" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ContentEl" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The id of an existing HTML node to use as the panel's body content (defaults to '').]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. Viewport&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The id of an existing HTML node to use as the panel's body content (defaults to '')." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="ViewStateMemberAttribute" Extends="System">
      <Attributes>
        <Attribute Type="AttributeUsage" RawValue="AttributeTargets.Property, AllowMultiple = false" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="ViewStateProxy" Extends="StateManagedItem">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="WaitConfig" Extends="ExtObject">
      <Summary><![CDATA[A config object containing any or all of the following properties. If this object is not specified the status will be cleared using the defaults.]]></Summary>
      <Attributes>
        <Attribute Type="ToolboxItem" RawValue="false" />
        <Attribute Type="Description" RawValue="A config object containing any or all of the following properties. If this object is not specified the status will be cleared using the defaults." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Duration" Type="int" DefaultValue="-1">
          <Summary><![CDATA[The length of time in milliseconds that the progress bar should run before resetting itself (defaults to undefined, in which case it will run indefinitely until reset is called)]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="-1" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The length of time in milliseconds that the progress bar should run before resetting itself (defaults to undefined, in which case it will run indefinitely until reset is called)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Interval" Type="int" DefaultValue="1000">
          <Summary><![CDATA[The length of time in milliseconds between each progress update (defaults to 1000 ms)]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="1000" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The length of time in milliseconds between each progress update (defaults to 1000 ms)" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Increment" Type="int" DefaultValue="10">
          <Summary><![CDATA[The number of progress update segments to display within the progress bar (defaults to 10).  If the bar reaches the end and is still updating, it will automatically wrap back to the beginning.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="10" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The number of progress update segments to display within the progress bar (defaults to 10).  If the bar reaches the end and is still updating, it will automatically wrap back to the beginning." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Text" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[Optional text to display in the progress bar element (defaults to '').]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Optional text to display in the progress bar element (defaults to '')." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Fn" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[A callback function to execute after the progress bar finishes auto-updating. The function will be called with no arguments. This function will be ignored if duration is not specified since in that case the progress bar can only be stopped programmatically, so any required function should be called by the same code after it resets the progress bar.]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="A callback function to execute after the progress bar finishes auto-updating. The function will be called with no arguments. This function will be ignored if duration is not specified since in that case the progress bar can only be stopped programmatically, so any required function should be called by the same code after it resets the progress bar." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Scope" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The scope that is passed to the callback function (only applies when duration and fn are both passed).]]></Summary>
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The scope that is passed to the callback function (only applies when duration and fn are both passed)." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="WebConfigUtils">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="WebServiceTreeLoader" Extends="TreeLoader">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="WeekView" Extends="DayView">
      <Attributes>
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(DayView), &quot;Build.ToolboxIcons.CalendarPanel.bmp&quot;" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="DayCount" Modifier="Override" Type="int" DefaultValue="7">
          <Summary><![CDATA[The number of days to display in the view (defaults to 7)]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;6. DayView&quot;" />
            <Attribute Type="DefaultValue" RawValue="7" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The number of days to display in the view (defaults to 7)" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="Window" Extends="WindowBase">
      <Summary><![CDATA[A specialized panel intended for use as an application window. Windows are floated and draggable by default, and also provide specific behavior like the ability to maximize and restore (with an event for minimizing, since the minimize behavior is application-specific). Windows can also be linked to a Ext.WindowGroup or managed by the Ext.WindowManager to provide grouping, activation, to front/back and other application-specific behavior.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:Window runat=\&quot;server\&quot; Title=\&quot;Title\&quot; Collapsible=\&quot;true\&quot; Icon=\&quot;Application\&quot; Height=\&quot;185\&quot; Width=\&quot;350\&quot;&gt;&lt;Items&gt;&lt;/Items&gt;&lt;/{0}:Window&gt;&quot;" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(Window), &quot;Build.ToolboxIcons.Window.bmp&quot;" />
        <Attribute Type="Designer" RawValue="typeof(WindowDesigner)" />
        <Attribute Type="Description" RawValue="A specialized panel intended for use as an application window. Windows are floated and draggable by default, and also provide specific behavior like the ability to maximize and restore (with an event for minimizing, since the minimize behavior is application-specific). Windows can also be linked to a Ext.WindowGroup or managed by the Ext.WindowManager to provide grouping, activation, to front/back and other application-specific behavior." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Listeners" Type="WindowListeners">
          <Summary><![CDATA[Client-side JavaScript Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;listeners&quot;, JsonMode.Object" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Client-side JavaScript Event Handlers" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DirectEvents" Type="WindowDirectEvents">
          <Summary><![CDATA[Server-side Ajax Event Handlers]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;2. Observable&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Visible" />
            <Attribute Type="ConfigOption" RawValue="&quot;directEvents&quot;, JsonMode.Object" />
            <Attribute Type="ViewStateMember" />
            <Attribute Type="Description" RawValue="Server-side Ajax Event Handlers" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="WindowBase" Abstract="true" Extends="PanelBase">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="AutoWidth" Modifier="Override" Type="bool" DefaultValue="false">
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ReadOnly" RawValue="true" />
            <Attribute Type="Browsable" RawValue="false" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="EditorBrowsable" RawValue="EditorBrowsableState.Never" />
            <Attribute Type="DesignerSerializationVisibility" RawValue="DesignerSerializationVisibility.Hidden" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="AnimateTarget" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[Id or element from which the window should animate while opening (defaults to null with no animation).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetAnimateTarget&quot;" />
            <Attribute Type="Category" RawValue="&quot;7. Window&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ControlConverter)" />
            <Attribute Type="Description" RawValue="Id or element from which the window should animate while opening (defaults to null with no animation)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Closable" Modifier="Override" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to display the 'close' tool button and allow the user to close the window, false to hide the button and disallow closing the window (default to true).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. Window&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="True to display the 'close' tool button and allow the user to close the window, false to hide the button and disallow closing the window (default to true)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="CloseAction" Modifier="Override" Type="CloseAction" DefaultValue="CloseAction.Hide">
          <Summary><![CDATA[The action to take when the close button is clicked. The default action is 'close' which will actually remove the window from the DOM and destroy it. The other valid option is 'hide' which will simply hide the window by setting visibility to hidden and applying negative offsets, keeping the window available to be redisplayed via the show method.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="Category" RawValue="&quot;7. Window&quot;" />
            <Attribute Type="DefaultValue" RawValue="CloseAction.Hide" />
            <Attribute Type="Description" RawValue="The action to take when the close button is clicked. The default action is 'close' which will actually remove the window from the DOM and destroy it. The other valid option is 'hide' which will simply hide the window by setting visibility to hidden and applying negative offsets, keeping the window available to be redisplayed via the show method." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Constrain" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to constrain the window to the viewport, false to allow it to fall outside of the viewport (defaults to false). Optionally the header only can be constrained using ConstrainHeader.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. Window&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to constrain the window to the viewport, false to allow it to fall outside of the viewport (defaults to false). Optionally the header only can be constrained using ConstrainHeader." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ConstrainHeader" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to constrain the window header to the viewport, allowing the window body to fall outside of the viewport, false to allow the header to fall outside the viewport (defaults to false). Optionally the entire window can be constrained using constrain.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. Window&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to constrain the window header to the viewport, allowing the window body to fall outside of the viewport, false to allow the header to fall outside the viewport (defaults to false). Optionally the entire window can be constrained using constrain." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DefaultButton" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The id of a button to focus when this window received the focus.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. Window&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="The id of a button to focus when this window received the focus." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="DefaultRenderTo" Type="DefaultRenderTo" DefaultValue="DefaultRenderTo.Body">
          <Summary><![CDATA[The default render to Element (Body or Form). Using when AutoRender='false']]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.ToLower" />
            <Attribute Type="Category" RawValue="&quot;7. Window&quot;" />
            <Attribute Type="DefaultValue" RawValue="DefaultRenderTo.Body" />
            <Attribute Type="Description" RawValue="The default render to Element (Body or Form). Using when AutoRender='false'" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Draggable" Modifier="Override" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to allow the window to be dragged by the header bar, false to disable dragging (defaults to true). Note that by default the window will be centered in the viewport, so if dragging is disabled the window may need to be positioned programmatically after render (e.g., myWindow.setPosition(100, 100);).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. Window&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="True to allow the window to be dragged by the header bar, false to disable dragging (defaults to true). Note that by default the window will be centered in the viewport, so if dragging is disabled the window may need to be positioned programmatically after render (e.g., myWindow.setPosition(100, 100);)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ExpandOnShow" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to always expand the window when it is displayed, false to keep it in its current state (which may be collapsed) when displayed (defaults to true).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;7. Window&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="True to always expand the window when it is displayed, false to keep it in its current state (which may be collapsed) when displayed (defaults to true)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ExpandOnShowProxy" Access="Protected" Type="bool" DefaultValue="true">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;expandOnShow&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HiddenProxy" Access="Protected" Type="bool" DefaultValue="true">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;hidden&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Maximizable" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to display the 'maximize' tool button and allow the user to maximize the window, false to hide the button and disallow maximizing the window (defaults to false). Note that when a window is maximized, the tool button will automatically change to a 'restore' button with the appropriate behavior already built-in that will restore the window to its previous size.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. Window&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to display the 'maximize' tool button and allow the user to maximize the window, false to hide the button and disallow maximizing the window (defaults to false). Note that when a window is maximized, the tool button will automatically change to a 'restore' button with the appropriate behavior already built-in that will restore the window to its previous size." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Maximized" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to initially display the window in a maximized state. (Defaults to false).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. Window&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to initially display the window in a maximized state. (Defaults to false)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Height" Modifier="Override" Type="Unit" DefaultValue="typeof(Unit), &quot;&quot;">
          <Summary><![CDATA[The height of this component in pixels (defaults to auto).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetHeight&quot;" />
            <Attribute Type="Category" RawValue="&quot;7. Window&quot;" />
            <Attribute Type="DefaultValue" RawValue="typeof(Unit), &quot;&quot;" />
            <Attribute Type="Description" RawValue="The height of this component in pixels (defaults to auto)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MinHeight" Modifier="Override" Type="Unit" DefaultValue="typeof(Unit), &quot;100&quot;">
          <Summary><![CDATA[The minimum height in pixels allowed for this window (defaults to 100).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. Window&quot;" />
            <Attribute Type="DefaultValue" RawValue="typeof(Unit), &quot;100&quot;" />
            <Attribute Type="Description" RawValue="The minimum height in pixels allowed for this window (defaults to 100)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Width" Modifier="Override" Type="Unit" DefaultValue="typeof(Unit), &quot;&quot;">
          <Summary><![CDATA[The width of this component in pixels (defaults to auto).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;SetWidth&quot;" />
            <Attribute Type="Category" RawValue="&quot;7. Window&quot;" />
            <Attribute Type="DefaultValue" RawValue="typeof(Unit), &quot;&quot;" />
            <Attribute Type="Description" RawValue="The width of this component in pixels (defaults to auto)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="MinWidth" Modifier="Override" Type="Unit" DefaultValue="typeof(Unit), &quot;200&quot;">
          <Summary><![CDATA[The minimum width in pixels allowed for this window (defaults to 200). Only applies when resizable = true.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. Window&quot;" />
            <Attribute Type="DefaultValue" RawValue="typeof(Unit), &quot;200&quot;" />
            <Attribute Type="Description" RawValue="The minimum width in pixels allowed for this window (defaults to 200). Only applies when resizable = true." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Minimizable" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to display the 'minimize' tool button and allow the user to minimize the window, false to hide the button and disallow minimizing the window (defaults to false). Note that this button provides no implementation -- the behavior of minimizing a window is implementation-specific, so the minimize event must be handled and a custom minimize behavior implemented for this option to be useful.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. Window&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to display the 'minimize' tool button and allow the user to minimize the window, false to hide the button and disallow minimizing the window (defaults to false). Note that this button provides no implementation -- the behavior of minimizing a window is implementation-specific, so the minimize event must be handled and a custom minimize behavior implemented for this option to be useful." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Modal" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to make the window modal and mask everything behind it when displayed, false to display it without restricting access to other UI elements (defaults to false).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="DirectEventUpdate" RawValue="MethodName = &quot;ToggleModal&quot;" />
            <Attribute Type="Category" RawValue="&quot;7. Window&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to make the window modal and mask everything behind it when displayed, false to display it without restricting access to other UI elements (defaults to false)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="OnEsc" Type="string" DefaultValue="&quot;Ext.emptyFn&quot;">
          <Summary><![CDATA[Allows override of the built-in processing for the escape key. Default action is to close the Window (performing whatever action is specified in closeAction. To prevent the Window closing when the escape key is pressed, specify this as Ext.emptyFn (See Ext.emptyFn).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="JsonMode.Raw" />
            <Attribute Type="Category" RawValue="&quot;7. Window&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;Ext.emptyFn&quot;" />
            <Attribute Type="Description" RawValue="Allows override of the built-in processing for the escape key. Default action is to close the Window (performing whatever action is specified in closeAction. To prevent the Window closing when the escape key is pressed, specify this as Ext.emptyFn (See Ext.emptyFn)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Plain" Type="bool" DefaultValue="false">
          <Summary><![CDATA[True to render the window body with a transparent background so that it will blend into the framing elements, false to add a lighter background color to visually highlight the body element and separate it more distinctly from the surrounding frame (defaults to false).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. Window&quot;" />
            <Attribute Type="DefaultValue" RawValue="false" />
            <Attribute Type="Description" RawValue="True to render the window body with a transparent background so that it will blend into the framing elements, false to add a lighter background color to visually highlight the body element and separate it more distinctly from the surrounding frame (defaults to false)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Resizable" Type="bool" DefaultValue="true">
          <Summary><![CDATA[True to allow user resizing at each edge and corner of the window, false to disable resizing (defaults to true).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. Window&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="True to allow user resizing at each edge and corner of the window, false to disable resizing (defaults to true)." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="ResizeHandles" Type="string" DefaultValue="&quot;all&quot;">
          <Summary><![CDATA[A valid Ext.Resizable handles config string (defaults to 'all'). Only applies when resizable = true.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;7. Window&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;all&quot;" />
            <Attribute Type="Description" RawValue="A valid Ext.Resizable handles config string (defaults to 'all'). Only applies when resizable = true." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="InitCenter" Type="bool" DefaultValue="true">
          <Summary><![CDATA[Centers this window in the viewport when the window is initialized.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Category" RawValue="&quot;7. Window&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" RawValue="Centers this window in the viewport when the window is initialized." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="InitCenterProxy" Access="Protected" Type="bool" DefaultValue="true">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;initCenter&quot;" />
            <Attribute Type="DefaultValue" RawValue="true" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="RenderToProxy" Modifier="Override" Access="ProtectedInternal" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;renderTo&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods>
        <Method Name="AlignTo" ParamsRaw="string element, string position">
          <Summary><![CDATA[Aligns the window to the specified element]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Aligns the window to the specified element" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="AlignTo" ParamsRaw="string element, string position, int offsetX, int offsetY">
          <Summary><![CDATA[Aligns the window to the specified element]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Aligns the window to the specified element" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="AnchorTo" ParamsRaw="string element, string position">
          <Summary><![CDATA[Anchors this window to another element and realigns it when the window is resized or scrolled.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Anchors this window to another element and realigns it when the window is resized or scrolled." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="AnchorTo" ParamsRaw="string element, string position, int offsetX, int offsetY">
          <Summary><![CDATA[Anchors this window to another element and realigns it when the window is resized or scrolled.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Anchors this window to another element and realigns it when the window is resized or scrolled." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="AnchorTo" ParamsRaw="string element, string position, int offsetX, int offsetY, bool monitorScroll">
          <Summary><![CDATA[Anchors this window to another element and realigns it when the window is resized or scrolled.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Anchors this window to another element and realigns it when the window is resized or scrolled." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Center">
          <Summary><![CDATA[Centers this window in the viewport]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Centers this window in the viewport" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Close">
          <Summary><![CDATA[Closes the window, removes it from the DOM and destroys the window object. The beforeclose event is fired before the close happens and will cancel the close action if it returns false.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Closes the window, removes it from the DOM and destroys the window object. The beforeclose event is fired before the close happens and will cancel the close action if it returns false." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Focus" Modifier="Override">
          <Summary><![CDATA[Focuses the window. If a defaultButton is set, it will receive focus, otherwise the window itself will receive focus.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Focuses the window. If a defaultButton is set, it will receive focus, otherwise the window itself will receive focus." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Hide" Modifier="Override">
          <Summary><![CDATA[Hides the window, setting it to invisible and applying negative offsets.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Hides the window, setting it to invisible and applying negative offsets." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Hide" ParamsRaw="Control animateTarget">
          <Summary><![CDATA[Hides the window, setting it to invisible and applying negative offsets.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Hides the window, setting it to invisible and applying negative offsets." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Hide" ParamsRaw="Control animateTarget, string callback">
          <Summary><![CDATA[Hides the window, setting it to invisible and applying negative offsets.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Hides the window, setting it to invisible and applying negative offsets." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Hide" ParamsRaw="Control animateTarget, string callback, string scope">
          <Summary><![CDATA[Hides the window, setting it to invisible and applying negative offsets.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Hides the window, setting it to invisible and applying negative offsets." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Hide" ParamsRaw="string animateTarget">
          <Summary><![CDATA[Hides the window, setting it to invisible and applying negative offsets.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Hides the window, setting it to invisible and applying negative offsets." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Hide" ParamsRaw="string animateTarget, string callback">
          <Summary><![CDATA[Hides the window, setting it to invisible and applying negative offsets.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Hides the window, setting it to invisible and applying negative offsets." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Hide" ParamsRaw="string animateTarget, string callback, string scope">
          <Summary><![CDATA[Hides the window, setting it to invisible and applying negative offsets.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Hides the window, setting it to invisible and applying negative offsets." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Maximize">
          <Summary><![CDATA[Fits the window within its current container and automatically replaces the 'maximize' tool button with the 'restore' tool button.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Fits the window within its current container and automatically replaces the 'maximize' tool button with the 'restore' tool button." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Minimize">
          <Summary><![CDATA[Placeholder method for minimizing the window. By default, this method simply fires the minimize event since the behavior of minimizing a window is application-specific. To implement custom minimize behavior, either the minimize event can be handled or this method can be overridden.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Placeholder method for minimizing the window. By default, this method simply fires the minimize event since the behavior of minimizing a window is application-specific. To implement custom minimize behavior, either the minimize event can be handled or this method can be overridden." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Restore">
          <Summary><![CDATA[Restores a maximized window back to its original size and position prior to being maximized and also replaces the 'restore' tool button with the 'maximize' tool button.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Restores a maximized window back to its original size and position prior to being maximized and also replaces the 'restore' tool button with the 'maximize' tool button." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SetActive" ParamsRaw="bool active">
          <Summary><![CDATA[Makes this the active window by showing its shadow, or deactivates it by hiding its shadow. This method also fires the activate or deactivate event depending on which action occurred.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Makes this the active window by showing its shadow, or deactivates it by hiding its shadow. This method also fires the activate or deactivate event depending on which action occurred." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SetAnimateTarget" ParamsRaw="string element">
          <Summary><![CDATA[Sets the target element from which the window should animate while opening.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Sets the target element from which the window should animate while opening." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="SetAnimateTarget" ParamsRaw="Control element">
          <Summary><![CDATA[Sets the target element from which the window should animate while opening.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Sets the target element from which the window should animate while opening." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Show" Modifier="Override">
          <Summary><![CDATA[Shows the window, rendering it first if necessary, or activates it and brings it to front if hidden.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Shows the window, rendering it first if necessary, or activates it and brings it to front if hidden." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Show" ParamsRaw="Control animateTarget">
          <Summary><![CDATA[Shows the window, rendering it first if necessary, or activates it and brings it to front if hidden.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Shows the window, rendering it first if necessary, or activates it and brings it to front if hidden." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Show" ParamsRaw="Control animateTarget, string callback">
          <Summary><![CDATA[Shows the window, rendering it first if necessary, or activates it and brings it to front if hidden.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Shows the window, rendering it first if necessary, or activates it and brings it to front if hidden." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Show" ParamsRaw="Control animateTarget, string callback, string scope">
          <Summary><![CDATA[Shows the window, rendering it first if necessary, or activates it and brings it to front if hidden.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Shows the window, rendering it first if necessary, or activates it and brings it to front if hidden." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Show" ParamsRaw="string animateTarget">
          <Summary><![CDATA[Shows the window, rendering it first if necessary, or activates it and brings it to front if hidden.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Shows the window, rendering it first if necessary, or activates it and brings it to front if hidden." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Show" ParamsRaw="string animateTarget, string callback">
          <Summary><![CDATA[Shows the window, rendering it first if necessary, or activates it and brings it to front if hidden.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Shows the window, rendering it first if necessary, or activates it and brings it to front if hidden." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Show" ParamsRaw="string animateTarget, string callback, string scope">
          <Summary><![CDATA[Shows the window, rendering it first if necessary, or activates it and brings it to front if hidden.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Shows the window, rendering it first if necessary, or activates it and brings it to front if hidden." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="ToBack">
          <Summary><![CDATA[Sends this window to the back of (lower z-index than) any other visible windows]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Sends this window to the back of (lower z-index than) any other visible windows" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="ToFront">
          <Summary><![CDATA[Brings this window to the front of any other visible windows]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Brings this window to the front of any other visible windows" />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="ToggleMaximize">
          <Summary><![CDATA[A shortcut method for toggling between maximize and restore based on the current maximized state of the window.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="A shortcut method for toggling between maximize and restore based on the current maximized state of the window." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="ShowModal">
          <Summary><![CDATA[Shows the Window in a Modal state.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Shows the Window in a Modal state." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="HideModal">
          <Summary><![CDATA[Shows the Window in a non-Modal state.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Shows the Window in a non-Modal state." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="ToggleModal">
          <Summary><![CDATA[Toggle the Modal state of the Window. Shows or Hides the body mask.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Toggle the Modal state of the Window. Shows or Hides the body mask." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="ToggleModal" ParamsRaw="bool show">
          <Summary><![CDATA[Toggle the Modal state of the Window. Shows or Hides the body mask.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Toggle the Modal state of the Window. Shows or Hides the body mask." />
          </Attributes>
          <Parameters />
        </Method>
      </Methods>
    </Class>
    <Class Name="WindowDirectEvents" Extends="PanelDirectEvents">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Maximize" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after the window has been maximized.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Window), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;maximize&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the window has been maximized." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Minimize" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after the window has been minimized.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Window), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;minimize&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the window has been minimized." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Restore" Type="ComponentDirectEvent">
          <Summary><![CDATA[Fires after the window has been restored to its original size after being maximized.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Window), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;restore&quot;, typeof(DirectEventJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the window has been restored to its original size after being maximized." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="WindowListeners" Extends="PanelListeners">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="Maximize" Type="ComponentListener">
          <Summary><![CDATA[Fires after the window has been maximized.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Window), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;maximize&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the window has been maximized." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Minimize" Type="ComponentListener">
          <Summary><![CDATA[Fires after the window has been minimized.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Window), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;minimize&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the window has been minimized." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Restore" Type="ComponentListener">
          <Summary><![CDATA[Fires after the window has been restored to its original size after being maximized.]]></Summary>
          <Attributes>
            <Attribute Type="ListenerArgument" RawValue="0, &quot;item&quot;, typeof(Window), &quot;this&quot;" />
            <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
            <Attribute Type="ConfigOption" RawValue="&quot;restore&quot;, typeof(ListenerJsonConverter)" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="Fires after the window has been restored to its original size after being maximized." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="WindowManager" Extends="ScriptClass">
      <Attributes>
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions />
      <Methods />
    </Class>
    <Class Name="XmlReader" Extends="DataReader">
      <Summary><![CDATA[Data reader class to create an Array of Ext.data.Record objects from an XML document based on mappings in a provided Ext.data.Record constructor.]]></Summary>
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="TypeConverter" RawValue="typeof(ExpandableObjectConverter)" />
        <Attribute Type="Description" RawValue="Data reader class to create an Array of Ext.data.Record objects from an XML document based on mappings in a provided Ext.data.Record constructor." />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="IDPath" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The DomQuery path relative from the record element to the element that contains a record identifier value.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" RawValue="&quot;idPath&quot;" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The DomQuery path relative from the record element to the element that contains a record identifier value." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Record" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The DomQuery path to the repeated element which contains record information.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The DomQuery path to the repeated element which contains record information." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Success" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The DomQuery path to the success attribute used by forms.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The DomQuery path to the success attribute used by forms." />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="TotalProperty" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[The DomQuery path from which to retrieve the total number of records in the dataset. This is only needed if the whole dataset is not passed in one go, but is being paged from the remote server.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="ConfigOption" />
            <Attribute Type="Category" RawValue="&quot;Config Options&quot;" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="Description" RawValue="The DomQuery path from which to retrieve the total number of records in the dataset. This is only needed if the whole dataset is not passed in one go, but is being paged from the remote server." />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="XScript" Extends="XControl">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="DefaultProperty" RawValue="&quot;ScriptBlock&quot;" />
        <Attribute Type="ParseChildren" RawValue="true, &quot;ScriptBlock&quot;" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(XScript), &quot;Build.ToolboxIcons.XScript.bmp&quot;" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="ScriptBlock" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[Script text]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerDefaultProperty" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="Script text" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods />
    </Class>
    <Class Name="XTemplate" Extends="LazyObservable">
      <Attributes>
        <Attribute Type="Meta" />
        <Attribute Type="ToolboxData" RawValue="&quot;&lt;{0}:XTemplate runat=\&quot;server\&quot;&gt;&lt;/{0}:XTemplate&gt;&quot;" />
        <Attribute Type="ToolboxBitmap" RawValue="typeof(XTemplate), &quot;Build.ToolboxIcons.XTemplate.bmp&quot;" />
        <Attribute Type="ToolboxItem" RawValue="true" />
        <Attribute Type="Designer" RawValue="typeof(EmptyDesigner)" />
        <Attribute Type="Description" />
      </Attributes>
      <ConfigOptions>
        <ConfigOption Name="FunctionsProxy" Access="ProtectedInternal" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="ConfigOption" RawValue="&quot;functions&quot;, JsonMode.Raw" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="Html" Type="string" DefaultValue="&quot;&quot;">
          <Summary><![CDATA[Template text]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="NotifyParentProperty" RawValue="true" />
            <Attribute Type="PersistenceMode" RawValue="PersistenceMode.InnerProperty" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" RawValue="Template text" />
          </Attributes>
        </ConfigOption>
        <ConfigOption Name="HtmlProxy" Access="ProtectedInternal" Type="string" DefaultValue="&quot;&quot;">
          <Attributes>
            <Attribute Type="ConfigOption" RawValue="&quot;html&quot;, JsonMode.Raw" />
            <Attribute Type="DefaultValue" RawValue="&quot;&quot;" />
            <Attribute Type="Description" />
          </Attributes>
        </ConfigOption>
      </ConfigOptions>
      <Methods>
        <Method Name="Append" ParamsRaw="string target, object data">
          <Summary><![CDATA[Applies the supplied values to the template and appends the new node(s) to el.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Applies the supplied values to the template and appends the new node(s) to el." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Append" ParamsRaw="Component target, object data">
          <Summary><![CDATA[Applies the supplied values to the template and appends the new node(s) to el.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Applies the supplied values to the template and appends the new node(s) to el." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Append" ParamsRaw="Element target, object data">
          <Summary><![CDATA[Applies the supplied values to the template and appends the new node(s) to el.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Applies the supplied values to the template and appends the new node(s) to el." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="InsertAfter" ParamsRaw="string target, object data">
          <Summary><![CDATA[Applies the supplied values to the template and inserts the new node(s) after el.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Applies the supplied values to the template and inserts the new node(s) after el." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="InsertAfter" ParamsRaw="Component target, object data">
          <Summary><![CDATA[Applies the supplied values to the template and inserts the new node(s) after el.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Applies the supplied values to the template and inserts the new node(s) after el." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="InsertAfter" ParamsRaw="Element target, object data">
          <Summary><![CDATA[Applies the supplied values to the template and inserts the new node(s) after el.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Applies the supplied values to the template and inserts the new node(s) after el." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="InsertBefore" ParamsRaw="string target, object data">
          <Summary><![CDATA[Applies the supplied values to the template and inserts the new node(s) before el.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Applies the supplied values to the template and inserts the new node(s) before el." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="InsertBefore" ParamsRaw="Component target, object data">
          <Summary><![CDATA[Applies the supplied values to the template and inserts the new node(s) before el.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Applies the supplied values to the template and inserts the new node(s) before el." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="InsertBefore" ParamsRaw="Element target, object data">
          <Summary><![CDATA[Applies the supplied values to the template and inserts the new node(s) before el.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Applies the supplied values to the template and inserts the new node(s) before el." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="InsertFirst" ParamsRaw="string target, object data">
          <Summary><![CDATA[Applies the supplied values to the template and inserts the new node(s) as the first child of el.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Applies the supplied values to the template and inserts the new node(s) as the first child of el." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="InsertFirst" ParamsRaw="Component target, object data">
          <Summary><![CDATA[Applies the supplied values to the template and inserts the new node(s) as the first child of el.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Applies the supplied values to the template and inserts the new node(s) as the first child of el." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="InsertFirst" ParamsRaw="Element target, object data">
          <Summary><![CDATA[Applies the supplied values to the template and inserts the new node(s) as the first child of el.]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Applies the supplied values to the template and inserts the new node(s) as the first child of el." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Overwrite" ParamsRaw="string target, object data">
          <Summary><![CDATA[Applies the supplied values to the template and overwrites the content of el with the new node(s).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Applies the supplied values to the template and overwrites the content of el with the new node(s)." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Overwrite" ParamsRaw="Element target, object data">
          <Summary><![CDATA[Applies the supplied values to the template and overwrites the content of el with the new node(s).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Applies the supplied values to the template and overwrites the content of el with the new node(s)." />
          </Attributes>
          <Parameters />
        </Method>
        <Method Name="Overwrite" ParamsRaw="Component target, object data">
          <Summary><![CDATA[Applies the supplied values to the template and overwrites the content of el with the new node(s).]]></Summary>
          <Attributes>
            <Attribute Type="Meta" />
            <Attribute Type="Description" RawValue="Applies the supplied values to the template and overwrites the content of el with the new node(s)." />
          </Attributes>
          <Parameters />
        </Method>
      </Methods>
    </Class>
  </Classes>
</Ext.Net>